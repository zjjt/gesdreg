{"version":3,"sources":["meteor://ðŸ’»app/packages/orionsoft:apollo/apollo.js","meteor://ðŸ’»app/packages/orionsoft:apollo/formatError.js","meteor://ðŸ’»app/packages/orionsoft:apollo/getContext.js","meteor://ðŸ’»app/packages/orionsoft:apollo/log.js","meteor://ðŸ’»app/packages/orionsoft:apollo/overrideDDP.js"],"names":["module","export","formatError","createApolloServer","graphqlExpress","graphiqlExpress","watch","require","v","bodyParser","express","Meteor","WebApp","_","log","defaultGetContext","Fiber","Npm","defaultOptions","debug","defaultConfig","path","maxAccountsCacheSizeInMB","graphiql","graphiqlPath","logCalls","graphiqlOptions","passHeader","configServer","getContext","givenOptions","givenConfig","config","graphQLServer","expressServer","options","isFunction","req","context","ip","connection","remoteAddress","current","graphQLContext","use","json","bindEnvironment","endpointURL","connectHandlers","exportDefault","error","console","warn","message","reason","reverse","join","stack","split","slice","details","originalError","invalidKeys","keys","forEach","validationContext","key","keyErrorMessage","name","check","Accounts","headers","authorization","token","String","hashedToken","_hashLoginToken","user","users","findOne","fields","_id","expiresAt","_tokenExpiration","services","resume","loginTokens","when","isExpired","Date","userId","loginToken","body","query","info","operationName","underline","bold","grey","variables","isObject","obj","JSON","parse","isEmpty","e","DDP","_CurrentInvocation","get","_nodeCodeMustBeInFiber","_meteor_dynamics","slot"],"mappings":"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","file":"/packages/orionsoft_apollo.js","sourcesContent":["/* global Npm */\nimport {graphqlExpress, graphiqlExpress} from 'graphql-server-express'\nimport bodyParser from 'body-parser'\nimport express from 'express'\nimport {Meteor} from 'meteor/meteor'\nimport {WebApp} from 'meteor/webapp'\nimport {_} from 'meteor/underscore'\nimport log from './log'\nimport defaultGetContext from './getContext'\nimport './overrideDDP'\nimport formatError from './formatError'\nconst Fiber = Npm.require('fibers')\n\nexport {formatError}\n\nconst defaultOptions = {\n  debug: false,\n  formatError\n}\n\nconst defaultConfig = {\n  path: '/graphql',\n  maxAccountsCacheSizeInMB: 1,\n  graphiql: true,\n  graphiqlPath: '/graphiql',\n  logCalls: true,\n  graphiqlOptions: {\n    passHeader: \"'Authorization': localStorage['Meteor.loginToken']\"\n  },\n  configServer: graphQLServer => {},\n  getContext: defaultGetContext\n}\n\nexport const createApolloServer = (givenOptions, givenConfig) => {\n  let graphiqlOptions = {...defaultConfig.graphiqlOptions, ...givenConfig.graphiqlOptions}\n  let config = {...defaultConfig, ...givenConfig}\n  config.graphiqlOptions = graphiqlOptions\n\n  const graphQLServer = express()\n\n  config.configServer(graphQLServer)\n\n  const expressServer = graphqlExpress(req => {\n    let options = _.isFunction(givenOptions) ? givenOptions(req) : givenOptions\n\n    // Merge in the defaults\n    options = {...defaultOptions, ...options}\n    options.context = {\n      ip: req.connection.remoteAddress,\n      ...config.getContext(req)\n    }\n    Fiber.current.graphQLContext = options.context\n\n    if (config.logCalls) {\n      log({req, context: options.context})\n    }\n\n    return options\n  })\n\n  // GraphQL endpoint\n  graphQLServer.use(config.path, bodyParser.json(), Meteor.bindEnvironment(expressServer))\n\n  // Start GraphiQL if enabled\n  if (config.graphiql) {\n    const graphiql = graphiqlExpress({...config.graphiqlOptions, endpointURL: config.path})\n    graphQLServer.use(config.graphiqlPath, graphiql)\n  }\n\n  // This binds the specified paths to the Express server running Apollo + GraphiQL\n  WebApp.connectHandlers.use(Meteor.bindEnvironment(graphQLServer))\n}\n","export default function(error) {\n  if (!error.path) {\n    console.warn(`GraphQL Error: ${error.message}`)\n    return {\n      message: error.message,\n      reason: error.reason,\n      path: error.path\n    }\n  }\n  console.warn(`GraphQL error on \"${error.path.reverse().join('.')}\"`)\n  console.warn(\n    error.stack\n      .split('\\n')\n      .slice(0, 4)\n      .join('\\n')\n  )\n  let details = {}\n  try {\n    if (\n      (error.originalError && error.originalError.invalidKeys) ||\n      error.originalError.error === 'validation-error'\n    ) {\n      details.invalidKeys = {}\n      const keys = error.originalError.invalidKeys || error.originalError.details\n      keys.forEach(key => {\n        let context = error.originalError.validationContext\n        let message = key.message\n        if (context) {\n          message = context.keyErrorMessage(key.name)\n        }\n        details.invalidKeys[key.name] = message\n      })\n    }\n  } catch (error) {\n    console.log('Error in formatError:')\n    console.log(error)\n    console.log(error.stack)\n  }\n  return {\n    message: error.message,\n    reason: error.reason,\n    path: error.path,\n    details\n  }\n}\n","import {check} from 'meteor/check'\nimport {Accounts} from 'meteor/accounts-base'\nimport {Meteor} from 'meteor/meteor'\n\nexport default function (req) {\n  // Get the token from the header\n  if (!req.headers.authorization) return {}\n\n  const token = req.headers.authorization\n  check(token, String)\n  const hashedToken = Accounts._hashLoginToken(token)\n\n  // Get the user from the database\n  const user = Meteor.users.findOne({'services.resume.loginTokens.hashedToken': hashedToken}, { fields: { _id: 1, 'services.resume.loginTokens.$': 1 } })\n\n  if (!user) return {}\n  const expiresAt = Accounts._tokenExpiration(user.services.resume.loginTokens[0].when)\n  const isExpired = expiresAt < new Date()\n  if (isExpired) return {}\n\n  return {\n    userId: user._id,\n    loginToken: token\n  }\n}\n","import {_} from 'meteor/underscore'\n\nexport default function ({req, context}) {\n  const options = req.body[0]\n  if (!options) return\n  if (!options.query) return\n  console.info(`New GraphQL query ${options.operationName}:`.underline.bold)\n  console.info(`Token: ${context.loginToken}\\n`.grey)\n  console.info(options.query)\n  if (options.variables) {\n    try {\n      if (_.isObject(options.variables)) {\n        console.info('\\n')\n        console.info('Variables:'.underline)\n        console.info(options.variables)\n      } else {\n        const obj = JSON.parse(options.variables)\n        if (!_.isEmpty(obj)) {\n          console.info('\\n')\n          console.info('Variables:'.underline)\n          console.info('\\n')\n          console.info(obj)\n        }\n      }\n    } catch (e) {}\n  }\n  console.info('\\n')\n}\n","/* global Npm */\nimport {DDP} from 'meteor/ddp'\nimport {Meteor} from 'meteor/meteor'\nconst Fiber = Npm.require('fibers')\n\nDDP._CurrentInvocation.get = function () {\n  Meteor._nodeCodeMustBeInFiber()\n\n  if (Fiber.current._meteor_dynamics && Fiber.current._meteor_dynamics[this.slot]) {\n    return Fiber.current._meteor_dynamics[this.slot]\n  }\n\n  if (!Fiber.current.graphQLContext) return\n\n  return {\n    userId: Fiber.current.graphQLContext.userId\n  }\n}\n"]}