var require = meteorInstall({"imports":{"api":{"collections.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/collections.js                                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
    WhatsNew: function () {                                                                                            // 1
        return WhatsNew;                                                                                               // 1
    },                                                                                                                 // 1
    RegUpdated: function () {                                                                                          // 1
        return RegUpdated;                                                                                             // 1
    },                                                                                                                 // 1
    Historique: function () {                                                                                          // 1
        return Historique;                                                                                             // 1
    },                                                                                                                 // 1
    RgtManuel: function () {                                                                                           // 1
        return RgtManuel;                                                                                              // 1
    }                                                                                                                  // 1
});                                                                                                                    // 1
var Meteor = void 0;                                                                                                   // 1
module.watch(require("meteor/mongo"), {                                                                                // 1
    Meteor: function (v) {                                                                                             // 1
        Meteor = v;                                                                                                    // 1
    }                                                                                                                  // 1
}, 0);                                                                                                                 // 1
var Mongo = void 0;                                                                                                    // 1
module.watch(require("meteor/mongo"), {                                                                                // 1
    Mongo: function (v) {                                                                                              // 1
        Mongo = v;                                                                                                     // 1
    }                                                                                                                  // 1
}, 1);                                                                                                                 // 1
var FilesCollection = void 0;                                                                                          // 1
module.watch(require("meteor/ostrio:files"), {                                                                         // 1
    FilesCollection: function (v) {                                                                                    // 1
        FilesCollection = v;                                                                                           // 1
    }                                                                                                                  // 1
}, 2);                                                                                                                 // 1
var WhatsNew = new Mongo.Collection('WhatsNew');                                                                       // 6
var RegUpdated = new Mongo.Collection('RegUpdated');                                                                   // 7
var Historique = new Mongo.Collection('Historique');                                                                   // 8
var RgtManuel = new FilesCollection({                                                                                  // 9
    storagePath: process.env.PWD + '/FICHIERS/rgtmanuel/',                                                             // 10
    namingFunction: function () {                                                                                      // 11
        return 'rgtmanuel';                                                                                            // 12
    },                                                                                                                 // 13
    collectionName: 'RgtManuel',                                                                                       // 14
    allowClientCode: false,                                                                                            // 15
    onBeforeunloadMessage: function () {                                                                               // 16
        if (Meteor.isClient) {                                                                                         // 17
            alert("Le fichier est toujours en cours de téléchargement.Veuillez patienter...");                         // 18
        } else {                                                                                                       // 19
            return 'Le fichier est toujours en cours de téléchargement.Veuillez patienter...';                         // 21
        }                                                                                                              // 22
    },                                                                                                                 // 24
    onBeforeUpload: function (file) {                                                                                  // 25
        //allow file size under 10mb and only xlsx or xls                                                              // 26
        if (file.size <= 10485760 && /xls|xlsx/i.test(file.extension)) {                                               // 27
            return true;                                                                                               // 28
        } else {                                                                                                       // 29
            if (Meteor.isClient) {                                                                                     // 30
                alert("Veuillez fournir un fichier excel xls ou xlsx. ");                                              // 31
            } else {                                                                                                   // 32
                return 'Veuillez fournir un fichier excel xls ou xlsx. ';                                              // 33
            }                                                                                                          // 34
        }                                                                                                              // 36
    }                                                                                                                  // 37
});                                                                                                                    // 9
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"utils":{"utilitaires.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/utils/utilitaires.js                                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
    englishDateToFr: function () {                                                                                     // 1
        return englishDateToFr;                                                                                        // 1
    },                                                                                                                 // 1
    frenchDateToEn: function () {                                                                                      // 1
        return frenchDateToEn;                                                                                         // 1
    },                                                                                                                 // 1
    formatNumberInMoney: function () {                                                                                 // 1
        return formatNumberInMoney;                                                                                    // 1
    },                                                                                                                 // 1
    isEmptyObject: function () {                                                                                       // 1
        return isEmptyObject;                                                                                          // 1
    },                                                                                                                 // 1
    isEmptyObjectProps: function () {                                                                                  // 1
        return isEmptyObjectProps;                                                                                     // 1
    },                                                                                                                 // 1
    uniq: function () {                                                                                                // 1
        return uniq;                                                                                                   // 1
    },                                                                                                                 // 1
    DAYS_IN_MONTH: function () {                                                                                       // 1
        return DAYS_IN_MONTH;                                                                                          // 1
    },                                                                                                                 // 1
    isValidDate: function () {                                                                                         // 1
        return isValidDate;                                                                                            // 1
    },                                                                                                                 // 1
    convertInTextFromFrenchDate: function () {                                                                         // 1
        return convertInTextFromFrenchDate;                                                                            // 1
    },                                                                                                                 // 1
    checkRdvDate: function () {                                                                                        // 1
        return checkRdvDate;                                                                                           // 1
    },                                                                                                                 // 1
    checkRdvDateMD: function () {                                                                                      // 1
        return checkRdvDateMD;                                                                                         // 1
    }                                                                                                                  // 1
});                                                                                                                    // 1
var moment = void 0;                                                                                                   // 1
module.watch(require("meteor/momentjs:moment"), {                                                                      // 1
    moment: function (v) {                                                                                             // 1
        moment = v;                                                                                                    // 1
    }                                                                                                                  // 1
}, 0);                                                                                                                 // 1
                                                                                                                       //
var momentBusiness = require('moment-business-days');                                                                  // 1
                                                                                                                       //
momentBusiness.locale('us', {                                                                                          // 5
    workingWeekdays: [1, 2, 3, 4, 5]                                                                                   // 6
});                                                                                                                    // 5
                                                                                                                       //
var englishDateToFr = function (date) {                                                                                // 9
    if (typeof date == "undefined" || date == null) return "NON DEFINI";                                               // 10
    var yy = date.substring(0, 4);                                                                                     // 12
    var mm = date.substring(5, 7);                                                                                     // 13
    var dd = date.substring(8);                                                                                        // 14
    return dd + "-" + mm + "-" + yy;                                                                                   // 15
};                                                                                                                     // 16
                                                                                                                       //
var frenchDateToEn = function (date) {                                                                                 // 17
    //21-02-2018                                                                                                       // 18
    var yy = date.substring(6);                                                                                        // 19
    var mm = date.substring(3, 5);                                                                                     // 20
    var dd = date.substring(0, 2);                                                                                     // 21
    return yy + "-" + mm + "-" + dd;                                                                                   // 22
};                                                                                                                     // 23
                                                                                                                       //
var formatNumberInMoney = function (x) {                                                                               // 25
    console.log(x);                                                                                                    // 26
    var parts = x.toString().split(".");                                                                               // 27
    parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");                                                         // 28
    return parts.join(".");                                                                                            // 29
};                                                                                                                     // 30
                                                                                                                       //
function isEmptyObject(o) {                                                                                            // 32
    return Object.keys(o).every(function (x) {                                                                         // 33
        return o[x] === '' || o[x] === null || typeof o[x] == "undefined"; // or just "return o[x];" for falsy values  // 34
    });                                                                                                                // 35
}                                                                                                                      // 36
                                                                                                                       //
function isEmptyObjectProps(o, prop) {                                                                                 // 38
    return o[prop] === '' || o[prop] === null || typeof o[prop] == "undefined";                                        // 39
}                                                                                                                      // 40
                                                                                                                       //
//Les fonctions suivantes servent a enlever les dupliquer des tableaux                                                 // 41
var head = function (ls) {                                                                                             // 42
    return ls[0];                                                                                                      // 42
};                                                                                                                     // 42
                                                                                                                       //
var tail = function (ls) {                                                                                             // 43
    return ls.slice(1);                                                                                                // 43
};                                                                                                                     // 43
                                                                                                                       //
var empty = function (ls) {                                                                                            // 44
    return ls.length == 0;                                                                                             // 44
};                                                                                                                     // 44
                                                                                                                       //
var cons = function (a, b) {                                                                                           // 45
    return [a].concat(b);                                                                                              // 45
};                                                                                                                     // 45
                                                                                                                       //
var has = function (x, ls) {                                                                                           // 47
    return empty(ls) ? false : head(ls) == x || has(x, tail(ls));                                                      // 48
};                                                                                                                     // 49
                                                                                                                       //
var _uniq = function (ls, seen) {                                                                                      // 51
    return empty(ls) ? [] : has(head(ls), seen) ? _uniq(tail(ls), seen) : cons(head(ls), _uniq(tail(ls), cons(head(ls), seen)));
};                                                                                                                     // 58
                                                                                                                       //
var uniq = function (ls) {                                                                                             // 60
    return _uniq(ls, []);                                                                                              // 61
};                                                                                                                     // 62
                                                                                                                       //
var DAYS_IN_MONTH = [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];                                            // 64
                                                                                                                       //
function daysInMonth(year, month) {                                                                                    // 66
    // isValidDate checked that year and month are integers already.                                                   // 67
    // February of leap years. Assumes that the Gregorian calendar extends                                             // 69
    // infinitely in the future and in the past.                                                                       // 70
    if (month === 2 && year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0)) {                                     // 71
        return 29;                                                                                                     // 72
    } // Everything else.                                                                                              // 73
                                                                                                                       //
                                                                                                                       //
    return DAYS_IN_MONTH[month];                                                                                       // 76
}                                                                                                                      // 77
                                                                                                                       //
function isValidDate(year, month, day) {                                                                               // 79
    day = parseInt(day, 10);                                                                                           // 80
    month = parseInt(month, 10);                                                                                       // 81
    year = parseInt(year, 10);                                                                                         // 82
    console.log(day + "-" + month + "-" + year);                                                                       // 83
    return (// Check that year, month and day are integers. Deals with NaN.                                            // 84
        year === Math.round(year) && month === Math.round(month) && day === Math.round(day) && // Any year is valid. Check that month and day are valid.
        month >= 1 && month <= 12 && day >= 1 && day <= daysInMonth(year, month)                                       // 88
    );                                                                                                                 // 84
}                                                                                                                      // 90
                                                                                                                       //
var convertInTextFromFrenchDate = function (e) {                                                                       // 92
    //alert(e);                                                                                                        // 93
    if (e.length >= 10) {                                                                                              // 94
        var day = e.substring(0, 2);                                                                                   // 95
        var mois = e.substring(3, 5);                                                                                  // 96
        var year = e.substring(6); //alert(isValidDate(year,mois,day))                                                 // 97
                                                                                                                       //
        if (isValidDate(year, mois, day)) return year + mois + day;else {                                              // 99
            alert("Veuillez fournir une date valide"); //location.reload()                                             // 102
        }                                                                                                              // 104
    }                                                                                                                  // 105
};                                                                                                                     // 106
                                                                                                                       //
var checkRdvDate = function (e) {                                                                                      // 108
    //console.log("in util funct rdv")                                                                                 // 109
    var dateReceptionY = e.infoSurRgt[0] && e.infoSurRgt[0].DATE_RECEPTION ? e.infoSurRgt[0].DATE_RECEPTION.substring(0, 4) : null;
    var dateReceptionM = e.infoSurRgt[0] && e.infoSurRgt[0].DATE_RECEPTION ? e.infoSurRgt[0].DATE_RECEPTION.substring(5, 7) : null;
    var dateReceptionD = e.infoSurRgt[0] && e.infoSurRgt[0].DATE_RECEPTION ? e.infoSurRgt[0].DATE_RECEPTION.substring(8) : null;
    var typeSinistre = e.infoSurRgt[0] ? e.infoSurRgt[0].TYPE_SINISTRE : null;                                         // 113
    var dateRDV = e.dateRDV;                                                                                           // 114
    var today = moment(Date.now()).format("YYYY-MM-DD");                                                               // 115
    var data = void 0;                                                                                                 // 116
    var res = void 0;                                                                                                  // 117
    typeSinistre = typeSinistre ? typeSinistre.trim() : null; //console.log("dateRDV= "+moment(dateRDV).format("DD-MM-YYYY")+" todayIs= "+moment(today).format("DD-MM-YYYY"));
                                                                                                                       //
    if (isValidDate(dateReceptionY, dateReceptionM, dateReceptionD) && dateRDV && (e.statut_reg_retirer !== "PRET" || e.statut_reg_retirer !== "SORTIE" || e.statut_reg_retirer !== "REFUSER")) {
        //on check le type de prestation                                                                               // 121
        console.log("le statut est " + e.statut_reg_retirer); // console.log("typeSinistre: "+typeSinistre);           // 122
                                                                                                                       //
        switch (typeSinistre) {                                                                                        // 124
            case "RACHAT PARTIEL":                                                                                     // 125
            case "AVANCE":                                                                                             // 126
                //delai de traitement de 21 jr et alerte 7jr avant                                                     // 127
                if (moment(dateRDV).isBefore(today)) {                                                                 // 128
                    data = {                                                                                           // 129
                        nbj: -1,                                                                                       // 130
                        alerte: "TERMINER"                                                                             // 131
                    };                                                                                                 // 129
                    return data;                                                                                       // 133
                } else {                                                                                               // 134
                    res = momentBusiness(dateRDV).businessDiff(momentBusiness(today));                                 // 135
                                                                                                                       //
                    if (res <= 7) {                                                                                    // 136
                        data = {                                                                                       // 137
                            nbj: res,                                                                                  // 138
                            alerte: res <= 7 && res >= 5 ? "NORMAL" : "HAUTE" //console.log("in util funct rachat partiel")
                            //console.dir(res);                                                                        // 142
                                                                                                                       //
                        };                                                                                             // 137
                        return data;                                                                                   // 143
                    } else {                                                                                           // 144
                        data = {                                                                                       // 145
                            nbj: res,                                                                                  // 146
                            alerte: "RAS"                                                                              // 147
                        };                                                                                             // 145
                        return data;                                                                                   // 149
                    }                                                                                                  // 150
                }                                                                                                      // 151
                                                                                                                       //
                break;                                                                                                 // 153
                                                                                                                       //
            case "TERME":                                                                                              // 154
            case "IFC":                                                                                                // 155
                if (moment(dateRDV).isBefore(today)) {                                                                 // 156
                    data = {                                                                                           // 157
                        nbj: -1,                                                                                       // 158
                        alerte: "TERMINER"                                                                             // 159
                    };                                                                                                 // 157
                    return data;                                                                                       // 161
                } else {                                                                                               // 162
                    //delai de traitement de 15 jr et alerte 7jr avant                                                 // 163
                    res = momentBusiness(dateRDV).businessDiff(momentBusiness(today));                                 // 164
                                                                                                                       //
                    if (res <= 7) {                                                                                    // 165
                        data = {                                                                                       // 166
                            nbj: res,                                                                                  // 167
                            alerte: res <= 7 && res >= 5 ? "NORMAL" : "HAUTE" //console.log("in util funct ifc")       // 168
                                                                                                                       //
                        };                                                                                             // 166
                        console.log(res);                                                                              // 171
                        return data;                                                                                   // 172
                    } else {                                                                                           // 173
                        data = {                                                                                       // 174
                            nbj: res,                                                                                  // 175
                            alerte: "RAS"                                                                              // 176
                        };                                                                                             // 174
                        return data;                                                                                   // 178
                    }                                                                                                  // 179
                }                                                                                                      // 180
                                                                                                                       //
                break;                                                                                                 // 182
                                                                                                                       //
            case "RACHAT TOTAL":                                                                                       // 183
                var codeProduit = e.wnupo.toString().substring(0, 3); //console.log("codeproduit: "+codeProduit+" et type= "+typeof codeProduit)
                                                                                                                       //
                switch (codeProduit) {                                                                                 // 186
                    case "110":                                                                                        // 187
                    case "112":                                                                                        // 188
                    case "116":                                                                                        // 189
                    case "120":                                                                                        // 190
                    case "122":                                                                                        // 191
                    case "130":                                                                                        // 192
                    case "140":                                                                                        // 193
                    case "162":                                                                                        // 194
                    case "166":                                                                                        // 195
                    case "168":                                                                                        // 196
                    case "210":                                                                                        // 197
                    case "212":                                                                                        // 198
                    case "216":                                                                                        // 199
                    case "218":                                                                                        // 200
                    case "220":                                                                                        // 201
                    case "224":                                                                                        // 202
                    case "230":                                                                                        // 203
                    case "234":                                                                                        // 204
                    case "241":                                                                                        // 205
                    case "242":                                                                                        // 206
                    case "243":                                                                                        // 207
                    case "246":                                                                                        // 208
                    case "247":                                                                                        // 209
                    case "248":                                                                                        // 210
                    case "260":                                                                                        // 211
                    case "310":                                                                                        // 212
                    case "312":                                                                                        // 213
                    case "330":                                                                                        // 214
                    case "331":                                                                                        // 215
                    case "332":                                                                                        // 216
                    case "333":                                                                                        // 217
                    case "334":                                                                                        // 218
                    case "360":                                                                                        // 219
                    case "791":                                                                                        // 220
                    case "793":                                                                                        // 221
                        if (moment(dateRDV).isBefore(today)) {                                                         // 222
                            data = {                                                                                   // 223
                                nbj: -1,                                                                               // 224
                                alerte: "TERMINER"                                                                     // 225
                            };                                                                                         // 223
                            return data;                                                                               // 227
                        } else {                                                                                       // 228
                            //cas individuelle                                                                         // 229
                            //delai de traitement de 60 jr et alerte 15jr avant                                        // 230
                            res = momentBusiness(dateRDV).businessDiff(momentBusiness(today)); //console.log("resultat de res: "+res);
                                                                                                                       //
                            if (res <= 15) {                                                                           // 233
                                data = {                                                                               // 234
                                    nbj: res,                                                                          // 235
                                    alerte: res <= 15 && res >= 13 ? "NORMAL" : "HAUTE" //console.log("in util funct rachat total i")
                                    //console.dir(res);                                                                // 239
                                                                                                                       //
                                };                                                                                     // 234
                                return data;                                                                           // 240
                            } else {                                                                                   // 241
                                data = {                                                                               // 242
                                    nbj: res,                                                                          // 243
                                    alerte: "RAS"                                                                      // 244
                                };                                                                                     // 242
                                return data;                                                                           // 246
                            }                                                                                          // 247
                        }                                                                                              // 248
                                                                                                                       //
                        break;                                                                                         // 250
                                                                                                                       //
                    case "710":                                                                                        // 251
                    case "713":                                                                                        // 252
                    case "715":                                                                                        // 253
                    case "717":                                                                                        // 254
                    case "720":                                                                                        // 255
                    case "722":                                                                                        // 256
                    case "724":                                                                                        // 257
                    case "726":                                                                                        // 258
                    case "731":                                                                                        // 259
                    case "732":                                                                                        // 260
                    case "742":                                                                                        // 261
                    case "745":                                                                                        // 262
                    case "752":                                                                                        // 263
                    case "755":                                                                                        // 264
                    case "760":                                                                                        // 265
                    case "766":                                                                                        // 266
                    case "770":                                                                                        // 267
                    case "772":                                                                                        // 268
                    case "773":                                                                                        // 269
                    case "774":                                                                                        // 270
                    case "776":                                                                                        // 271
                    case "777":                                                                                        // 272
                    case "778":                                                                                        // 273
                    case "782":                                                                                        // 274
                    case "784":                                                                                        // 275
                    case "786":                                                                                        // 276
                        if (moment(dateRDV).isBefore(today)) {                                                         // 277
                            data = {                                                                                   // 278
                                nbj: -1,                                                                               // 279
                                alerte: "TERMINER"                                                                     // 280
                            };                                                                                         // 278
                            return data;                                                                               // 282
                        } else {                                                                                       // 283
                            //cas bancassurances                                                                       // 284
                            //delai de traitement de 45 jr et alerte 10jr avant                                        // 285
                            res = momentBusiness(dateRDV, 'YYYY-MM-DD').businessDiff(momentBusiness(today, 'YYYY-MM-DD'));
                            console.log("resultat de res: " + res);                                                    // 287
                                                                                                                       //
                            if (res <= 10) {                                                                           // 288
                                data = {                                                                               // 289
                                    nbj: res,                                                                          // 290
                                    alerte: res <= 10 && res >= 8 ? "NORMAL" : "HAUTE"                                 // 291
                                };                                                                                     // 289
                                console.log("in util funct rachat total b");                                           // 293
                                console.dir(res);                                                                      // 294
                                return data;                                                                           // 295
                            } else {                                                                                   // 296
                                data = {                                                                               // 297
                                    nbj: res,                                                                          // 298
                                    alerte: "RAS"                                                                      // 299
                                };                                                                                     // 297
                                return data;                                                                           // 301
                            }                                                                                          // 302
                        }                                                                                              // 303
                                                                                                                       //
                }                                                                                                      // 186
                                                                                                                       //
                break;                                                                                                 // 308
                                                                                                                       //
            case "CAREC":                                                                                              // 309
                if (moment(dateRDV).isBefore(today)) {                                                                 // 310
                    data = {                                                                                           // 311
                        nbj: -1,                                                                                       // 312
                        alerte: "TERMINER"                                                                             // 313
                    };                                                                                                 // 311
                    return data;                                                                                       // 315
                } else {                                                                                               // 316
                    //delai de traitement de 30 jr et alerte 7jr avant                                                 // 317
                    res = momentBusiness(dateRDV, 'YYYY-MM-DD').businessDiff(momentBusiness(today, 'YYYY-MM-DD'));     // 318
                                                                                                                       //
                    if (res <= 7) {                                                                                    // 319
                        data = {                                                                                       // 320
                            nbj: res,                                                                                  // 321
                            alerte: res <= 7 && res >= 5 ? "NORMAL" : "HAUTE"                                          // 322
                        };                                                                                             // 320
                        console.log("in util funct rdv");                                                              // 324
                        console.dir(res);                                                                              // 325
                        return data;                                                                                   // 326
                    } else {                                                                                           // 327
                        data = {                                                                                       // 328
                            nbj: res,                                                                                  // 329
                            alerte: "RAS"                                                                              // 330
                        };                                                                                             // 328
                        return data;                                                                                   // 332
                    }                                                                                                  // 333
                }                                                                                                      // 334
                                                                                                                       //
                break;                                                                                                 // 336
                                                                                                                       //
            default:                                                                                                   // 337
                return {                                                                                               // 338
                    nbj: -1,                                                                                           // 339
                    alerte: "ERROR"                                                                                    // 340
                };                                                                                                     // 338
                break;                                                                                                 // 342
        }                                                                                                              // 124
    } else {                                                                                                           // 344
        return {                                                                                                       // 345
            nbj: -1,                                                                                                   // 346
            alerte: "ERROR"                                                                                            // 347
        };                                                                                                             // 345
    }                                                                                                                  // 349
};                                                                                                                     // 351
                                                                                                                       //
var checkRdvDateMD = function (e) {                                                                                    // 353
    //console.log("in util funct rdv")                                                                                 // 354
    var dateReceptionY = e.infoSurRgt[0][0] && e.infoSurRgt[0][0].DATE_RECEPTION ? e.infoSurRgt[0][0].DATE_RECEPTION.substring(0, 4) : null;
    var dateReceptionM = e.infoSurRgt[0][0] && e.infoSurRgt[0][0].DATE_RECEPTION ? e.infoSurRgt[0][0].DATE_RECEPTION.substring(5, 7) : null;
    var dateReceptionD = e.infoSurRgt[0][0] && e.infoSurRgt[0][0].DATE_RECEPTION ? e.infoSurRgt[0][0].DATE_RECEPTION.substring(8) : null;
    var typeSinistre = e.infoSurRgt[0][0] ? e.infoSurRgt[0][0].TYPE_SINISTRE : null;                                   // 358
    var dateRDV = e.dateRDV;                                                                                           // 359
    var today = moment(Date.now()).format("YYYY-MM-DD");                                                               // 360
    var data = void 0;                                                                                                 // 361
    var res = void 0;                                                                                                  // 362
    typeSinistre = typeSinistre ? typeSinistre.trim() : null; //console.log("dateRDV= "+moment(dateRDV).format("DD-MM-YYYY")+" todayIs= "+moment(today).format("DD-MM-YYYY"));
                                                                                                                       //
    if (isValidDate(dateReceptionY, dateReceptionM, dateReceptionD)) {                                                 // 365
        //on check le type de prestation                                                                               // 366
        //console.log("in the func");                                                                                  // 367
        // console.log("typeSinistre: "+typeSinistre);                                                                 // 368
        switch (typeSinistre) {                                                                                        // 369
            case "RACHAT PARTIEL":                                                                                     // 370
            case "AVANCE":                                                                                             // 371
                //delai de traitement de 21 jr et alerte 7jr avant                                                     // 372
                if (moment(dateRDV).isBefore(today)) {                                                                 // 373
                    data = {                                                                                           // 374
                        nbj: -1,                                                                                       // 375
                        alerte: "TERMINER"                                                                             // 376
                    };                                                                                                 // 374
                    return data;                                                                                       // 378
                } else {                                                                                               // 379
                    res = momentBusiness(dateRDV).businessDiff(momentBusiness(today));                                 // 380
                                                                                                                       //
                    if (res <= 7) {                                                                                    // 381
                        data = {                                                                                       // 382
                            nbj: res,                                                                                  // 383
                            alerte: res <= 7 && res >= 5 ? "NORMAL" : "HAUTE" //console.log("in util funct rachat partiel")
                            //console.dir(res);                                                                        // 387
                                                                                                                       //
                        };                                                                                             // 382
                        return data;                                                                                   // 388
                    } else {                                                                                           // 389
                        data = {                                                                                       // 390
                            nbj: res,                                                                                  // 391
                            alerte: "RAS"                                                                              // 392
                        };                                                                                             // 390
                        return data;                                                                                   // 394
                    }                                                                                                  // 395
                }                                                                                                      // 396
                                                                                                                       //
                break;                                                                                                 // 398
                                                                                                                       //
            case "TERME":                                                                                              // 399
            case "IFC":                                                                                                // 400
                if (moment(dateRDV).isBefore(today)) {                                                                 // 401
                    data = {                                                                                           // 402
                        nbj: -1,                                                                                       // 403
                        alerte: "TERMINER"                                                                             // 404
                    };                                                                                                 // 402
                    return data;                                                                                       // 406
                } else {                                                                                               // 407
                    //delai de traitement de 15 jr et alerte 7jr avant                                                 // 408
                    res = momentBusiness(dateRDV).businessDiff(momentBusiness(today));                                 // 409
                                                                                                                       //
                    if (res <= 7) {                                                                                    // 410
                        data = {                                                                                       // 411
                            nbj: res,                                                                                  // 412
                            alerte: res <= 7 && res >= 5 ? "NORMAL" : "HAUTE" //console.log("in util funct ifc")       // 413
                                                                                                                       //
                        };                                                                                             // 411
                        console.log(res);                                                                              // 416
                        return data;                                                                                   // 417
                    } else {                                                                                           // 418
                        data = {                                                                                       // 419
                            nbj: res,                                                                                  // 420
                            alerte: "RAS"                                                                              // 421
                        };                                                                                             // 419
                        return data;                                                                                   // 423
                    }                                                                                                  // 424
                }                                                                                                      // 425
                                                                                                                       //
                break;                                                                                                 // 427
                                                                                                                       //
            case "RACHAT TOTAL":                                                                                       // 428
                var codeProduit = e.wnupo.toString().substring(0, 3); //console.log("codeproduit: "+codeProduit+" et type= "+typeof codeProduit)
                                                                                                                       //
                switch (codeProduit) {                                                                                 // 431
                    case "110":                                                                                        // 432
                    case "112":                                                                                        // 433
                    case "116":                                                                                        // 434
                    case "120":                                                                                        // 435
                    case "122":                                                                                        // 436
                    case "130":                                                                                        // 437
                    case "140":                                                                                        // 438
                    case "162":                                                                                        // 439
                    case "166":                                                                                        // 440
                    case "168":                                                                                        // 441
                    case "210":                                                                                        // 442
                    case "212":                                                                                        // 443
                    case "216":                                                                                        // 444
                    case "218":                                                                                        // 445
                    case "220":                                                                                        // 446
                    case "224":                                                                                        // 447
                    case "230":                                                                                        // 448
                    case "234":                                                                                        // 449
                    case "241":                                                                                        // 450
                    case "242":                                                                                        // 451
                    case "243":                                                                                        // 452
                    case "246":                                                                                        // 453
                    case "247":                                                                                        // 454
                    case "248":                                                                                        // 455
                    case "260":                                                                                        // 456
                    case "310":                                                                                        // 457
                    case "312":                                                                                        // 458
                    case "330":                                                                                        // 459
                    case "331":                                                                                        // 460
                    case "332":                                                                                        // 461
                    case "333":                                                                                        // 462
                    case "334":                                                                                        // 463
                    case "360":                                                                                        // 464
                    case "791":                                                                                        // 465
                    case "793":                                                                                        // 466
                        if (moment(dateRDV).isBefore(today)) {                                                         // 467
                            data = {                                                                                   // 468
                                nbj: -1,                                                                               // 469
                                alerte: "TERMINER"                                                                     // 470
                            };                                                                                         // 468
                            return data;                                                                               // 472
                        } else {                                                                                       // 473
                            //cas individuelle                                                                         // 474
                            //delai de traitement de 60 jr et alerte 15jr avant                                        // 475
                            res = momentBusiness(dateRDV).businessDiff(momentBusiness(today)); //console.log("resultat de res: "+res);
                                                                                                                       //
                            if (res <= 15) {                                                                           // 478
                                data = {                                                                               // 479
                                    nbj: res,                                                                          // 480
                                    alerte: res <= 15 && res >= 13 ? "NORMAL" : "HAUTE" //console.log("in util funct rachat total i")
                                    //console.dir(res);                                                                // 484
                                                                                                                       //
                                };                                                                                     // 479
                                return data;                                                                           // 485
                            } else {                                                                                   // 486
                                data = {                                                                               // 487
                                    nbj: res,                                                                          // 488
                                    alerte: "RAS"                                                                      // 489
                                };                                                                                     // 487
                                return data;                                                                           // 491
                            }                                                                                          // 492
                        }                                                                                              // 493
                                                                                                                       //
                        break;                                                                                         // 495
                                                                                                                       //
                    case "710":                                                                                        // 496
                    case "713":                                                                                        // 497
                    case "715":                                                                                        // 498
                    case "717":                                                                                        // 499
                    case "720":                                                                                        // 500
                    case "722":                                                                                        // 501
                    case "724":                                                                                        // 502
                    case "726":                                                                                        // 503
                    case "731":                                                                                        // 504
                    case "732":                                                                                        // 505
                    case "742":                                                                                        // 506
                    case "745":                                                                                        // 507
                    case "752":                                                                                        // 508
                    case "755":                                                                                        // 509
                    case "760":                                                                                        // 510
                    case "766":                                                                                        // 511
                    case "770":                                                                                        // 512
                    case "772":                                                                                        // 513
                    case "773":                                                                                        // 514
                    case "774":                                                                                        // 515
                    case "776":                                                                                        // 516
                    case "777":                                                                                        // 517
                    case "778":                                                                                        // 518
                    case "782":                                                                                        // 519
                    case "784":                                                                                        // 520
                    case "786":                                                                                        // 521
                        if (moment(dateRDV).isBefore(today)) {                                                         // 522
                            data = {                                                                                   // 523
                                nbj: -1,                                                                               // 524
                                alerte: "TERMINER"                                                                     // 525
                            };                                                                                         // 523
                            return data;                                                                               // 527
                        } else {                                                                                       // 528
                            //cas bancassurances                                                                       // 529
                            //delai de traitement de 45 jr et alerte 10jr avant                                        // 530
                            res = momentBusiness(dateRDV, 'YYYY-MM-DD').businessDiff(momentBusiness(today, 'YYYY-MM-DD'));
                            console.log("resultat de res: " + res);                                                    // 532
                                                                                                                       //
                            if (res <= 10) {                                                                           // 533
                                data = {                                                                               // 534
                                    nbj: res,                                                                          // 535
                                    alerte: res <= 10 && res >= 8 ? "NORMAL" : "HAUTE"                                 // 536
                                };                                                                                     // 534
                                console.log("in util funct rachat total b");                                           // 538
                                console.dir(res);                                                                      // 539
                                return data;                                                                           // 540
                            } else {                                                                                   // 541
                                data = {                                                                               // 542
                                    nbj: res,                                                                          // 543
                                    alerte: "RAS"                                                                      // 544
                                };                                                                                     // 542
                                return data;                                                                           // 546
                            }                                                                                          // 547
                        }                                                                                              // 548
                                                                                                                       //
                }                                                                                                      // 431
                                                                                                                       //
                break;                                                                                                 // 553
                                                                                                                       //
            case "CAREC":                                                                                              // 554
                if (moment(dateRDV).isBefore(today)) {                                                                 // 555
                    data = {                                                                                           // 556
                        nbj: -1,                                                                                       // 557
                        alerte: "TERMINER"                                                                             // 558
                    };                                                                                                 // 556
                    return data;                                                                                       // 560
                } else {                                                                                               // 561
                    //delai de traitement de 30 jr et alerte 7jr avant                                                 // 562
                    res = momentBusiness(dateRDV, 'YYYY-MM-DD').businessDiff(momentBusiness(today, 'YYYY-MM-DD'));     // 563
                                                                                                                       //
                    if (res <= 7) {                                                                                    // 564
                        data = {                                                                                       // 565
                            nbj: res,                                                                                  // 566
                            alerte: res <= 7 && res >= 5 ? "NORMAL" : "HAUTE"                                          // 567
                        };                                                                                             // 565
                        console.log("in util funct rdv");                                                              // 569
                        console.dir(res);                                                                              // 570
                        return data;                                                                                   // 571
                    } else {                                                                                           // 572
                        data = {                                                                                       // 573
                            nbj: res,                                                                                  // 574
                            alerte: "RAS"                                                                              // 575
                        };                                                                                             // 573
                        return data;                                                                                   // 577
                    }                                                                                                  // 578
                }                                                                                                      // 579
                                                                                                                       //
                break;                                                                                                 // 581
                                                                                                                       //
            default:                                                                                                   // 582
                return null;                                                                                           // 583
                break;                                                                                                 // 584
        }                                                                                                              // 369
    } else {                                                                                                           // 586
        return null;                                                                                                   // 587
    }                                                                                                                  // 588
};                                                                                                                     // 590
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"server":{"graphql":{"connectors.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/graphql/connectors.js                                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({                                                                                                        // 1
  userSQL: function () {                                                                                               // 1
    return userSQL;                                                                                                    // 1
  },                                                                                                                   // 1
  DBSQL: function () {                                                                                                 // 1
    return DBSQL;                                                                                                      // 1
  },                                                                                                                   // 1
  dispoSQL: function () {                                                                                              // 1
    return dispoSQL;                                                                                                   // 1
  },                                                                                                                   // 1
  DBSQLSERVER: function () {                                                                                           // 1
    return DBSQLSERVER;                                                                                                // 1
  }                                                                                                                    // 1
});                                                                                                                    // 1
var Sequelize = void 0;                                                                                                // 1
module.watch(require("sequelize"), {                                                                                   // 1
  "default": function (v) {                                                                                            // 1
    Sequelize = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var Meteor = void 0;                                                                                                   // 1
module.watch(require("meteor/meteor"), {                                                                               // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var casual = void 0;                                                                                                   // 1
module.watch(require("casual"), {                                                                                      // 1
  "default": function (v) {                                                                                            // 1
    casual = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
                                                                                                                       //
var _ = void 0;                                                                                                        // 1
                                                                                                                       //
module.watch(require("lodash"), {                                                                                      // 1
  "default": function (v) {                                                                                            // 1
    _ = v;                                                                                                             // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var moment = void 0;                                                                                                   // 1
module.watch(require("meteor/momentjs:moment"), {                                                                      // 1
  moment: function (v) {                                                                                               // 1
    moment = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
/*const DBSQL= new Sequelize('moduleRGT', 'root', 'root', {                                                            // 9
    host:'localhost',                                                                                                  //
    port:'8889',                                                                                                       //
    dialect: 'mysql',                                                                                                  //
    //storage: './DB/moduleRGT.db',                                                                                    //
});*/var DBSQLSERVER = new Sequelize(Meteor.settings.DBSQLSERVER_DATABASE, Meteor.settings.DBSQLSERVER_USER, Meteor.settings.DBSQLSERVER_PASSWORD, {
  host: Meteor.settings.DBSQLSERVER_HOST,                                                                              // 18
  port: Meteor.settings.DBSQLSERVER_PORT,                                                                              // 19
  dialect: 'mssql',                                                                                                    // 20
  dialectOptions: {                                                                                                    // 21
    requestTimeout: 1625000                                                                                            // 22
  } //storage: './DB/moduleRGT.db',                                                                                    // 21
                                                                                                                       //
}); //----------------------------------MODELS--------------------------------                                         // 17
                                                                                                                       //
var UserModel = DBSQLSERVER.define('reguser', {                                                                        // 29
  ulogin: {                                                                                                            // 30
    type: Sequelize.STRING,                                                                                            // 31
    allowNull: true,                                                                                                   // 32
    field: 'ulogin'                                                                                                    // 33
  },                                                                                                                   // 30
  mdp: {                                                                                                               // 35
    type: Sequelize.STRING,                                                                                            // 36
    allowNull: true,                                                                                                   // 37
    field: 'mdp'                                                                                                       // 38
  },                                                                                                                   // 35
  redac: {                                                                                                             // 40
    type: Sequelize.STRING,                                                                                            // 41
    allowNull: true,                                                                                                   // 42
    field: 'redac' // primaryKey:true                                                                                  // 43
                                                                                                                       //
  },                                                                                                                   // 40
  role: {                                                                                                              // 46
    type: Sequelize.STRING,                                                                                            // 47
    allowNull: true,                                                                                                   // 48
    field: 'role' // primaryKey:true                                                                                   // 49
                                                                                                                       //
  },                                                                                                                   // 46
  nom: {                                                                                                               // 52
    type: Sequelize.STRING,                                                                                            // 53
    allowNull: true,                                                                                                   // 54
    field: 'nom'                                                                                                       // 55
  },                                                                                                                   // 52
  prenom: {                                                                                                            // 57
    type: Sequelize.STRING,                                                                                            // 58
    allowNull: true,                                                                                                   // 59
    field: 'prenom'                                                                                                    // 60
  },                                                                                                                   // 57
  email: {                                                                                                             // 62
    type: Sequelize.STRING,                                                                                            // 63
    allowNull: true,                                                                                                   // 64
    field: 'email'                                                                                                     // 65
  }                                                                                                                    // 62
}, {                                                                                                                   // 29
  schema: 'exp',                                                                                                       // 69
  timestamps: false,                                                                                                   // 70
  freezeTableName: 'reguser'                                                                                           // 71
});                                                                                                                    // 68
var regDispoModel = DBSQLSERVER.define('regdispo', {                                                                   // 74
  wasrg: {                                                                                                             // 75
    type: Sequelize.INTEGER,                                                                                           // 76
    allowNull: true,                                                                                                   // 77
    field: 'wasrg',                                                                                                    // 78
    primaryKey: true                                                                                                   // 79
  },                                                                                                                   // 75
  wnrgt: {                                                                                                             // 81
    type: Sequelize.INTEGER,                                                                                           // 82
    allowNull: true,                                                                                                   // 83
    field: 'wnrgt'                                                                                                     // 84
  },                                                                                                                   // 81
  wnupo: {                                                                                                             // 86
    type: Sequelize.INTEGER,                                                                                           // 87
    allowNull: true,                                                                                                   // 88
    field: 'wnupo'                                                                                                     // 89
  },                                                                                                                   // 86
  nom_beneficiaire: {                                                                                                  // 91
    type: Sequelize.STRING,                                                                                            // 92
    allowNull: true,                                                                                                   // 93
    field: 'nom_beneficiaire'                                                                                          // 94
  },                                                                                                                   // 91
  date_naiss: {                                                                                                        // 96
    type: Sequelize.DATE,                                                                                              // 97
    allowNull: true,                                                                                                   // 98
    field: 'date_naiss'                                                                                                // 99
  },                                                                                                                   // 96
  date_depot_treso: {                                                                                                  // 101
    type: Sequelize.DATE,                                                                                              // 102
    allowNull: true,                                                                                                   // 103
    field: 'date_depot_treso'                                                                                          // 104
  },                                                                                                                   // 101
  date_sort_treso: {                                                                                                   // 106
    type: Sequelize.DATE,                                                                                              // 107
    allowNull: true,                                                                                                   // 108
    field: 'date_sort_treso'                                                                                           // 109
  },                                                                                                                   // 106
  date_depot_sign: {                                                                                                   // 111
    type: Sequelize.DATE,                                                                                              // 112
    allowNull: true,                                                                                                   // 113
    field: 'date_depot_sign'                                                                                           // 114
  },                                                                                                                   // 111
  date_recep_sign_reg: {                                                                                               // 116
    type: Sequelize.DATE,                                                                                              // 117
    allowNull: true,                                                                                                   // 118
    field: 'date_recep_sign_reg'                                                                                       // 119
  },                                                                                                                   // 116
  date_retrait_reg: {                                                                                                  // 121
    type: Sequelize.DATE,                                                                                              // 122
    allowNull: true,                                                                                                   // 123
    field: 'date_retrait_reg'                                                                                          // 124
  },                                                                                                                   // 121
  statut_reg_retirer: {                                                                                                // 126
    type: Sequelize.STRING,                                                                                            // 127
    allowNull: true,                                                                                                   // 128
    field: 'statut_reg_retirer'                                                                                        // 129
  },                                                                                                                   // 126
  domaine: {                                                                                                           // 131
    type: Sequelize.STRING,                                                                                            // 132
    allowNull: true,                                                                                                   // 133
    field: 'domaine'                                                                                                   // 134
  },                                                                                                                   // 131
  redac: {                                                                                                             // 136
    type: Sequelize.STRING,                                                                                            // 137
    allowNull: true,                                                                                                   // 138
    field: 'redac'                                                                                                     // 139
  },                                                                                                                   // 136
  MNTGT: {                                                                                                             // 141
    type: Sequelize.STRING,                                                                                            // 142
    allowNull: true,                                                                                                   // 143
    field: 'MNTGT'                                                                                                     // 144
  },                                                                                                                   // 141
  MRGGT: {                                                                                                             // 146
    type: Sequelize.STRING,                                                                                            // 147
    allowNull: true,                                                                                                   // 148
    field: 'MRGGT'                                                                                                     // 149
  },                                                                                                                   // 146
  dateRDV: {                                                                                                           // 151
    type: Sequelize.DATE,                                                                                              // 152
    allowNull: true,                                                                                                   // 153
    field: 'dateRDV'                                                                                                   // 154
  },                                                                                                                   // 151
  ValBank: {                                                                                                           // 156
    type: Sequelize.STRING,                                                                                            // 157
    allowNull: true,                                                                                                   // 158
    field: 'ValBank'                                                                                                   // 159
  },                                                                                                                   // 156
  Comments: {                                                                                                          // 161
    type: Sequelize.STRING,                                                                                            // 162
    allowNull: true,                                                                                                   // 163
    field: 'Comments'                                                                                                  // 164
  },                                                                                                                   // 161
  CommentsBank: {                                                                                                      // 166
    type: Sequelize.STRING,                                                                                            // 167
    allowNull: true,                                                                                                   // 168
    field: 'CommentsBank'                                                                                              // 169
  },                                                                                                                   // 166
  Num_envoi: {                                                                                                         // 171
    type: Sequelize.INTEGER,                                                                                           // 172
    allowNull: true,                                                                                                   // 173
    field: 'Num_envoi'                                                                                                 // 174
  },                                                                                                                   // 171
  banque: {                                                                                                            // 176
    type: Sequelize.STRING,                                                                                            // 177
    allowNull: true,                                                                                                   // 178
    field: 'banque'                                                                                                    // 179
  },                                                                                                                   // 176
  Comments: {                                                                                                          // 181
    type: Sequelize.STRING,                                                                                            // 182
    allowNull: true,                                                                                                   // 183
    field: 'Comments'                                                                                                  // 184
  },                                                                                                                   // 181
  cheque: {                                                                                                            // 186
    type: Sequelize.INTEGER,                                                                                           // 187
    allowNull: true,                                                                                                   // 188
    field: 'cheque'                                                                                                    // 189
  }                                                                                                                    // 186
}, {                                                                                                                   // 74
  schema: 'exp',                                                                                                       // 193
  timestamps: false,                                                                                                   // 194
  freezeTableName: 'regdispo'                                                                                          // 195
});                                                                                                                    // 192
var dispoSQL = DBSQLSERVER.models.regdispo;                                                                            // 198
var userSQL = DBSQLSERVER.models.reguser;                                                                              // 199
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"graphqlServer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/graphql/graphqlServer.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = require("babel-runtime/helpers/typeof");                                                                //
                                                                                                                       //
var _typeof3 = _interopRequireDefault(_typeof2);                                                                       //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
var bodyParser = void 0;                                                                                               // 1
module.watch(require("body-parser"), {                                                                                 // 1
  "default": function (v) {                                                                                            // 1
    bodyParser = v;                                                                                                    // 1
  }                                                                                                                    // 1
}, 0);                                                                                                                 // 1
var graphqlExpress = void 0,                                                                                           // 1
    graphiqlExpress = void 0;                                                                                          // 1
module.watch(require("graphql-server-express"), {                                                                      // 1
  graphqlExpress: function (v) {                                                                                       // 1
    graphqlExpress = v;                                                                                                // 1
  },                                                                                                                   // 1
  graphiqlExpress: function (v) {                                                                                      // 1
    graphiqlExpress = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 1);                                                                                                                 // 1
var proxyMiddleware = void 0;                                                                                          // 1
module.watch(require("http-proxy-middleware"), {                                                                       // 1
  "default": function (v) {                                                                                            // 1
    proxyMiddleware = v;                                                                                               // 1
  }                                                                                                                    // 1
}, 2);                                                                                                                 // 1
var schema = void 0;                                                                                                   // 1
module.watch(require("./schema"), {                                                                                    // 1
  "default": function (v) {                                                                                            // 1
    schema = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 3);                                                                                                                 // 1
var resolvers = void 0;                                                                                                // 1
module.watch(require("./resolvers.js"), {                                                                              // 1
  "default": function (v) {                                                                                            // 1
    resolvers = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 4);                                                                                                                 // 1
var express = void 0;                                                                                                  // 1
module.watch(require("express"), {                                                                                     // 1
  "default": function (v) {                                                                                            // 1
    express = v;                                                                                                       // 1
  }                                                                                                                    // 1
}, 5);                                                                                                                 // 1
var cors = void 0;                                                                                                     // 1
module.watch(require("cors"), {                                                                                        // 1
  "default": function (v) {                                                                                            // 1
    cors = v;                                                                                                          // 1
  }                                                                                                                    // 1
}, 6);                                                                                                                 // 1
var WebApp = void 0;                                                                                                   // 1
module.watch(require("meteor/webapp"), {                                                                               // 1
  WebApp: function (v) {                                                                                               // 1
    WebApp = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 7);                                                                                                                 // 1
var createApolloServer = void 0;                                                                                       // 1
module.watch(require("meteor/apollo"), {                                                                               // 1
  createApolloServer: function (v) {                                                                                   // 1
    createApolloServer = v;                                                                                            // 1
  }                                                                                                                    // 1
}, 8);                                                                                                                 // 1
var execute = void 0,                                                                                                  // 1
    subscribe = void 0;                                                                                                // 1
module.watch(require("graphql"), {                                                                                     // 1
  execute: function (v) {                                                                                              // 1
    execute = v;                                                                                                       // 1
  },                                                                                                                   // 1
  subscribe: function (v) {                                                                                            // 1
    subscribe = v;                                                                                                     // 1
  }                                                                                                                    // 1
}, 9);                                                                                                                 // 1
var SubscriptionServer = void 0;                                                                                       // 1
module.watch(require("subscriptions-transport-ws"), {                                                                  // 1
  SubscriptionServer: function (v) {                                                                                   // 1
    SubscriptionServer = v;                                                                                            // 1
  }                                                                                                                    // 1
}, 10);                                                                                                                // 1
var makeExecutableSchema = void 0;                                                                                     // 1
module.watch(require("graphql-tools"), {                                                                               // 1
  makeExecutableSchema: function (v) {                                                                                 // 1
    makeExecutableSchema = v;                                                                                          // 1
  }                                                                                                                    // 1
}, 11);                                                                                                                // 1
var createServer = void 0;                                                                                             // 1
module.watch(require("http"), {                                                                                        // 1
  createServer: function (v) {                                                                                         // 1
    createServer = v;                                                                                                  // 1
  }                                                                                                                    // 1
}, 12);                                                                                                                // 1
var Meteor = void 0;                                                                                                   // 1
module.watch(require("meteor/meteor"), {                                                                               // 1
  Meteor: function (v) {                                                                                               // 1
    Meteor = v;                                                                                                        // 1
  }                                                                                                                    // 1
}, 13);                                                                                                                // 1
var executableSchema = makeExecutableSchema({                                                                          // 17
  typeDefs: schema,                                                                                                    // 18
  resolvers: resolvers,                                                                                                // 19
  allowUndefinedInResolve: false,                                                                                      // 20
  printErrors: true                                                                                                    // 21
});                                                                                                                    // 17
console.log(typeof createApolloServer === "undefined" ? "undefined" : (0, _typeof3.default)(createApolloServer));      // 23
createApolloServer({                                                                                                   // 24
  schema: executableSchema                                                                                             // 25
}, {                                                                                                                   // 24
  configServer: function (expressServer) {                                                                             // 27
    return expressServer.use(cors());                                                                                  // 27
  }                                                                                                                    // 27
});                                                                                                                    // 26
console.log("Apollo Server is now running on http://localhost"); /*export const GRAPHQL_PORT=Meteor.settings.public.GRAPHQL_PORT?Meteor.settings.public.GRAPHQL_PORT:5000;
                                                                                                                       //
                                                                 let graphQLServer=express();                          //
                                                                                                                       //
                                                                 const executableSchema=makeExecutableSchema({         //
                                                                   typeDefs:schema,                                    //
                                                                   resolvers:resolvers,                                //
                                                                   allowUndefinedInResolve:false,                      //
                                                                   printErrors:true                                    //
                                                                 });                                                   //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
                                                                 graphQLServer.use('*',cors());                        //
                                                                 graphQLServer.options('*', cors()) ;                  //
                                                                 graphQLServer.use((req,res,next)=>{                   //
                                                                     res.header("Access-Control-Allow-Origin","*");    //
                                                                    // res.header("Access-Control-Allow-Origin","Origin, X-Requested-With, Accept");
                                                                     next();                                           //
                                                                 });                                                   //
                                                                 graphQLServer.use('/graphql',bodyParser.json(),graphqlExpress({
                                                                     schema:executableSchema,                          //
                                                                 }));                                                  //
                                                                 graphQLServer.use('/graphiql',graphiqlExpress({       //
                                                                   endpointURL:'/graphql',                             //
                                                                   subscriptionsEndpoint: `ws://localhost:${GRAPHQL_PORT}/subscriptions`
                                                                 }));                                                  //
                                                                 graphQLServer.use('/', (req, res) => res.redirect('/graphiql'));
                                                                 //server websocket for subscriptions                  //
                                                                 // Wrap the Express server                            //
                                                                 const ws = createServer(graphQLServer);               //
                                                                 ws.listen(GRAPHQL_PORT, () => {                       //
                                                                   console.log(`Apollo Server is now running on http://localhost:${GRAPHQL_PORT}`);
                                                                   //console.log(Meteor.absoluteUrl())                 //
                                                                   // Set up the WebSocket for handling GraphQL subscriptions
                                                                   new SubscriptionServer({                            //
                                                                     execute,                                          //
                                                                     subscribe,                                        //
                                                                     schema:executableSchema                           //
                                                                   }, {                                                //
                                                                     server: ws,                                       //
                                                                     path: '/subscriptions',                           //
                                                                   });                                                 //
                                                                 });                                                   //
                                                                 //graphQLServer.listen(GRAPHQL_PORT);                 //
                                                                 WebApp.rawConnectHandlers.use(proxyMiddleware(`http://localhost:${GRAPHQL_PORT}/graphql`));
                                                                 */                                                    //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"resolvers.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/graphql/resolvers.js                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _regenerator = require("babel-runtime/regenerator");                                                               //
                                                                                                                       //
var _regenerator2 = _interopRequireDefault(_regenerator);                                                              //
                                                                                                                       //
var _typeof2 = require("babel-runtime/helpers/typeof");                                                                //
                                                                                                                       //
var _typeof3 = _interopRequireDefault(_typeof2);                                                                       //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
module.export({                                                                                                        // 1
    pubsub: function () {                                                                                              // 1
        return pubsub;                                                                                                 // 1
    }                                                                                                                  // 1
});                                                                                                                    // 1
var Meteor = void 0;                                                                                                   // 1
module.watch(require("meteor/meteor"), {                                                                               // 1
    Meteor: function (v) {                                                                                             // 1
        Meteor = v;                                                                                                    // 1
    }                                                                                                                  // 1
}, 0);                                                                                                                 // 1
var DBSQL = void 0,                                                                                                    // 1
    DBSQLSERVER = void 0,                                                                                              // 1
    userSQL = void 0,                                                                                                  // 1
    dispoSQL = void 0;                                                                                                 // 1
module.watch(require("./connectors.js"), {                                                                             // 1
    DBSQL: function (v) {                                                                                              // 1
        DBSQL = v;                                                                                                     // 1
    },                                                                                                                 // 1
    DBSQLSERVER: function (v) {                                                                                        // 1
        DBSQLSERVER = v;                                                                                               // 1
    },                                                                                                                 // 1
    userSQL: function (v) {                                                                                            // 1
        userSQL = v;                                                                                                   // 1
    },                                                                                                                 // 1
    dispoSQL: function (v) {                                                                                           // 1
        dispoSQL = v;                                                                                                  // 1
    }                                                                                                                  // 1
}, 1);                                                                                                                 // 1
var formatNumberInMoney = void 0,                                                                                      // 1
    uniq = void 0,                                                                                                     // 1
    checkRdvDate = void 0;                                                                                             // 1
module.watch(require("../../imports/utils/utilitaires"), {                                                             // 1
    formatNumberInMoney: function (v) {                                                                                // 1
        formatNumberInMoney = v;                                                                                       // 1
    },                                                                                                                 // 1
    uniq: function (v) {                                                                                               // 1
        uniq = v;                                                                                                      // 1
    },                                                                                                                 // 1
    checkRdvDate: function (v) {                                                                                       // 1
        checkRdvDate = v;                                                                                              // 1
    }                                                                                                                  // 1
}, 2);                                                                                                                 // 1
var withFilter = void 0;                                                                                               // 1
module.watch(require("graphql-subscriptions"), {                                                                       // 1
    withFilter: function (v) {                                                                                         // 1
        withFilter = v;                                                                                                // 1
    }                                                                                                                  // 1
}, 3);                                                                                                                 // 1
var Sequelize = void 0;                                                                                                // 1
module.watch(require("sequelize"), {                                                                                   // 1
    "default": function (v) {                                                                                          // 1
        Sequelize = v;                                                                                                 // 1
    }                                                                                                                  // 1
}, 4);                                                                                                                 // 1
var PubSub = void 0;                                                                                                   // 1
module.watch(require("graphql-subscriptions"), {                                                                       // 1
    PubSub: function (v) {                                                                                             // 1
        PubSub = v;                                                                                                    // 1
    }                                                                                                                  // 1
}, 5);                                                                                                                 // 1
                                                                                                                       //
var Promise = require('bluebird');                                                                                     // 6
                                                                                                                       //
/*sqlServconn.run((err)=>{                                                                                             // 8
    if(err)                                                                                                            //
        throw err;                                                                                                     //
        console.log(sqlServconn.tables);                                                                               //
});*/ /*DBSQL.sync();                                                                                                  //
      DBSQL.authenticate().then(()=>{                                                                                  //
          console.log('Connection MySql etablie');                                                                     //
      }).catch(()=>{                                                                                                   //
          console.log('Impossible de se connecter a Mysql,veuillez reverifier');                                       //
      });*/ //==============                                                                                           //
DBSQLSERVER.sync();                                                                                                    // 20
DBSQLSERVER.authenticate().then(function () {                                                                          // 21
    console.log('Connection MsSql etablie');                                                                           // 22
}).catch(function (e) {                                                                                                // 23
    console.dir(e);                                                                                                    // 24
    console.log('Impossible de se connecter a MsSql,veuillez reverifier');                                             // 25
});                                                                                                                    // 26
var pubsub = new PubSub();                                                                                             // 28
var resolvers = {                                                                                                      // 29
    Query: {                                                                                                           // 30
        user: function (_, args) {                                                                                     // 31
            if (args.username) {                                                                                       // 32
                return Meteor.users.find({                                                                             // 33
                    username: args.username                                                                            // 33
                }).fetch();                                                                                            // 33
            } else if (args.username === "allstar") {                                                                  // 34
                return Meteor.users.find({}).fetch();                                                                  // 35
            } else {                                                                                                   // 36
                return [];                                                                                             // 37
            }                                                                                                          // 38
        },                                                                                                             // 39
        userSQL: function (_, args) {                                                                                  // 40
            if (args.nom && (args.orderDesc || !args.orderDesc)) {                                                     // 41
                return userSQL.findAll({                                                                               // 42
                    attributes: {                                                                                      // 42
                        exclude: ['id']                                                                                // 42
                    },                                                                                                 // 42
                    where: {                                                                                           // 42
                        nom: {                                                                                         // 43
                            $like: '%' + args.nom + '%'                                                                // 44
                        }                                                                                              // 43
                    }                                                                                                  // 42
                });                                                                                                    // 42
            } else if (args.orderDesc) {                                                                               // 47
                return userSQL.findAll({                                                                               // 48
                    attributes: {                                                                                      // 48
                        exclude: ['id']                                                                                // 48
                    },                                                                                                 // 48
                    order: [['nom', 'DESC']]                                                                           // 48
                });                                                                                                    // 48
            } else {                                                                                                   // 49
                return userSQL.findAll({                                                                               // 50
                    attributes: {                                                                                      // 50
                        exclude: ['id']                                                                                // 50
                    },                                                                                                 // 50
                    order: [['nom', 'ASC']]                                                                            // 50
                });                                                                                                    // 50
            }                                                                                                          // 51
        },                                                                                                             // 52
        listeDispo: function () {                                                                                      // 53
            function _callee(_, args) {                                                                                // 30
                var query, chequeQuery, l, _l, _l2, _l3, _l4, _l5, _l6, _l7, _l8, _l9, _l10;                           // 30
                                                                                                                       //
                return _regenerator2.default.async(function () {                                                       // 30
                    function _callee$(_context) {                                                                      // 30
                        while (1) {                                                                                    // 30
                            switch (_context.prev = _context.next) {                                                   // 30
                                case 0:                                                                                // 30
                                    query = "exec info_reg_dispo :numero_reg,:domaine ";                               // 54
                                    chequeQuery = "select Dbo.check_etat_cheq(:numcheque) as chequeState"; // let chainer=new Sequelize.Utils.QueryChainer();
                                    //si on a la date,et pas de statut,de domaine,de num_regl et on ne veut pas afficher seulment ceux kon a edite et non ordoner par num_regl
                                                                                                                       //
                                    if (!(args.typeDate && args.date && !args.statut && !args.domaine && !args.numenv && !args.numregl && !args.numpol && !args.nomtotal && !args.numreglStart && !args.numreglEnd)) {
                                        _context.next = 37;                                                            // 30
                                        break;                                                                         // 30
                                    }                                                                                  // 30
                                                                                                                       //
                                    l = null;                                                                          // 59
                                    _context.t0 = args.typeDate;                                                       // 30
                                    _context.next = _context.t0 === "date_naiss" ? 7 : _context.t0 === "date_depot_treso" ? 11 : _context.t0 === "date_sort_treso" ? 15 : _context.t0 === "date_depot_sign" ? 19 : _context.t0 === "date_recep_sign_reg" ? 23 : _context.t0 === "date_retrait_reg" ? 27 : _context.t0 === "dateRDV" ? 31 : 35;
                                    break;                                                                             // 30
                                                                                                                       //
                                case 7:                                                                                // 30
                                    _context.next = 9;                                                                 // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 63
                                            exclude: ['id']                                                            // 63
                                        },                                                                             // 63
                                        order: [['wnrgt', 'DESC']],                                                    // 63
                                        where: {                                                                       // 64
                                            date_naiss: args.date                                                      // 65
                                        },                                                                             // 64
                                        offset: args.offset,                                                           // 66
                                        limit: args.limit                                                              // 66
                                    }).then(function (res) {                                                           // 63
                                        var promises = [];                                                             // 69
                                        var dispo = void 0;                                                            // 70
                                        res.forEach(function (r) {                                                     // 71
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 72
                                                replacements: {                                                        // 74
                                                    numero_reg: r.wnrgt,                                               // 74
                                                    domaine: r.domaine                                                 // 74
                                                },                                                                     // 74
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 74
                                            })]).spread(function (infosurrgt) {                                        // 74
                                                dispo = r.toJSON();                                                    // 76
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 79
                                                dispo.etat = checkRdvDate(dispo);                                      // 80
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 81
                                                    nbj: -1,                                                           // 83
                                                    alerte: "ERROR"                                                    // 84
                                                };                                                                     // 82
                                                return dispo;                                                          // 86
                                            }));                                                                       // 87
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 89
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 90
                                                    replacements: {                                                    // 92
                                                        numcheque: r.cheque                                            // 92
                                                    },                                                                 // 92
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 92
                                                })]).spread(function (chequeState) {                                   // 92
                                                    dispo = r.toJSON();                                                // 94
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 96
                                                }));                                                                   // 97
                                            }                                                                          // 99
                                        });                                                                            // 101
                                        return Promise.all(promises);                                                  // 102
                                    }).then(function (dispos) {                                                        // 104
                                        var nd = dispos.map(function (e, i, arr) {                                     // 105
                                            if (e.infoSurRgt.length > 1) {                                             // 106
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 107
                                                //console.dir(e);                                                      // 109
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 110
                                                e.infoSurRgt.push(goodelem);                                           // 111
                                            }                                                                          // 112
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 113
                                            e.cheque = e.cheque == null ? 0 : e.cheque;                                // 115
                                            return e;                                                                  // 116
                                        }); //console.dir(nd);                                                         // 117
                                                                                                                       //
                                        return nd;                                                                     // 119
                                    }));                                                                               // 120
                                                                                                                       //
                                case 9:                                                                                // 30
                                    l = _context.sent;                                                                 // 63
                                    return _context.abrupt("return", l);                                               // 30
                                                                                                                       //
                                case 11:                                                                               // 30
                                    _context.next = 13;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 126
                                            exclude: ['id']                                                            // 126
                                        },                                                                             // 126
                                        order: [['wnrgt', 'DESC']],                                                    // 126
                                        where: {                                                                       // 126
                                            date_depot_treso: args.date                                                // 127
                                        },                                                                             // 126
                                        offset: args.offset,                                                           // 129
                                        limit: args.limit                                                              // 129
                                    }).then(function (res) {                                                           // 126
                                        var promises = [];                                                             // 130
                                        var dispo = void 0;                                                            // 131
                                        res.forEach(function (r) {                                                     // 132
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 133
                                                replacements: {                                                        // 135
                                                    numero_reg: r.wnrgt,                                               // 135
                                                    domaine: r.domaine                                                 // 135
                                                },                                                                     // 135
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 135
                                            })]).spread(function (infosurrgt) {                                        // 135
                                                dispo = r.toJSON();                                                    // 137
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 140
                                                dispo.etat = checkRdvDate(dispo);                                      // 141
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 142
                                                    nbj: -1,                                                           // 144
                                                    alerte: "ERROR"                                                    // 145
                                                };                                                                     // 143
                                                return dispo;                                                          // 147
                                            }));                                                                       // 148
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 150
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 151
                                                    replacements: {                                                    // 153
                                                        numcheque: r.cheque                                            // 153
                                                    },                                                                 // 153
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 153
                                                })]).spread(function (chequeState) {                                   // 153
                                                    dispo = r.toJSON();                                                // 155
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 157
                                                }));                                                                   // 158
                                            }                                                                          // 160
                                        });                                                                            // 161
                                        return Promise.all(promises);                                                  // 162
                                    }).then(function (dispos) {                                                        // 164
                                        var nd = dispos.map(function (e, i, arr) {                                     // 165
                                            if (e.infoSurRgt.length > 1) {                                             // 166
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 167
                                                //console.dir(e);                                                      // 169
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 170
                                                e.infoSurRgt.push(goodelem);                                           // 171
                                            }                                                                          // 172
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 173
                                            e.cheque = e.cheque == null ? 0 : e.cheque;                                // 175
                                            return e;                                                                  // 176
                                        }); //console.dir(nd);                                                         // 177
                                                                                                                       //
                                        return nd;                                                                     // 179
                                    }));                                                                               // 180
                                                                                                                       //
                                case 13:                                                                               // 30
                                    l = _context.sent;                                                                 // 126
                                    return _context.abrupt("return", l);                                               // 30
                                                                                                                       //
                                case 15:                                                                               // 30
                                    _context.next = 17;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 183
                                            exclude: ['id']                                                            // 183
                                        },                                                                             // 183
                                        order: [['wnrgt', 'DESC']],                                                    // 183
                                        where: {                                                                       // 183
                                            date_sort_treso: args.date                                                 // 184
                                        },                                                                             // 183
                                        offset: args.offset,                                                           // 186
                                        limit: args.limit                                                              // 186
                                    }).then(function (res) {                                                           // 183
                                        var promises = [];                                                             // 187
                                        var dispo = void 0;                                                            // 188
                                        res.forEach(function (r) {                                                     // 189
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 190
                                                replacements: {                                                        // 192
                                                    numero_reg: r.wnrgt,                                               // 192
                                                    domaine: r.domaine                                                 // 192
                                                },                                                                     // 192
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 192
                                            })]).spread(function (infosurrgt) {                                        // 192
                                                dispo = r.toJSON();                                                    // 194
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 197
                                                dispo.etat = checkRdvDate(dispo);                                      // 198
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 199
                                                    nbj: -1,                                                           // 201
                                                    alerte: "ERROR"                                                    // 202
                                                };                                                                     // 200
                                                return dispo;                                                          // 204
                                            }));                                                                       // 205
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 207
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 208
                                                    replacements: {                                                    // 210
                                                        numcheque: r.cheque                                            // 210
                                                    },                                                                 // 210
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 210
                                                })]).spread(function (chequeState) {                                   // 210
                                                    dispo = r.toJSON();                                                // 212
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 214
                                                }));                                                                   // 215
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 219
                                        return Promise.all(promises);                                                  // 220
                                    }).then(function (dispos) {                                                        // 222
                                        var nd = dispos.map(function (e, i, arr) {                                     // 223
                                            if (e.infoSurRgt.length > 1) {                                             // 224
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 225
                                                //console.dir(e);                                                      // 227
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 228
                                                e.infoSurRgt.push(goodelem);                                           // 229
                                            }                                                                          // 230
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 231
                                            return e;                                                                  // 233
                                        }); //console.dir(nd);                                                         // 234
                                                                                                                       //
                                        return nd;                                                                     // 236
                                    }));                                                                               // 237
                                                                                                                       //
                                case 17:                                                                               // 30
                                    l = _context.sent;                                                                 // 183
                                    return _context.abrupt("return", l);                                               // 30
                                                                                                                       //
                                case 19:                                                                               // 30
                                    _context.next = 21;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 240
                                            exclude: ['id']                                                            // 240
                                        },                                                                             // 240
                                        order: [['wnrgt', 'DESC']],                                                    // 240
                                        where: {                                                                       // 240
                                            date_depot_sign: args.date                                                 // 241
                                        },                                                                             // 240
                                        offset: args.offset,                                                           // 243
                                        limit: args.limit                                                              // 243
                                    }).then(function (res) {                                                           // 240
                                        var promises = [];                                                             // 244
                                        var dispo = void 0;                                                            // 245
                                        res.forEach(function (r) {                                                     // 246
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 247
                                                replacements: {                                                        // 249
                                                    numero_reg: r.wnrgt,                                               // 249
                                                    domaine: r.domaine                                                 // 249
                                                },                                                                     // 249
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 249
                                            })]).spread(function (infosurrgt) {                                        // 249
                                                dispo = r.toJSON();                                                    // 251
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 254
                                                dispo.etat = checkRdvDate(dispo);                                      // 255
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 256
                                                    nbj: -1,                                                           // 258
                                                    alerte: "ERROR"                                                    // 259
                                                };                                                                     // 257
                                                return dispo;                                                          // 261
                                            }));                                                                       // 262
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 264
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 265
                                                    replacements: {                                                    // 267
                                                        numcheque: r.cheque                                            // 267
                                                    },                                                                 // 267
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 267
                                                })]).spread(function (chequeState) {                                   // 267
                                                    dispo = r.toJSON();                                                // 269
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 271
                                                }));                                                                   // 272
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 276
                                        return Promise.all(promises);                                                  // 277
                                    }).then(function (dispos) {                                                        // 279
                                        var nd = dispos.map(function (e, i, arr) {                                     // 280
                                            if (e.infoSurRgt.length > 1) {                                             // 281
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 282
                                                //console.dir(e);                                                      // 284
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 285
                                                e.infoSurRgt.push(goodelem);                                           // 286
                                            }                                                                          // 287
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 288
                                            return e;                                                                  // 290
                                        }); //console.dir(nd);                                                         // 291
                                                                                                                       //
                                        return nd;                                                                     // 293
                                    }));                                                                               // 294
                                                                                                                       //
                                case 21:                                                                               // 30
                                    l = _context.sent;                                                                 // 240
                                    return _context.abrupt("return", l);                                               // 30
                                                                                                                       //
                                case 23:                                                                               // 30
                                    _context.next = 25;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 297
                                            exclude: ['id']                                                            // 297
                                        },                                                                             // 297
                                        order: [['wnrgt', 'DESC']],                                                    // 297
                                        where: {                                                                       // 297
                                            date_recep_sign_reg: args.date                                             // 298
                                        },                                                                             // 297
                                        offset: args.offset,                                                           // 300
                                        limit: args.limit                                                              // 300
                                    }).then(function (res) {                                                           // 297
                                        var promises = [];                                                             // 301
                                        var dispo = void 0;                                                            // 302
                                        res.forEach(function (r) {                                                     // 303
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 304
                                                replacements: {                                                        // 306
                                                    numero_reg: r.wnrgt,                                               // 306
                                                    domaine: r.domaine                                                 // 306
                                                },                                                                     // 306
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 306
                                            })]).spread(function (infosurrgt) {                                        // 306
                                                dispo = r.toJSON();                                                    // 308
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 311
                                                dispo.etat = checkRdvDate(dispo);                                      // 312
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 313
                                                    nbj: -1,                                                           // 315
                                                    alerte: "ERROR"                                                    // 316
                                                };                                                                     // 314
                                                return dispo;                                                          // 318
                                            }));                                                                       // 319
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 321
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 322
                                                    replacements: {                                                    // 324
                                                        numcheque: r.cheque                                            // 324
                                                    },                                                                 // 324
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 324
                                                })]).spread(function (chequeState) {                                   // 324
                                                    dispo = r.toJSON();                                                // 326
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 328
                                                }));                                                                   // 329
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 333
                                        return Promise.all(promises);                                                  // 334
                                    }).then(function (dispos) {                                                        // 336
                                        var nd = dispos.map(function (e, i, arr) {                                     // 337
                                            if (e.infoSurRgt.length > 1) {                                             // 338
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 339
                                                //console.dir(e);                                                      // 341
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 342
                                                e.infoSurRgt.push(goodelem);                                           // 343
                                            }                                                                          // 344
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 345
                                            return e;                                                                  // 347
                                        }); //console.dir(nd);                                                         // 348
                                                                                                                       //
                                        return nd;                                                                     // 351
                                    }));                                                                               // 352
                                                                                                                       //
                                case 25:                                                                               // 30
                                    l = _context.sent;                                                                 // 297
                                    return _context.abrupt("return", l);                                               // 30
                                                                                                                       //
                                case 27:                                                                               // 30
                                    _context.next = 29;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 355
                                            exclude: ['id']                                                            // 355
                                        },                                                                             // 355
                                        order: [['wnrgt', 'DESC']],                                                    // 355
                                        where: {                                                                       // 355
                                            date_retrait_reg: args.date                                                // 356
                                        },                                                                             // 355
                                        offset: args.offset,                                                           // 358
                                        limit: args.limit                                                              // 358
                                    }).then(function (res) {                                                           // 355
                                        var promises = [];                                                             // 359
                                        var dispo = void 0;                                                            // 360
                                        res.forEach(function (r) {                                                     // 361
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 362
                                                replacements: {                                                        // 364
                                                    numero_reg: r.wnrgt,                                               // 364
                                                    domaine: r.domaine                                                 // 364
                                                },                                                                     // 364
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 364
                                            })]).spread(function (infosurrgt) {                                        // 364
                                                dispo = r.toJSON();                                                    // 366
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 369
                                                dispo.etat = checkRdvDate(dispo);                                      // 370
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 371
                                                    nbj: -1,                                                           // 373
                                                    alerte: "ERROR"                                                    // 374
                                                };                                                                     // 372
                                                return dispo;                                                          // 376
                                            }));                                                                       // 377
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 379
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 380
                                                    replacements: {                                                    // 382
                                                        numcheque: r.cheque                                            // 382
                                                    },                                                                 // 382
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 382
                                                })]).spread(function (chequeState) {                                   // 382
                                                    dispo = r.toJSON();                                                // 384
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 386
                                                }));                                                                   // 387
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 391
                                        return Promise.all(promises);                                                  // 392
                                    }).then(function (dispos) {                                                        // 394
                                        var nd = dispos.map(function (e, i, arr) {                                     // 395
                                            if (e.infoSurRgt.length > 1) {                                             // 396
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 397
                                                //console.dir(e);                                                      // 399
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 400
                                                e.infoSurRgt.push(goodelem);                                           // 401
                                            }                                                                          // 402
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 403
                                            return e;                                                                  // 405
                                        }); //console.dir(nd);                                                         // 406
                                                                                                                       //
                                        return nd;                                                                     // 409
                                    }));                                                                               // 410
                                                                                                                       //
                                case 29:                                                                               // 30
                                    l = _context.sent;                                                                 // 355
                                    return _context.abrupt("return", l);                                               // 30
                                                                                                                       //
                                case 31:                                                                               // 30
                                    _context.next = 33;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 413
                                            exclude: ['id']                                                            // 413
                                        },                                                                             // 413
                                        order: [['wnrgt', 'DESC']],                                                    // 413
                                        where: {                                                                       // 413
                                            dateRDV: args.date                                                         // 414
                                        },                                                                             // 413
                                        offset: args.offset,                                                           // 416
                                        limit: args.limit                                                              // 416
                                    }).then(function (res) {                                                           // 413
                                        var promises = [];                                                             // 417
                                        var dispo = void 0;                                                            // 418
                                        res.forEach(function (r) {                                                     // 419
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 420
                                                replacements: {                                                        // 422
                                                    numero_reg: r.wnrgt,                                               // 422
                                                    domaine: r.domaine                                                 // 422
                                                },                                                                     // 422
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 422
                                            })]).spread(function (infosurrgt) {                                        // 422
                                                dispo = r.toJSON();                                                    // 424
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 427
                                                dispo.etat = checkRdvDate(dispo);                                      // 428
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 429
                                                    nbj: -1,                                                           // 431
                                                    alerte: "ERROR"                                                    // 432
                                                };                                                                     // 430
                                                return dispo;                                                          // 434
                                            }));                                                                       // 435
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 437
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 438
                                                    replacements: {                                                    // 440
                                                        numcheque: r.cheque                                            // 440
                                                    },                                                                 // 440
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 440
                                                })]).spread(function (chequeState) {                                   // 440
                                                    dispo = r.toJSON();                                                // 442
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 444
                                                }));                                                                   // 445
                                            }                                                                          // 447
                                        });                                                                            // 448
                                        return Promise.all(promises);                                                  // 449
                                    }).then(function (dispos) {                                                        // 451
                                        var nd = dispos.map(function (e, i, arr) {                                     // 452
                                            if (e.infoSurRgt.length > 1) {                                             // 453
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 454
                                                //console.dir(e);                                                      // 456
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 457
                                                e.infoSurRgt.push(goodelem);                                           // 458
                                            }                                                                          // 459
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 460
                                            return e;                                                                  // 462
                                        }); //console.dir(nd);                                                         // 463
                                                                                                                       //
                                        return nd;                                                                     // 466
                                    }));                                                                               // 467
                                                                                                                       //
                                case 33:                                                                               // 30
                                    l = _context.sent;                                                                 // 413
                                    return _context.abrupt("return", l);                                               // 30
                                                                                                                       //
                                case 35:                                                                               // 30
                                    _context.next = 163;                                                               // 30
                                    break;                                                                             // 30
                                                                                                                       //
                                case 37:                                                                               // 30
                                    if (!(args.typeDate && args.date && args.statut && !args.domaine && !args.numenv && !args.numregl && !args.numpol && !args.nomtotal && !args.numreglStart && !args.numreglEnd)) {
                                        _context.next = 72;                                                            // 30
                                        break;                                                                         // 30
                                    }                                                                                  // 30
                                                                                                                       //
                                    _l = null;                                                                         // 472
                                    _context.t1 = args.typeDate;                                                       // 30
                                    _context.next = _context.t1 === "date_naiss" ? 42 : _context.t1 === "date_depot_treso" ? 46 : _context.t1 === "date_sort_treso" ? 50 : _context.t1 === "date_depot_sign" ? 54 : _context.t1 === "date_recep_sign_reg" ? 58 : _context.t1 === "date_retrait_reg" ? 62 : _context.t1 === "dateRDV" ? 66 : 70;
                                    break;                                                                             // 30
                                                                                                                       //
                                case 42:                                                                               // 30
                                    _context.next = 44;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 475
                                            exclude: ['id']                                                            // 475
                                        },                                                                             // 475
                                        order: [['wnrgt', 'DESC']],                                                    // 475
                                        where: {                                                                       // 475
                                            date_naiss: args.date,                                                     // 476
                                            statut_reg_retirer: args.statut                                            // 477
                                        },                                                                             // 475
                                        offset: args.offset,                                                           // 478
                                        limit: args.limit                                                              // 478
                                    }).then(function (res) {                                                           // 475
                                        var promises = [];                                                             // 479
                                        var dispo = void 0;                                                            // 480
                                        res.forEach(function (r) {                                                     // 481
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 482
                                                replacements: {                                                        // 484
                                                    numero_reg: r.wnrgt,                                               // 484
                                                    domaine: r.domaine                                                 // 484
                                                },                                                                     // 484
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 484
                                            })]).spread(function (infosurrgt) {                                        // 484
                                                dispo = r.toJSON();                                                    // 486
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 489
                                                dispo.etat = checkRdvDate(dispo);                                      // 490
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 491
                                                    nbj: -1,                                                           // 493
                                                    alerte: "ERROR"                                                    // 494
                                                };                                                                     // 492
                                                return dispo;                                                          // 496
                                            }));                                                                       // 497
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 499
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 500
                                                    replacements: {                                                    // 502
                                                        numcheque: r.cheque                                            // 502
                                                    },                                                                 // 502
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 502
                                                })]).spread(function (chequeState) {                                   // 502
                                                    dispo = r.toJSON();                                                // 504
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 506
                                                }));                                                                   // 507
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 511
                                        return Promise.all(promises);                                                  // 512
                                    }).then(function (dispos) {                                                        // 514
                                        var nd = dispos.map(function (e, i, arr) {                                     // 515
                                            if (e.infoSurRgt.length > 1) {                                             // 516
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 517
                                                //console.dir(e);                                                      // 519
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 520
                                                e.infoSurRgt.push(goodelem);                                           // 521
                                            }                                                                          // 522
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 523
                                            return e;                                                                  // 525
                                        }); //console.dir(nd);                                                         // 526
                                                                                                                       //
                                        return nd;                                                                     // 529
                                    }));                                                                               // 530
                                                                                                                       //
                                case 44:                                                                               // 30
                                    _l = _context.sent;                                                                // 475
                                    return _context.abrupt("return", _l);                                              // 30
                                                                                                                       //
                                case 46:                                                                               // 30
                                    _context.next = 48;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 533
                                            exclude: ['id']                                                            // 533
                                        },                                                                             // 533
                                        order: [['wnrgt', 'DESC']],                                                    // 533
                                        where: {                                                                       // 533
                                            date_depot_treso: args.date,                                               // 534
                                            statut_reg_retirer: args.statut                                            // 535
                                        },                                                                             // 533
                                        offset: args.offset,                                                           // 536
                                        limit: args.limit                                                              // 536
                                    }).then(function (res) {                                                           // 533
                                        var promises = [];                                                             // 537
                                        var dispo = void 0;                                                            // 538
                                        res.forEach(function (r) {                                                     // 539
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 540
                                                replacements: {                                                        // 542
                                                    numero_reg: r.wnrgt,                                               // 542
                                                    domaine: r.domaine                                                 // 542
                                                },                                                                     // 542
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 542
                                            })]).spread(function (infosurrgt) {                                        // 542
                                                dispo = r.toJSON();                                                    // 544
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 547
                                                dispo.etat = checkRdvDate(dispo);                                      // 548
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 549
                                                    nbj: -1,                                                           // 551
                                                    alerte: "ERROR"                                                    // 552
                                                };                                                                     // 550
                                                return dispo;                                                          // 554
                                            }));                                                                       // 555
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 557
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 558
                                                    replacements: {                                                    // 560
                                                        numcheque: r.cheque                                            // 560
                                                    },                                                                 // 560
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 560
                                                })]).spread(function (chequeState) {                                   // 560
                                                    dispo = r.toJSON();                                                // 562
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 564
                                                }));                                                                   // 565
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 569
                                        return Promise.all(promises);                                                  // 570
                                    }).then(function (dispos) {                                                        // 572
                                        var nd = dispos.map(function (e, i, arr) {                                     // 573
                                            if (e.infoSurRgt.length > 1) {                                             // 574
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 575
                                                //console.dir(e);                                                      // 577
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 578
                                                e.infoSurRgt.push(goodelem);                                           // 579
                                            }                                                                          // 580
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 581
                                            return e;                                                                  // 583
                                        }); //console.dir(nd);                                                         // 584
                                                                                                                       //
                                        return nd;                                                                     // 587
                                    }));                                                                               // 588
                                                                                                                       //
                                case 48:                                                                               // 30
                                    _l = _context.sent;                                                                // 533
                                    return _context.abrupt("return", _l);                                              // 30
                                                                                                                       //
                                case 50:                                                                               // 30
                                    _context.next = 52;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 591
                                            exclude: ['id']                                                            // 591
                                        },                                                                             // 591
                                        order: [['wnrgt', 'DESC']],                                                    // 591
                                        where: {                                                                       // 591
                                            date_sort_treso: args.date,                                                // 592
                                            statut_reg_retirer: args.statut                                            // 593
                                        },                                                                             // 591
                                        offset: args.offset,                                                           // 594
                                        limit: args.limit                                                              // 594
                                    }).then(function (res) {                                                           // 591
                                        var promises = [];                                                             // 595
                                        var dispo = void 0;                                                            // 596
                                        res.forEach(function (r) {                                                     // 597
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 598
                                                replacements: {                                                        // 600
                                                    numero_reg: r.wnrgt,                                               // 600
                                                    domaine: r.domaine                                                 // 600
                                                },                                                                     // 600
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 600
                                            })]).spread(function (infosurrgt) {                                        // 600
                                                dispo = r.toJSON();                                                    // 602
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 605
                                                dispo.etat = checkRdvDate(dispo);                                      // 606
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 607
                                                    nbj: -1,                                                           // 609
                                                    alerte: "ERROR"                                                    // 610
                                                };                                                                     // 608
                                                return dispo;                                                          // 612
                                            }));                                                                       // 613
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 615
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 616
                                                    replacements: {                                                    // 618
                                                        numcheque: r.cheque                                            // 618
                                                    },                                                                 // 618
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 618
                                                })]).spread(function (chequeState) {                                   // 618
                                                    dispo = r.toJSON();                                                // 620
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 622
                                                }));                                                                   // 623
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 627
                                        return Promise.all(promises);                                                  // 628
                                    }).then(function (dispos) {                                                        // 630
                                        var nd = dispos.map(function (e, i, arr) {                                     // 631
                                            if (e.infoSurRgt.length > 1) {                                             // 632
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 633
                                                //console.dir(e);                                                      // 635
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 636
                                                e.infoSurRgt.push(goodelem);                                           // 637
                                            }                                                                          // 638
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 639
                                            return e;                                                                  // 641
                                        }); //console.dir(nd);                                                         // 642
                                                                                                                       //
                                        return nd;                                                                     // 645
                                    }));                                                                               // 646
                                                                                                                       //
                                case 52:                                                                               // 30
                                    _l = _context.sent;                                                                // 591
                                    return _context.abrupt("return", _l);                                              // 30
                                                                                                                       //
                                case 54:                                                                               // 30
                                    _context.next = 56;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 649
                                            exclude: ['id']                                                            // 649
                                        },                                                                             // 649
                                        order: [['wnrgt', 'DESC']],                                                    // 649
                                        where: {                                                                       // 649
                                            date_depot_sign: args.date,                                                // 650
                                            statut_reg_retirer: args.statut                                            // 651
                                        },                                                                             // 649
                                        offset: args.offset,                                                           // 652
                                        limit: args.limit                                                              // 652
                                    }).then(function (res) {                                                           // 649
                                        var promises = [];                                                             // 653
                                        var dispo = void 0;                                                            // 654
                                        res.forEach(function (r) {                                                     // 655
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 656
                                                replacements: {                                                        // 658
                                                    numero_reg: r.wnrgt,                                               // 658
                                                    domaine: r.domaine                                                 // 658
                                                },                                                                     // 658
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 658
                                            })]).spread(function (infosurrgt) {                                        // 658
                                                dispo = r.toJSON();                                                    // 660
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 663
                                                dispo.etat = checkRdvDate(dispo);                                      // 664
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 665
                                                    nbj: -1,                                                           // 667
                                                    alerte: "ERROR"                                                    // 668
                                                };                                                                     // 666
                                                return dispo;                                                          // 670
                                            }));                                                                       // 671
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 673
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 674
                                                    replacements: {                                                    // 676
                                                        numcheque: r.cheque                                            // 676
                                                    },                                                                 // 676
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 676
                                                })]).spread(function (chequeState) {                                   // 676
                                                    dispo = r.toJSON();                                                // 678
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 680
                                                }));                                                                   // 681
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 685
                                        return Promise.all(promises);                                                  // 686
                                    }).then(function (dispos) {                                                        // 688
                                        var nd = dispos.map(function (e, i, arr) {                                     // 689
                                            if (e.infoSurRgt.length > 1) {                                             // 690
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 691
                                                //console.dir(e);                                                      // 693
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 694
                                                e.infoSurRgt.push(goodelem);                                           // 695
                                            }                                                                          // 696
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 697
                                            return e;                                                                  // 699
                                        }); //console.dir(nd);                                                         // 700
                                                                                                                       //
                                        return nd;                                                                     // 703
                                    }));                                                                               // 704
                                                                                                                       //
                                case 56:                                                                               // 30
                                    _l = _context.sent;                                                                // 649
                                    return _context.abrupt("return", _l);                                              // 30
                                                                                                                       //
                                case 58:                                                                               // 30
                                    _context.next = 60;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 707
                                            exclude: ['id']                                                            // 707
                                        },                                                                             // 707
                                        order: [['wnrgt', 'DESC']],                                                    // 707
                                        where: {                                                                       // 707
                                            date_recep_sign_reg: args.date,                                            // 708
                                            statut_reg_retirer: args.statut                                            // 709
                                        },                                                                             // 707
                                        offset: args.offset,                                                           // 710
                                        limit: args.limit                                                              // 710
                                    }).then(function (res) {                                                           // 707
                                        var promises = [];                                                             // 711
                                        var dispo = void 0;                                                            // 712
                                        res.forEach(function (r) {                                                     // 713
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 714
                                                replacements: {                                                        // 716
                                                    numero_reg: r.wnrgt,                                               // 716
                                                    domaine: r.domaine                                                 // 716
                                                },                                                                     // 716
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 716
                                            })]).spread(function (infosurrgt) {                                        // 716
                                                dispo = r.toJSON();                                                    // 718
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 721
                                                dispo.etat = checkRdvDate(dispo);                                      // 722
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 723
                                                    nbj: -1,                                                           // 725
                                                    alerte: "ERROR"                                                    // 726
                                                };                                                                     // 724
                                                return dispo;                                                          // 728
                                            }));                                                                       // 729
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 731
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 732
                                                    replacements: {                                                    // 734
                                                        numcheque: r.cheque                                            // 734
                                                    },                                                                 // 734
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 734
                                                })]).spread(function (chequeState) {                                   // 734
                                                    dispo = r.toJSON();                                                // 736
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 738
                                                }));                                                                   // 739
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 743
                                        return Promise.all(promises);                                                  // 744
                                    }).then(function (dispos) {                                                        // 746
                                        var nd = dispos.map(function (e, i, arr) {                                     // 747
                                            if (e.infoSurRgt.length > 1) {                                             // 748
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 749
                                                //console.dir(e);                                                      // 751
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 752
                                                e.infoSurRgt.push(goodelem);                                           // 753
                                            }                                                                          // 754
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 755
                                            return e;                                                                  // 757
                                        }); //console.dir(nd);                                                         // 758
                                                                                                                       //
                                        return nd;                                                                     // 761
                                    }));                                                                               // 762
                                                                                                                       //
                                case 60:                                                                               // 30
                                    _l = _context.sent;                                                                // 707
                                    return _context.abrupt("return", _l);                                              // 30
                                                                                                                       //
                                case 62:                                                                               // 30
                                    _context.next = 64;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 765
                                            exclude: ['id']                                                            // 765
                                        },                                                                             // 765
                                        order: [['wnrgt', 'DESC']],                                                    // 765
                                        where: {                                                                       // 765
                                            date_retrait_reg: args.date,                                               // 766
                                            statut_reg_retirer: args.statut                                            // 767
                                        },                                                                             // 765
                                        offset: args.offset,                                                           // 768
                                        limit: args.limit                                                              // 768
                                    }).then(function (res) {                                                           // 765
                                        var promises = [];                                                             // 769
                                        var dispo = void 0;                                                            // 770
                                        res.forEach(function (r) {                                                     // 771
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 772
                                                replacements: {                                                        // 774
                                                    numero_reg: r.wnrgt,                                               // 774
                                                    domaine: r.domaine                                                 // 774
                                                },                                                                     // 774
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 774
                                            })]).spread(function (infosurrgt) {                                        // 774
                                                dispo = r.toJSON();                                                    // 776
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 779
                                                dispo.etat = checkRdvDate(dispo);                                      // 780
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 781
                                                    nbj: -1,                                                           // 783
                                                    alerte: "ERROR"                                                    // 784
                                                };                                                                     // 782
                                                return dispo;                                                          // 786
                                            }));                                                                       // 787
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 789
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 790
                                                    replacements: {                                                    // 792
                                                        numcheque: r.cheque                                            // 792
                                                    },                                                                 // 792
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 792
                                                })]).spread(function (chequeState) {                                   // 792
                                                    dispo = r.toJSON();                                                // 794
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 796
                                                }));                                                                   // 797
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 801
                                        return Promise.all(promises);                                                  // 802
                                    }).then(function (dispos) {                                                        // 804
                                        var nd = dispos.map(function (e, i, arr) {                                     // 805
                                            if (e.infoSurRgt.length > 1) {                                             // 806
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 807
                                                //console.dir(e);                                                      // 809
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 810
                                                e.infoSurRgt.push(goodelem);                                           // 811
                                            }                                                                          // 812
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 813
                                            return e;                                                                  // 815
                                        }); //console.dir(nd);                                                         // 816
                                                                                                                       //
                                        return nd;                                                                     // 819
                                    }));                                                                               // 820
                                                                                                                       //
                                case 64:                                                                               // 30
                                    _l = _context.sent;                                                                // 765
                                    return _context.abrupt("return", _l);                                              // 30
                                                                                                                       //
                                case 66:                                                                               // 30
                                    _context.next = 68;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 823
                                            exclude: ['id']                                                            // 823
                                        },                                                                             // 823
                                        order: [['wnrgt', 'DESC']],                                                    // 823
                                        where: {                                                                       // 823
                                            dateRDV: args.date,                                                        // 824
                                            statut_reg_retirer: args.statut                                            // 825
                                        },                                                                             // 823
                                        offset: args.offset,                                                           // 826
                                        limit: args.limit                                                              // 826
                                    }).then(function (res) {                                                           // 823
                                        var promises = [];                                                             // 827
                                        var dispo = void 0;                                                            // 828
                                        res.forEach(function (r) {                                                     // 829
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 830
                                                replacements: {                                                        // 832
                                                    numero_reg: r.wnrgt,                                               // 832
                                                    domaine: r.domaine                                                 // 832
                                                },                                                                     // 832
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 832
                                            })]).spread(function (infosurrgt) {                                        // 832
                                                dispo = r.toJSON();                                                    // 834
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 837
                                                dispo.etat = checkRdvDate(dispo);                                      // 838
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 839
                                                    nbj: -1,                                                           // 841
                                                    alerte: "ERROR"                                                    // 842
                                                };                                                                     // 840
                                                return dispo;                                                          // 844
                                            }));                                                                       // 845
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 847
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 848
                                                    replacements: {                                                    // 850
                                                        numcheque: r.cheque                                            // 850
                                                    },                                                                 // 850
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 850
                                                })]).spread(function (chequeState) {                                   // 850
                                                    dispo = r.toJSON();                                                // 852
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 854
                                                }));                                                                   // 855
                                            }                                                                          // 857
                                        });                                                                            // 858
                                        return Promise.all(promises);                                                  // 859
                                    }).then(function (dispos) {                                                        // 861
                                        var nd = dispos.map(function (e, i, arr) {                                     // 862
                                            if (e.infoSurRgt.length > 1) {                                             // 863
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 864
                                                //console.dir(e);                                                      // 866
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 867
                                                e.infoSurRgt.push(goodelem);                                           // 868
                                            }                                                                          // 869
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 870
                                            return e;                                                                  // 872
                                        }); //console.dir(nd);                                                         // 873
                                                                                                                       //
                                        return nd;                                                                     // 876
                                    }));                                                                               // 877
                                                                                                                       //
                                case 68:                                                                               // 30
                                    _l = _context.sent;                                                                // 823
                                    return _context.abrupt("return", _l);                                              // 30
                                                                                                                       //
                                case 70:                                                                               // 30
                                    _context.next = 163;                                                               // 30
                                    break;                                                                             // 30
                                                                                                                       //
                                case 72:                                                                               // 30
                                    if (!(args.typeDate && args.date && args.statut && args.domaine && !args.numenv && !args.numregl && !args.numpol && !args.nomtotal && !args.numreglStart && !args.numreglEnd)) {
                                        _context.next = 108;                                                           // 30
                                        break;                                                                         // 30
                                    }                                                                                  // 30
                                                                                                                       //
                                    console.log(args.typeDate);                                                        // 882
                                    _l2 = null;                                                                        // 883
                                    _context.t2 = args.typeDate;                                                       // 30
                                    _context.next = _context.t2 === "date_naiss" ? 78 : _context.t2 === "date_depot_treso" ? 82 : _context.t2 === "date_sort_treso" ? 86 : _context.t2 === "date_depot_sign" ? 90 : _context.t2 === "date_recep_sign_reg" ? 94 : _context.t2 === "date_retrait_reg" ? 98 : _context.t2 === "dateRDV" ? 102 : 106;
                                    break;                                                                             // 30
                                                                                                                       //
                                case 78:                                                                               // 30
                                    _context.next = 80;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 886
                                            exclude: ['id']                                                            // 886
                                        },                                                                             // 886
                                        order: [['wnrgt', 'DESC']],                                                    // 886
                                        where: {                                                                       // 886
                                            date_naiss: args.date,                                                     // 887
                                            statut_reg_retirer: args.statut,                                           // 888
                                            domaine: args.domaine                                                      // 889
                                        },                                                                             // 886
                                        offset: args.offset,                                                           // 890
                                        limit: args.limit                                                              // 890
                                    }).then(function (res) {                                                           // 886
                                        var promises = [];                                                             // 891
                                        var dispo = void 0;                                                            // 892
                                        res.forEach(function (r) {                                                     // 893
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 894
                                                replacements: {                                                        // 896
                                                    numero_reg: r.wnrgt,                                               // 896
                                                    domaine: r.domaine                                                 // 896
                                                },                                                                     // 896
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 896
                                            })]).spread(function (infosurrgt) {                                        // 896
                                                dispo = r.toJSON();                                                    // 898
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 901
                                                dispo.etat = checkRdvDate(dispo);                                      // 902
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 903
                                                    nbj: -1,                                                           // 905
                                                    alerte: "ERROR"                                                    // 906
                                                };                                                                     // 904
                                                return dispo;                                                          // 908
                                            }));                                                                       // 909
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 911
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 912
                                                    replacements: {                                                    // 914
                                                        numcheque: r.cheque                                            // 914
                                                    },                                                                 // 914
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 914
                                                })]).spread(function (chequeState) {                                   // 914
                                                    dispo = r.toJSON();                                                // 916
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 918
                                                }));                                                                   // 919
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 923
                                        return Promise.all(promises);                                                  // 924
                                    }).then(function (dispos) {                                                        // 926
                                        var nd = dispos.map(function (e, i, arr) {                                     // 927
                                            if (e.infoSurRgt.length > 1) {                                             // 928
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 929
                                                //console.dir(e);                                                      // 931
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 932
                                                e.infoSurRgt.push(goodelem);                                           // 933
                                            }                                                                          // 934
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 935
                                            return e;                                                                  // 937
                                        }); //console.dir(nd);                                                         // 938
                                                                                                                       //
                                        return nd;                                                                     // 940
                                    }));                                                                               // 941
                                                                                                                       //
                                case 80:                                                                               // 30
                                    _l2 = _context.sent;                                                               // 886
                                    return _context.abrupt("return", _l2);                                             // 30
                                                                                                                       //
                                case 82:                                                                               // 30
                                    _context.next = 84;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 944
                                            exclude: ['id']                                                            // 944
                                        },                                                                             // 944
                                        order: [['wnrgt', 'DESC']],                                                    // 944
                                        where: {                                                                       // 944
                                            date_depot_treso: args.date,                                               // 945
                                            statut_reg_retirer: args.statut,                                           // 946
                                            domaine: args.domaine                                                      // 947
                                        },                                                                             // 944
                                        offset: args.offset,                                                           // 948
                                        limit: args.limit                                                              // 948
                                    }).then(function (res) {                                                           // 944
                                        var promises = [];                                                             // 949
                                        var dispo = void 0;                                                            // 950
                                        res.forEach(function (r) {                                                     // 951
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 952
                                                replacements: {                                                        // 954
                                                    numero_reg: r.wnrgt,                                               // 954
                                                    domaine: r.domaine                                                 // 954
                                                },                                                                     // 954
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 954
                                            })]).spread(function (infosurrgt) {                                        // 954
                                                dispo = r.toJSON();                                                    // 956
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 959
                                                dispo.etat = checkRdvDate(dispo);                                      // 960
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 961
                                                    nbj: -1,                                                           // 963
                                                    alerte: "ERROR"                                                    // 964
                                                };                                                                     // 962
                                                return dispo;                                                          // 966
                                            }));                                                                       // 967
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 969
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 970
                                                    replacements: {                                                    // 972
                                                        numcheque: r.cheque                                            // 972
                                                    },                                                                 // 972
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 972
                                                })]).spread(function (chequeState) {                                   // 972
                                                    dispo = r.toJSON();                                                // 974
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 976
                                                }));                                                                   // 977
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 981
                                        return Promise.all(promises);                                                  // 982
                                    }).then(function (dispos) {                                                        // 984
                                        var nd = dispos.map(function (e, i, arr) {                                     // 985
                                            if (e.infoSurRgt.length > 1) {                                             // 986
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 987
                                                //console.dir(e);                                                      // 989
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 990
                                                e.infoSurRgt.push(goodelem);                                           // 991
                                            }                                                                          // 992
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 993
                                            return e;                                                                  // 995
                                        }); //console.dir(nd);                                                         // 996
                                                                                                                       //
                                        return nd;                                                                     // 998
                                    }));                                                                               // 999
                                                                                                                       //
                                case 84:                                                                               // 30
                                    _l2 = _context.sent;                                                               // 944
                                    return _context.abrupt("return", _l2);                                             // 30
                                                                                                                       //
                                case 86:                                                                               // 30
                                    _context.next = 88;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 1002
                                            exclude: ['id']                                                            // 1002
                                        },                                                                             // 1002
                                        order: [['wnrgt', 'DESC']],                                                    // 1002
                                        where: {                                                                       // 1002
                                            date_sort_treso: args.date,                                                // 1003
                                            statut_reg_retirer: args.statut,                                           // 1004
                                            domaine: args.domaine                                                      // 1005
                                        },                                                                             // 1002
                                        offset: args.offset,                                                           // 1006
                                        limit: args.limit                                                              // 1006
                                    }).then(function (res) {                                                           // 1002
                                        var promises = [];                                                             // 1007
                                        var dispo = void 0;                                                            // 1008
                                        res.forEach(function (r) {                                                     // 1009
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 1010
                                                replacements: {                                                        // 1012
                                                    numero_reg: r.wnrgt,                                               // 1012
                                                    domaine: r.domaine                                                 // 1012
                                                },                                                                     // 1012
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 1012
                                            })]).spread(function (infosurrgt) {                                        // 1012
                                                dispo = r.toJSON();                                                    // 1014
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 1017
                                                dispo.etat = checkRdvDate(dispo);                                      // 1018
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 1019
                                                    nbj: -1,                                                           // 1021
                                                    alerte: "ERROR"                                                    // 1022
                                                };                                                                     // 1020
                                                return dispo;                                                          // 1024
                                            }));                                                                       // 1025
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 1027
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 1028
                                                    replacements: {                                                    // 1030
                                                        numcheque: r.cheque                                            // 1030
                                                    },                                                                 // 1030
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 1030
                                                })]).spread(function (chequeState) {                                   // 1030
                                                    dispo = r.toJSON();                                                // 1032
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 1034
                                                }));                                                                   // 1035
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 1039
                                        return Promise.all(promises);                                                  // 1040
                                    }).then(function (dispos) {                                                        // 1042
                                        var nd = dispos.map(function (e, i, arr) {                                     // 1043
                                            if (e.infoSurRgt.length > 1) {                                             // 1044
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 1045
                                                //console.dir(e);                                                      // 1047
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 1048
                                                e.infoSurRgt.push(goodelem);                                           // 1049
                                            }                                                                          // 1050
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 1051
                                            return e;                                                                  // 1053
                                        }); //console.dir(nd);                                                         // 1054
                                                                                                                       //
                                        return nd;                                                                     // 1056
                                    }));                                                                               // 1057
                                                                                                                       //
                                case 88:                                                                               // 30
                                    _l2 = _context.sent;                                                               // 1002
                                    return _context.abrupt("return", _l2);                                             // 30
                                                                                                                       //
                                case 90:                                                                               // 30
                                    _context.next = 92;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 1060
                                            exclude: ['id']                                                            // 1060
                                        },                                                                             // 1060
                                        order: [['wnrgt', 'DESC']],                                                    // 1060
                                        where: {                                                                       // 1060
                                            date_depot_sign: args.date,                                                // 1061
                                            statut_reg_retirer: args.statut,                                           // 1062
                                            domaine: args.domaine                                                      // 1063
                                        },                                                                             // 1060
                                        offset: args.offset,                                                           // 1064
                                        limit: args.limit                                                              // 1064
                                    }).then(function (res) {                                                           // 1060
                                        var promises = [];                                                             // 1065
                                        var dispo = void 0;                                                            // 1066
                                        res.forEach(function (r) {                                                     // 1067
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 1068
                                                replacements: {                                                        // 1070
                                                    numero_reg: r.wnrgt,                                               // 1070
                                                    domaine: r.domaine                                                 // 1070
                                                },                                                                     // 1070
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 1070
                                            })]).spread(function (infosurrgt) {                                        // 1070
                                                dispo = r.toJSON();                                                    // 1072
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 1075
                                                dispo.etat = checkRdvDate(dispo);                                      // 1076
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 1077
                                                    nbj: -1,                                                           // 1079
                                                    alerte: "ERROR"                                                    // 1080
                                                };                                                                     // 1078
                                                return dispo;                                                          // 1082
                                            }));                                                                       // 1083
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 1085
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 1086
                                                    replacements: {                                                    // 1088
                                                        numcheque: r.cheque                                            // 1088
                                                    },                                                                 // 1088
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 1088
                                                })]).spread(function (chequeState) {                                   // 1088
                                                    dispo = r.toJSON();                                                // 1090
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 1092
                                                }));                                                                   // 1093
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 1097
                                        return Promise.all(promises);                                                  // 1098
                                    }).then(function (dispos) {                                                        // 1100
                                        var nd = dispos.map(function (e, i, arr) {                                     // 1101
                                            if (e.infoSurRgt.length > 1) {                                             // 1102
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 1103
                                                //console.dir(e);                                                      // 1105
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 1106
                                                e.infoSurRgt.push(goodelem);                                           // 1107
                                            }                                                                          // 1108
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 1109
                                            return e;                                                                  // 1111
                                        }); //console.dir(nd);                                                         // 1112
                                                                                                                       //
                                        return nd;                                                                     // 1114
                                    }));                                                                               // 1115
                                                                                                                       //
                                case 92:                                                                               // 30
                                    _l2 = _context.sent;                                                               // 1060
                                    return _context.abrupt("return", _l2);                                             // 30
                                                                                                                       //
                                case 94:                                                                               // 30
                                    _context.next = 96;                                                                // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 1118
                                            exclude: ['id']                                                            // 1118
                                        },                                                                             // 1118
                                        order: [['wnrgt', 'DESC']],                                                    // 1118
                                        where: {                                                                       // 1118
                                            date_recep_sign_reg: args.date,                                            // 1119
                                            statut_reg_retirer: args.statut,                                           // 1120
                                            domaine: args.domaine                                                      // 1121
                                        },                                                                             // 1118
                                        offset: args.offset,                                                           // 1122
                                        limit: args.limit                                                              // 1122
                                    }).then(function (res) {                                                           // 1118
                                        var promises = [];                                                             // 1123
                                        var dispo = void 0;                                                            // 1124
                                        res.forEach(function (r) {                                                     // 1125
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 1126
                                                replacements: {                                                        // 1128
                                                    numero_reg: r.wnrgt,                                               // 1128
                                                    domaine: r.domaine                                                 // 1128
                                                },                                                                     // 1128
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 1128
                                            })]).spread(function (infosurrgt) {                                        // 1128
                                                dispo = r.toJSON();                                                    // 1130
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 1133
                                                dispo.etat = checkRdvDate(dispo);                                      // 1134
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 1135
                                                    nbj: -1,                                                           // 1137
                                                    alerte: "ERROR"                                                    // 1138
                                                };                                                                     // 1136
                                                return dispo;                                                          // 1140
                                            }));                                                                       // 1141
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 1143
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 1144
                                                    replacements: {                                                    // 1146
                                                        numcheque: r.cheque                                            // 1146
                                                    },                                                                 // 1146
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 1146
                                                })]).spread(function (chequeState) {                                   // 1146
                                                    dispo = r.toJSON();                                                // 1148
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 1150
                                                }));                                                                   // 1151
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 1155
                                        return Promise.all(promises);                                                  // 1156
                                    }).then(function (dispos) {                                                        // 1158
                                        var nd = dispos.map(function (e, i, arr) {                                     // 1159
                                            if (e.infoSurRgt.length > 1) {                                             // 1160
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 1161
                                                //console.dir(e);                                                      // 1163
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 1164
                                                e.infoSurRgt.push(goodelem);                                           // 1165
                                            }                                                                          // 1166
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 1167
                                            return e;                                                                  // 1169
                                        }); //console.dir(nd);                                                         // 1170
                                                                                                                       //
                                        return nd;                                                                     // 1172
                                    }));                                                                               // 1173
                                                                                                                       //
                                case 96:                                                                               // 30
                                    _l2 = _context.sent;                                                               // 1118
                                    return _context.abrupt("return", _l2);                                             // 30
                                                                                                                       //
                                case 98:                                                                               // 30
                                    _context.next = 100;                                                               // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 1177
                                            exclude: ['id']                                                            // 1177
                                        },                                                                             // 1177
                                        order: [['wnrgt', 'DESC']],                                                    // 1177
                                        where: {                                                                       // 1177
                                            date_retrait_reg: args.date,                                               // 1178
                                            statut_reg_retirer: args.statut,                                           // 1179
                                            domaine: args.domaine                                                      // 1180
                                        },                                                                             // 1177
                                        offset: args.offset,                                                           // 1181
                                        limit: args.limit                                                              // 1181
                                    }).then(function (res) {                                                           // 1177
                                        var promises = [];                                                             // 1182
                                        var dispo = void 0;                                                            // 1183
                                        res.forEach(function (r) {                                                     // 1184
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 1185
                                                replacements: {                                                        // 1187
                                                    numero_reg: r.wnrgt,                                               // 1187
                                                    domaine: r.domaine                                                 // 1187
                                                },                                                                     // 1187
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 1187
                                            })]).spread(function (infosurrgt) {                                        // 1187
                                                dispo = r.toJSON();                                                    // 1189
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 1192
                                                dispo.etat = checkRdvDate(dispo);                                      // 1193
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 1194
                                                    nbj: -1,                                                           // 1196
                                                    alerte: "ERROR"                                                    // 1197
                                                };                                                                     // 1195
                                                return dispo;                                                          // 1199
                                            }));                                                                       // 1200
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 1202
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 1203
                                                    replacements: {                                                    // 1205
                                                        numcheque: r.cheque                                            // 1205
                                                    },                                                                 // 1205
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 1205
                                                })]).spread(function (chequeState) {                                   // 1205
                                                    dispo = r.toJSON();                                                // 1207
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 1209
                                                }));                                                                   // 1210
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 1214
                                        return Promise.all(promises);                                                  // 1215
                                    }).then(function (dispos) {                                                        // 1217
                                        // console.dir(dispos);                                                        // 1218
                                        var nd = dispos.map(function (e, i, arr) {                                     // 1219
                                            if (e.infoSurRgt.length > 1) {                                             // 1220
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 1221
                                                //console.dir(e);                                                      // 1223
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 1224
                                                e.infoSurRgt.push(goodelem);                                           // 1225
                                            }                                                                          // 1226
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 1227
                                            return e;                                                                  // 1229
                                        }); //console.dir(nd);                                                         // 1230
                                                                                                                       //
                                        return nd;                                                                     // 1232
                                    }));                                                                               // 1233
                                                                                                                       //
                                case 100:                                                                              // 30
                                    _l2 = _context.sent;                                                               // 1177
                                    return _context.abrupt("return", _l2);                                             // 30
                                                                                                                       //
                                case 102:                                                                              // 30
                                    _context.next = 104;                                                               // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 1236
                                            exclude: ['id']                                                            // 1236
                                        },                                                                             // 1236
                                        order: [['wnrgt', 'DESC']],                                                    // 1236
                                        where: {                                                                       // 1236
                                            dateRDV: args.date,                                                        // 1237
                                            statut_reg_retirer: args.statut,                                           // 1238
                                            domaine: args.domaine                                                      // 1239
                                        },                                                                             // 1236
                                        offset: args.offset,                                                           // 1240
                                        limit: args.limit                                                              // 1240
                                    }).then(function (res) {                                                           // 1236
                                        var promises = [];                                                             // 1241
                                        var dispo = void 0;                                                            // 1242
                                        res.forEach(function (r) {                                                     // 1243
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 1244
                                                replacements: {                                                        // 1246
                                                    numero_reg: r.wnrgt,                                               // 1246
                                                    domaine: r.domaine                                                 // 1246
                                                },                                                                     // 1246
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 1246
                                            })]).spread(function (infosurrgt) {                                        // 1246
                                                dispo = r.toJSON();                                                    // 1248
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 1251
                                                dispo.etat = checkRdvDate(dispo);                                      // 1252
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 1253
                                                    nbj: -1,                                                           // 1255
                                                    alerte: "ERROR"                                                    // 1256
                                                };                                                                     // 1254
                                                return dispo;                                                          // 1258
                                            }));                                                                       // 1259
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 1261
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 1262
                                                    replacements: {                                                    // 1264
                                                        numcheque: r.cheque                                            // 1264
                                                    },                                                                 // 1264
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 1264
                                                })]).spread(function (chequeState) {                                   // 1264
                                                    dispo = r.toJSON();                                                // 1266
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 1268
                                                }));                                                                   // 1269
                                            }                                                                          // 1271
                                        });                                                                            // 1273
                                        return Promise.all(promises);                                                  // 1274
                                    }).then(function (dispos) {                                                        // 1276
                                        // console.dir(dispos);                                                        // 1277
                                        var nd = dispos.map(function (e, i, arr) {                                     // 1278
                                            if (e.infoSurRgt.length > 1) {                                             // 1279
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 1280
                                                //console.dir(e);                                                      // 1282
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 1283
                                                e.infoSurRgt.push(goodelem);                                           // 1284
                                            }                                                                          // 1285
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 1286
                                            return e;                                                                  // 1288
                                        }); //console.dir(nd);                                                         // 1289
                                                                                                                       //
                                        return nd;                                                                     // 1291
                                    }));                                                                               // 1292
                                                                                                                       //
                                case 104:                                                                              // 30
                                    _l2 = _context.sent;                                                               // 1236
                                    return _context.abrupt("return", _l2);                                             // 30
                                                                                                                       //
                                case 106:                                                                              // 30
                                    _context.next = 163;                                                               // 30
                                    break;                                                                             // 30
                                                                                                                       //
                                case 108:                                                                              // 30
                                    if (!(!args.typeDate && !args.date && !args.statut && !args.domaine && args.numenv && !args.numregl && !args.numpol && !args.nomtotal && !args.numreglStart && !args.numreglEnd)) {
                                        _context.next = 116;                                                           // 30
                                        break;                                                                         // 30
                                    }                                                                                  // 30
                                                                                                                       //
                                    console.log("son type est " + (0, _typeof3.default)(args.numenv) + "dans la requete du numero denvoi " + args.numenv);
                                    _context.next = 112;                                                               // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 1299
                                            exclude: ['id']                                                            // 1299
                                        },                                                                             // 1299
                                        where: {                                                                       // 1299
                                            Num_envoi: parseInt(args.numenv, 10)                                       // 1300
                                        },                                                                             // 1299
                                        order: [['wnrgt', 'DESC']],                                                    // 1301
                                        offset: args.offset,                                                           // 1301
                                        limit: args.limit                                                              // 1301
                                    }).then(function (res) {                                                           // 1299
                                        var promises = [];                                                             // 1302
                                        var dispo = void 0;                                                            // 1303
                                        res.forEach(function (r) {                                                     // 1304
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 1305
                                                replacements: {                                                        // 1307
                                                    numero_reg: r.wnrgt,                                               // 1307
                                                    domaine: r.domaine                                                 // 1307
                                                },                                                                     // 1307
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 1307
                                            })]).spread(function (infosurrgt) {                                        // 1307
                                                dispo = r.toJSON();                                                    // 1309
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 1312
                                                dispo.etat = checkRdvDate(dispo);                                      // 1313
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 1314
                                                    nbj: -1,                                                           // 1316
                                                    alerte: "ERROR"                                                    // 1317
                                                };                                                                     // 1315
                                                return dispo;                                                          // 1319
                                            }));                                                                       // 1320
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 1322
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 1323
                                                    replacements: {                                                    // 1325
                                                        numcheque: r.cheque                                            // 1325
                                                    },                                                                 // 1325
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 1325
                                                })]).spread(function (chequeState) {                                   // 1325
                                                    dispo = r.toJSON();                                                // 1327
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 1329
                                                }));                                                                   // 1330
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 1334
                                        return Promise.all(promises);                                                  // 1335
                                    }).then(function (dispos) {                                                        // 1337
                                        console.dir(dispos);                                                           // 1338
                                        var nd = dispos.map(function (e, i, arr) {                                     // 1339
                                            if (e.infoSurRgt.length > 1) {                                             // 1340
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 1341
                                                //console.dir(e);                                                      // 1343
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 1344
                                                e.infoSurRgt.push(goodelem);                                           // 1345
                                            }                                                                          // 1346
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 1347
                                            return e;                                                                  // 1349
                                        });                                                                            // 1350
                                        return nd;                                                                     // 1351
                                    }));                                                                               // 1352
                                                                                                                       //
                                case 112:                                                                              // 30
                                    _l3 = _context.sent;                                                               // 1299
                                    return _context.abrupt("return", _l3);                                             // 30
                                                                                                                       //
                                case 116:                                                                              // 30
                                    if (!(!args.typeDate && !args.date && !args.statut && !args.domaine && !args.numenv && args.numregl && !args.numpol && !args.nomtotal && !args.numreglStart && !args.numreglEnd)) {
                                        _context.next = 124;                                                           // 30
                                        break;                                                                         // 30
                                    }                                                                                  // 30
                                                                                                                       //
                                    console.log("son type est " + (0, _typeof3.default)(args.numregl));                // 1355
                                    _context.next = 120;                                                               // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 1356
                                            exclude: ['id']                                                            // 1356
                                        },                                                                             // 1356
                                        where: {                                                                       // 1356
                                            wnrgt: parseInt(args.numregl, 10)                                          // 1357
                                        },                                                                             // 1356
                                        offset: args.offset,                                                           // 1358
                                        limit: args.limit                                                              // 1358
                                    }).then(function (res) {                                                           // 1356
                                        var promises = [];                                                             // 1359
                                        var dispo = void 0;                                                            // 1360
                                        res.forEach(function (r) {                                                     // 1361
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 1362
                                                replacements: {                                                        // 1364
                                                    numero_reg: r.wnrgt,                                               // 1364
                                                    domaine: r.domaine                                                 // 1364
                                                },                                                                     // 1364
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 1364
                                            })]).spread(function (infosurrgt) {                                        // 1364
                                                dispo = r.toJSON();                                                    // 1366
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 1369
                                                dispo.etat = checkRdvDate(dispo);                                      // 1370
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 1371
                                                    nbj: -1,                                                           // 1373
                                                    alerte: "ERROR"                                                    // 1374
                                                };                                                                     // 1372
                                                return dispo;                                                          // 1376
                                            }));                                                                       // 1377
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 1379
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 1380
                                                    replacements: {                                                    // 1382
                                                        numcheque: r.cheque                                            // 1382
                                                    },                                                                 // 1382
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 1382
                                                })]).spread(function (chequeState) {                                   // 1382
                                                    dispo = r.toJSON();                                                // 1384
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 1386
                                                }));                                                                   // 1387
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 1391
                                        return Promise.all(promises);                                                  // 1392
                                    }).then(function (dispos) {                                                        // 1394
                                        console.dir(dispos);                                                           // 1395
                                        var nd = dispos.map(function (e, i, arr) {                                     // 1396
                                            if (e.infoSurRgt.length > 1) {                                             // 1397
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 1398
                                                //console.dir(e);                                                      // 1400
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 1401
                                                e.infoSurRgt.push(goodelem);                                           // 1402
                                            }                                                                          // 1403
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 1404
                                            return e;                                                                  // 1406
                                        });                                                                            // 1407
                                        return nd;                                                                     // 1408
                                    }));                                                                               // 1409
                                                                                                                       //
                                case 120:                                                                              // 30
                                    _l4 = _context.sent;                                                               // 1356
                                    return _context.abrupt("return", _l4);                                             // 30
                                                                                                                       //
                                case 124:                                                                              // 30
                                    if (!(!args.typeDate && !args.date && !args.statut && !args.domaine && !args.numenv && !args.numregl && args.numpol && !args.nomtotal && !args.numreglStart && !args.numreglEnd)) {
                                        _context.next = 131;                                                           // 30
                                        break;                                                                         // 30
                                    }                                                                                  // 30
                                                                                                                       //
                                    _context.next = 127;                                                               // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 1412
                                            exclude: ['id']                                                            // 1412
                                        },                                                                             // 1412
                                        where: {                                                                       // 1412
                                            wnupo: args.numpol                                                         // 1413
                                        },                                                                             // 1412
                                        offset: args.offset,                                                           // 1414
                                        limit: args.limit                                                              // 1414
                                    }).then(function (res) {                                                           // 1412
                                        var promises = [];                                                             // 1415
                                        var dispo = void 0;                                                            // 1416
                                        res.forEach(function (r) {                                                     // 1417
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 1418
                                                replacements: {                                                        // 1420
                                                    numero_reg: r.wnrgt,                                               // 1420
                                                    domaine: r.domaine                                                 // 1420
                                                },                                                                     // 1420
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 1420
                                            })]).spread(function (infosurrgt) {                                        // 1420
                                                dispo = r.toJSON();                                                    // 1422
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 1425
                                                dispo.etat = checkRdvDate(dispo);                                      // 1426
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 1427
                                                    nbj: -1,                                                           // 1429
                                                    alerte: "ERROR"                                                    // 1430
                                                };                                                                     // 1428
                                                return dispo;                                                          // 1432
                                            }));                                                                       // 1433
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 1435
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 1436
                                                    replacements: {                                                    // 1438
                                                        numcheque: r.cheque                                            // 1438
                                                    },                                                                 // 1438
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 1438
                                                })]).spread(function (chequeState) {                                   // 1438
                                                    dispo = r.toJSON();                                                // 1440
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 1442
                                                }));                                                                   // 1443
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 1447
                                        return Promise.all(promises);                                                  // 1448
                                    }).then(function (dispos) {                                                        // 1450
                                        //  console.dir(dispos);                                                       // 1451
                                        var nd = dispos.map(function (e, i, arr) {                                     // 1452
                                            if (e.infoSurRgt.length > 1) {                                             // 1453
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 1454
                                                //console.dir(e);                                                      // 1456
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 1457
                                                e.infoSurRgt.push(goodelem);                                           // 1458
                                            }                                                                          // 1459
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 1460
                                            return e;                                                                  // 1462
                                        });                                                                            // 1463
                                        return nd;                                                                     // 1464
                                    }));                                                                               // 1465
                                                                                                                       //
                                case 127:                                                                              // 30
                                    _l5 = _context.sent;                                                               // 1412
                                    return _context.abrupt("return", _l5);                                             // 30
                                                                                                                       //
                                case 131:                                                                              // 30
                                    if (!(!args.typeDate && !args.date && !args.statut && !args.domaine && !args.numenv && !args.numregl && !args.numpol && args.nomtotal && !args.numreglStart && !args.numreglEnd)) {
                                        _context.next = 138;                                                           // 30
                                        break;                                                                         // 30
                                    }                                                                                  // 30
                                                                                                                       //
                                    _context.next = 134;                                                               // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 1468
                                            exclude: ['id']                                                            // 1468
                                        },                                                                             // 1468
                                        where: {                                                                       // 1468
                                            nom_beneficiaire: {                                                        // 1469
                                                $like: '%' + args.nomtotal + '%'                                       // 1470
                                            }                                                                          // 1469
                                        },                                                                             // 1468
                                        offset: args.offset,                                                           // 1472
                                        limit: args.limit                                                              // 1472
                                    }).then(function (res) {                                                           // 1468
                                        var promises = [];                                                             // 1473
                                        var dispo = void 0;                                                            // 1474
                                        res.forEach(function (r) {                                                     // 1475
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 1476
                                                replacements: {                                                        // 1478
                                                    numero_reg: r.wnrgt,                                               // 1478
                                                    domaine: r.domaine                                                 // 1478
                                                },                                                                     // 1478
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 1478
                                            })]).spread(function (infosurrgt) {                                        // 1478
                                                dispo = r.toJSON();                                                    // 1480
                                                dispo.infoSurRgt = infosurrgt;                                         // 1481
                                                dispo.etat = checkRdvDate(dispo);                                      // 1482
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 1483
                                                    nbj: -1,                                                           // 1485
                                                    alerte: "ERROR"                                                    // 1486
                                                };                                                                     // 1484
                                                return dispo;                                                          // 1488
                                            }));                                                                       // 1489
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 1491
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 1492
                                                    replacements: {                                                    // 1494
                                                        numcheque: r.cheque                                            // 1494
                                                    },                                                                 // 1494
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 1494
                                                })]).spread(function (chequeState) {                                   // 1494
                                                    dispo = r.toJSON();                                                // 1496
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 1498
                                                }));                                                                   // 1499
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 1504
                                        return Promise.all(promises);                                                  // 1505
                                    }).then(function (dispos) {                                                        // 1507
                                        // console.dir(dispos);                                                        // 1508
                                        var nd = dispos.map(function (e, i, arr) {                                     // 1509
                                            if (e.infoSurRgt.length > 1) {                                             // 1510
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 1511
                                                //console.dir(e);                                                      // 1513
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 1514
                                                e.infoSurRgt.push(goodelem);                                           // 1515
                                            }                                                                          // 1516
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 1517
                                            return e;                                                                  // 1519
                                        });                                                                            // 1520
                                        return nd;                                                                     // 1521
                                    }));                                                                               // 1522
                                                                                                                       //
                                case 134:                                                                              // 30
                                    _l6 = _context.sent;                                                               // 1468
                                    return _context.abrupt("return", _l6);                                             // 30
                                                                                                                       //
                                case 138:                                                                              // 30
                                    if (!(!args.typeDate && !args.date && args.statut && !args.domaine && !args.numenv && !args.numregl && !args.numpol && !args.nomtotal && !args.numreglStart && !args.numreglEnd)) {
                                        _context.next = 145;                                                           // 30
                                        break;                                                                         // 30
                                    }                                                                                  // 30
                                                                                                                       //
                                    _context.next = 141;                                                               // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 1526
                                            exclude: ['id']                                                            // 1526
                                        },                                                                             // 1526
                                        where: {                                                                       // 1526
                                            statut_reg_retirer: args.statut                                            // 1527
                                        },                                                                             // 1526
                                        offset: args.offset,                                                           // 1528
                                        limit: args.limit                                                              // 1528
                                    }).then(function (res) {                                                           // 1526
                                        var promises = [];                                                             // 1529
                                        var dispo = void 0;                                                            // 1530
                                        res.forEach(function (r) {                                                     // 1531
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 1532
                                                replacements: {                                                        // 1534
                                                    numero_reg: r.wnrgt,                                               // 1534
                                                    domaine: r.domaine                                                 // 1534
                                                },                                                                     // 1534
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 1534
                                            })]).spread(function (infosurrgt) {                                        // 1534
                                                dispo = r.toJSON();                                                    // 1536
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 1539
                                                dispo.etat = checkRdvDate(dispo);                                      // 1540
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 1541
                                                    nbj: -1,                                                           // 1543
                                                    alerte: "ERROR"                                                    // 1544
                                                };                                                                     // 1542
                                                return dispo;                                                          // 1546
                                            }));                                                                       // 1547
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 1549
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 1550
                                                    replacements: {                                                    // 1552
                                                        numcheque: r.cheque                                            // 1552
                                                    },                                                                 // 1552
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 1552
                                                })]).spread(function (chequeState) {                                   // 1552
                                                    dispo = r.toJSON();                                                // 1554
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 1556
                                                }));                                                                   // 1557
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 1561
                                        return Promise.all(promises).catch(function (reason) {                         // 1562
                                            console.log(reason);                                                       // 1562
                                        });                                                                            // 1562
                                    }).then(function (dispos) {                                                        // 1564
                                        console.dir(dispos);                                                           // 1565
                                        var nd = dispos.map(function (e, i, arr) {                                     // 1566
                                            if (e.infoSurRgt.length > 1) {                                             // 1567
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 1568
                                                //console.dir(e);                                                      // 1570
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 1571
                                                e.infoSurRgt.push(goodelem);                                           // 1572
                                            }                                                                          // 1573
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 1574
                                            return e;                                                                  // 1576
                                        });                                                                            // 1577
                                        return nd;                                                                     // 1578
                                    }));                                                                               // 1579
                                                                                                                       //
                                case 141:                                                                              // 30
                                    _l7 = _context.sent;                                                               // 1526
                                    return _context.abrupt("return", _l7);                                             // 30
                                                                                                                       //
                                case 145:                                                                              // 30
                                    if (!(!args.typeDate && !args.date && !args.statut && args.domaine && !args.numenv && !args.numregl && !args.numpol && !args.nomtotal && !args.numreglStart && !args.numreglEnd)) {
                                        _context.next = 152;                                                           // 30
                                        break;                                                                         // 30
                                    }                                                                                  // 30
                                                                                                                       //
                                    _context.next = 148;                                                               // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 1584
                                            exclude: ['id']                                                            // 1584
                                        },                                                                             // 1584
                                        where: {                                                                       // 1585
                                            domaine: args.domaine                                                      // 1585
                                        },                                                                             // 1585
                                        order: [['wnrgt', 'DESC']],                                                    // 1586
                                        offset: args.offset,                                                           // 1587
                                        limit: args.limit                                                              // 1588
                                    }).then(function (res) {                                                           // 1583
                                        var promises = [];                                                             // 1589
                                        var dispo = void 0;                                                            // 1590
                                        res.forEach(function (r) {                                                     // 1591
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 1592
                                                replacements: {                                                        // 1594
                                                    numero_reg: r.wnrgt,                                               // 1594
                                                    domaine: r.domaine                                                 // 1594
                                                },                                                                     // 1594
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 1594
                                            })]).spread(function (infosurrgt) {                                        // 1594
                                                dispo = r.toJSON();                                                    // 1596
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 1599
                                                dispo.etat = checkRdvDate(dispo);                                      // 1600
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 1601
                                                    nbj: -1,                                                           // 1603
                                                    alerte: "ERROR"                                                    // 1604
                                                };                                                                     // 1602
                                                return dispo;                                                          // 1606
                                            }));                                                                       // 1607
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 1609
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 1610
                                                    replacements: {                                                    // 1612
                                                        numcheque: r.cheque                                            // 1612
                                                    },                                                                 // 1612
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 1612
                                                })]).spread(function (chequeState) {                                   // 1612
                                                    dispo = r.toJSON();                                                // 1614
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 1616
                                                }));                                                                   // 1617
                                            }                                                                          // 1619
                                        });                                                                            // 1620
                                        return Promise.all(promises);                                                  // 1621
                                    }).then(function (dispos) {                                                        // 1623
                                        // console.dir(dispos);                                                        // 1624
                                        //on enleve les doublons dans l'array de inforeg dispo                         // 1625
                                        var nd = dispos.map(function (e, i, arr) {                                     // 1626
                                            if (e.infoSurRgt.length > 1) {                                             // 1627
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 1628
                                                //console.dir(e);                                                      // 1630
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 1631
                                                e.infoSurRgt.push(goodelem);                                           // 1632
                                            }                                                                          // 1633
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 1634
                                            return e;                                                                  // 1636
                                        });                                                                            // 1637
                                        return nd;                                                                     // 1638
                                    }));                                                                               // 1639
                                                                                                                       //
                                case 148:                                                                              // 30
                                    _l8 = _context.sent;                                                               // 1583
                                    return _context.abrupt("return", _l8);                                             // 30
                                                                                                                       //
                                case 152:                                                                              // 30
                                    if (!(!args.typeDate && !args.date && !args.statut && !args.domaine && !args.numenv && !args.numregl && !args.numpol && !args.nomtotal && args.numreglStart && args.numreglEnd)) {
                                        _context.next = 159;                                                           // 30
                                        break;                                                                         // 30
                                    }                                                                                  // 30
                                                                                                                       //
                                    _context.next = 155;                                                               // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 1644
                                            exclude: ['id']                                                            // 1644
                                        },                                                                             // 1644
                                        where: {                                                                       // 1645
                                            wnrgt: {                                                                   // 1646
                                                $between: [args.numreglStart, args.numreglEnd]                         // 1647
                                            }                                                                          // 1646
                                        },                                                                             // 1645
                                        order: [['wnrgt', 'DESC']],                                                    // 1650
                                        offset: args.offset,                                                           // 1651
                                        limit: args.limit                                                              // 1652
                                    }).then(function (res) {                                                           // 1643
                                        var promises = [];                                                             // 1653
                                        var dispo = void 0;                                                            // 1654
                                        res.forEach(function (r) {                                                     // 1655
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 1656
                                                replacements: {                                                        // 1658
                                                    numero_reg: r.wnrgt,                                               // 1658
                                                    domaine: r.domaine                                                 // 1658
                                                },                                                                     // 1658
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 1658
                                            })]).spread(function (infosurrgt) {                                        // 1658
                                                dispo = r.toJSON();                                                    // 1660
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 1663
                                                dispo.etat = checkRdvDate(dispo);                                      // 1664
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 1665
                                                    nbj: -1,                                                           // 1667
                                                    alerte: "ERROR"                                                    // 1668
                                                };                                                                     // 1666
                                                return dispo;                                                          // 1670
                                            }));                                                                       // 1671
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 1673
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 1674
                                                    replacements: {                                                    // 1676
                                                        numcheque: r.cheque                                            // 1676
                                                    },                                                                 // 1676
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 1676
                                                })]).spread(function (chequeState) {                                   // 1676
                                                    dispo = r.toJSON();                                                // 1678
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 1680
                                                }));                                                                   // 1681
                                            }                                                                          // 1683
                                        });                                                                            // 1684
                                        return Promise.all(promises);                                                  // 1685
                                    }).then(function (dispos) {                                                        // 1687
                                        // console.dir(dispos);                                                        // 1688
                                        //on enleve les doublons dans l'array de inforeg dispo                         // 1689
                                        var nd = dispos.map(function (e, i, arr) {                                     // 1690
                                            if (e.infoSurRgt.length > 1) {                                             // 1691
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 1692
                                                //console.dir(e);                                                      // 1694
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 1695
                                                e.infoSurRgt.push(goodelem);                                           // 1696
                                            }                                                                          // 1697
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 1698
                                            return e;                                                                  // 1700
                                        });                                                                            // 1701
                                        return nd;                                                                     // 1702
                                    }));                                                                               // 1703
                                                                                                                       //
                                case 155:                                                                              // 30
                                    _l9 = _context.sent;                                                               // 1643
                                    return _context.abrupt("return", _l9);                                             // 30
                                                                                                                       //
                                case 159:                                                                              // 30
                                    _context.next = 161;                                                               // 30
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 30
                                        attributes: {                                                                  // 1709
                                            exclude: ['id']                                                            // 1709
                                        },                                                                             // 1709
                                        order: [['wnrgt', 'DESC']],                                                    // 1710
                                        offset: args.offset,                                                           // 1711
                                        limit: args.limit                                                              // 1712
                                    }).then(function (res) {                                                           // 1708
                                        var promises = [];                                                             // 1713
                                        var dispo = void 0;                                                            // 1714
                                        res.forEach(function (r) {                                                     // 1715
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 1717
                                                replacements: {                                                        // 1719
                                                    numero_reg: r.wnrgt,                                               // 1719
                                                    domaine: r.domaine                                                 // 1719
                                                },                                                                     // 1719
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 1719
                                            })]).spread(function (infosurrgt) {                                        // 1719
                                                dispo = r.toJSON();                                                    // 1721
                                                infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));
                                                infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                                                dispo.infoSurRgt = infosurrgt;                                         // 1724
                                                dispo.etat = checkRdvDate(dispo);                                      // 1725
                                                if (typeof dispo.etat == "undefined") dispo.etat = {                   // 1726
                                                    nbj: -1,                                                           // 1728
                                                    alerte: "ERROR"                                                    // 1729
                                                };                                                                     // 1727
                                                return dispo;                                                          // 1731
                                            }));                                                                       // 1732
                                                                                                                       //
                                            if (r.cheque && !r.Comments.includes("%MAN%")) {                           // 1734
                                                promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {            // 1735
                                                    replacements: {                                                    // 1737
                                                        numcheque: r.cheque                                            // 1737
                                                    },                                                                 // 1737
                                                    type: DBSQLSERVER.QueryTypes.SELECT                                // 1737
                                                })]).spread(function (chequeState) {                                   // 1737
                                                    dispo = r.toJSON();                                                // 1739
                                                    dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                                    return dispo;                                                      // 1741
                                                }));                                                                   // 1742
                                            } /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?"INCONNU":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/
                                        });                                                                            // 1746
                                        return Promise.all(promises);                                                  // 1747
                                    }).then(function (dispos) {                                                        // 1749
                                        // console.dir(dispos);                                                        // 1750
                                        //on enleve les doublons dans l'array de inforeg dispo                         // 1751
                                        var nd = dispos.map(function (e, i, arr) {                                     // 1752
                                            if (e.infoSurRgt.length > 1) {                                             // 1753
                                                var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);   // 1754
                                                //console.dir(e);                                                      // 1756
                                                                                                                       //
                                                e.infoSurRgt = [];                                                     // 1757
                                                e.infoSurRgt.push(goodelem);                                           // 1758
                                            }                                                                          // 1759
                                                                                                                       //
                                            if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";         // 1760
                                            return e;                                                                  // 1762
                                        });                                                                            // 1763
                                        return nd;                                                                     // 1764
                                    }));                                                                               // 1765
                                                                                                                       //
                                case 161:                                                                              // 30
                                    _l10 = _context.sent;                                                              // 1708
                                    return _context.abrupt("return", _l10);                                            // 30
                                                                                                                       //
                                case 163:                                                                              // 30
                                case "end":                                                                            // 30
                                    return _context.stop();                                                            // 30
                            }                                                                                          // 30
                        }                                                                                              // 30
                    }                                                                                                  // 30
                                                                                                                       //
                    return _callee$;                                                                                   // 30
                }(), null, this);                                                                                      // 30
            }                                                                                                          // 30
                                                                                                                       //
            return _callee;                                                                                            // 30
        }(),                                                                                                           // 30
        consultDispo: function (_, args) {                                                                             // 1770
            var query = "exec info_reg_dispo :numero_reg,:domaine ";                                                   // 1771
            var uquery = "select * from exp.reguser where redac like :red";                                            // 1772
            var chequeQuery = "select Dbo.check_etat_cheq(:numcheque) as chequeState"; //Avec une restriction sur lq date de rgt
                                                                                                                       //
            if (args.startDate && args.endDate && !args.numpolice && !args.numrgt && !args.numenv && !args.numcheque && !args.nomtotal && !args.birthdate) {
                return dispoSQL.findAll({                                                                              // 1776
                    attributes: {                                                                                      // 1776
                        exclude: ['id']                                                                                // 1776
                    },                                                                                                 // 1776
                    where: {                                                                                           // 1776
                        date_depot_treso: {                                                                            // 1777
                            $between: [args.startDate, args.endDate]                                                   // 1778
                        }                                                                                              // 1777
                    },                                                                                                 // 1776
                    order: [['wnrgt', 'DESC']]                                                                         // 1780
                }).then(function (res) {                                                                               // 1776
                    var promises = [];                                                                                 // 1781
                    var dispo = void 0;                                                                                // 1782
                    res.forEach(function (r) {                                                                         // 1783
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 1784
                            replacements: {                                                                            // 1786
                                red: r.redac                                                                           // 1786
                            },                                                                                         // 1786
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 1786
                        })]).spread(function (redac) {                                                                 // 1786
                            dispo = r.toJSON();                                                                        // 1788
                            dispo.infosRedac = redac;                                                                  // 1789
                            return dispo;                                                                              // 1790
                        }));                                                                                           // 1791
                                                                                                                       //
                        if (r.cheque && !r.Comments.includes("%MAN%")) {                                               // 1793
                            promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {                                // 1794
                                replacements: {                                                                        // 1796
                                    numcheque: r.cheque                                                                // 1796
                                },                                                                                     // 1796
                                type: DBSQLSERVER.QueryTypes.SELECT                                                    // 1796
                            })]).spread(function (chequeState) {                                                       // 1796
                                dispo = r.toJSON();                                                                    // 1798
                                dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                return dispo;                                                                          // 1800
                            }));                                                                                       // 1801
                        }                                                                                              // 1803
                                                                                                                       //
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 1804
                            replacements: {                                                                            // 1806
                                numero_reg: r.wnrgt,                                                                   // 1806
                                domaine: r.domaine                                                                     // 1806
                            },                                                                                         // 1806
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 1806
                        })]).spread(function (infosurrgt) {                                                            // 1806
                            dispo = r.toJSON();                                                                        // 1808
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 1809
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 1811
                            dispo.etat = checkRdvDate(dispo);                                                          // 1812
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 1813
                                nbj: -1,                                                                               // 1815
                                alerte: "ERROR"                                                                        // 1816
                            };                                                                                         // 1814
                            return dispo;                                                                              // 1818
                        }));                                                                                           // 1819
                    });                                                                                                // 1821
                    return Promise.all(promises);                                                                      // 1822
                }).then(function (dispos) {                                                                            // 1824
                    var nd = dispos.map(function (e, i, arr) {                                                         // 1825
                        if (e.infoSurRgt.length > 1) {                                                                 // 1826
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 1827
                            //console.dir(e);                                                                          // 1829
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 1830
                            e.infoSurRgt.push(goodelem);                                                               // 1831
                        }                                                                                              // 1832
                                                                                                                       //
                        if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";                             // 1833
                        return e;                                                                                      // 1835
                    });                                                                                                // 1836
                    return nd;                                                                                         // 1837
                });                                                                                                    // 1838
            } else if (args.startDate && args.endDate && args.numpolice && !args.numrgt && !args.numenv && !args.numcheque && !args.birthdate && !args.nomtotal) {
                return dispoSQL.findAll({                                                                              // 1842
                    attributes: {                                                                                      // 1842
                        exclude: ['id']                                                                                // 1842
                    },                                                                                                 // 1842
                    where: {                                                                                           // 1842
                        wnupo: parseInt(args.numpolice),                                                               // 1843
                        date_depot_treso: {                                                                            // 1844
                            $between: [args.startDate, args.endDate]                                                   // 1845
                        }                                                                                              // 1844
                    },                                                                                                 // 1842
                    order: [['wnrgt', 'DESC']]                                                                         // 1847
                }).then(function (res) {                                                                               // 1842
                    var promises = [];                                                                                 // 1848
                    var dispo = void 0;                                                                                // 1849
                    res.forEach(function (r) {                                                                         // 1850
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 1851
                            replacements: {                                                                            // 1853
                                red: r.redac                                                                           // 1853
                            },                                                                                         // 1853
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 1853
                        })]).spread(function (redac) {                                                                 // 1853
                            dispo = r.toJSON();                                                                        // 1855
                            dispo.infosRedac = redac;                                                                  // 1856
                            return dispo;                                                                              // 1857
                        }));                                                                                           // 1858
                                                                                                                       //
                        if (r.cheque && !r.Comments.includes("%MAN%")) {                                               // 1861
                            promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {                                // 1862
                                replacements: {                                                                        // 1864
                                    numcheque: r.cheque                                                                // 1864
                                },                                                                                     // 1864
                                type: DBSQLSERVER.QueryTypes.SELECT                                                    // 1864
                            })]).spread(function (chequeState) {                                                       // 1864
                                dispo = r.toJSON();                                                                    // 1866
                                dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                return dispo;                                                                          // 1868
                            }));                                                                                       // 1869
                        }                                                                                              // 1871
                                                                                                                       //
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 1872
                            replacements: {                                                                            // 1874
                                numero_reg: r.wnrgt,                                                                   // 1874
                                domaine: r.domaine                                                                     // 1874
                            },                                                                                         // 1874
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 1874
                        })]).spread(function (infosurrgt) {                                                            // 1874
                            dispo = r.toJSON();                                                                        // 1876
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 1877
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 1879
                            dispo.etat = checkRdvDate(dispo);                                                          // 1880
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 1881
                                nbj: -1,                                                                               // 1883
                                alerte: "ERROR"                                                                        // 1884
                            };                                                                                         // 1882
                            return dispo;                                                                              // 1886
                        }));                                                                                           // 1887
                    });                                                                                                // 1889
                    return Promise.all(promises);                                                                      // 1890
                }).then(function (dispos) {                                                                            // 1892
                    var nd = dispos.map(function (e, i, arr) {                                                         // 1893
                        if (e.infoSurRgt.length > 1) {                                                                 // 1894
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 1895
                            //console.dir(e);                                                                          // 1897
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 1898
                            e.infoSurRgt.push(goodelem);                                                               // 1899
                        }                                                                                              // 1900
                                                                                                                       //
                        if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";                             // 1901
                        return e;                                                                                      // 1903
                    });                                                                                                // 1904
                    return nd;                                                                                         // 1905
                });                                                                                                    // 1906
            } else if (args.startDate && args.endDate && args.numpolice && !args.numrgt && !args.numenv && !args.numcheque && args.birthdate && !args.nomtotal) {
                return dispoSQL.findAll({                                                                              // 1910
                    attributes: {                                                                                      // 1910
                        exclude: ['id']                                                                                // 1910
                    },                                                                                                 // 1910
                    where: {                                                                                           // 1910
                        wnupo: parseInt(args.numpolice),                                                               // 1911
                        date_naiss: args.birthdate,                                                                    // 1912
                        date_depot_treso: {                                                                            // 1913
                            $between: [args.startDate, args.endDate]                                                   // 1914
                        }                                                                                              // 1913
                    },                                                                                                 // 1910
                    order: [['wnrgt', 'DESC']]                                                                         // 1916
                }).then(function (res) {                                                                               // 1910
                    var promises = [];                                                                                 // 1917
                    var dispo = void 0;                                                                                // 1918
                    res.forEach(function (r) {                                                                         // 1919
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 1920
                            replacements: {                                                                            // 1922
                                red: r.redac                                                                           // 1922
                            },                                                                                         // 1922
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 1922
                        })]).spread(function (redac) {                                                                 // 1922
                            dispo = r.toJSON();                                                                        // 1924
                            dispo.infosRedac = redac;                                                                  // 1925
                            return dispo;                                                                              // 1926
                        }));                                                                                           // 1927
                                                                                                                       //
                        if (r.cheque && !r.Comments.includes("%MAN%")) {                                               // 1929
                            promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {                                // 1930
                                replacements: {                                                                        // 1932
                                    numcheque: r.cheque                                                                // 1932
                                },                                                                                     // 1932
                                type: DBSQLSERVER.QueryTypes.SELECT                                                    // 1932
                            })]).spread(function (chequeState) {                                                       // 1932
                                dispo = r.toJSON();                                                                    // 1934
                                dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                return dispo;                                                                          // 1936
                            }));                                                                                       // 1937
                        }                                                                                              // 1939
                                                                                                                       //
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 1940
                            replacements: {                                                                            // 1942
                                numero_reg: r.wnrgt,                                                                   // 1942
                                domaine: r.domaine                                                                     // 1942
                            },                                                                                         // 1942
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 1942
                        })]).spread(function (infosurrgt) {                                                            // 1942
                            dispo = r.toJSON();                                                                        // 1944
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 1945
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 1947
                            dispo.etat = checkRdvDate(dispo);                                                          // 1948
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 1949
                                nbj: -1,                                                                               // 1951
                                alerte: "ERROR"                                                                        // 1952
                            };                                                                                         // 1950
                            return dispo;                                                                              // 1954
                        }));                                                                                           // 1955
                    });                                                                                                // 1957
                    return Promise.all(promises);                                                                      // 1958
                }).then(function (dispos) {                                                                            // 1960
                    var nd = dispos.map(function (e, i, arr) {                                                         // 1961
                        if (e.infoSurRgt.length > 1) {                                                                 // 1962
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 1963
                            //console.dir(e);                                                                          // 1965
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 1966
                            e.infoSurRgt.push(goodelem);                                                               // 1967
                        }                                                                                              // 1968
                                                                                                                       //
                        if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";                             // 1969
                        return e;                                                                                      // 1971
                    });                                                                                                // 1972
                    return nd;                                                                                         // 1973
                });                                                                                                    // 1974
            } else if (args.startDate && args.endDate && args.numpolice && args.birthdate && args.nomtotal && !args.numrgt && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 1978
                    attributes: {                                                                                      // 1978
                        exclude: ['id']                                                                                // 1978
                    },                                                                                                 // 1978
                    where: {                                                                                           // 1978
                        wnupo: parseInt(args.numpolice),                                                               // 1979
                        nom_beneficiaire: {                                                                            // 1980
                            $like: '%' + args.nomtotal + '%'                                                           // 1981
                        },                                                                                             // 1980
                        date_naiss: args.birthdate,                                                                    // 1983
                        date_depot_treso: {                                                                            // 1984
                            $between: [args.startDate, args.endDate]                                                   // 1985
                        }                                                                                              // 1984
                    },                                                                                                 // 1978
                    order: [['wnrgt', 'DESC']]                                                                         // 1987
                }).then(function (res) {                                                                               // 1978
                    var promises = [];                                                                                 // 1988
                    var dispo = void 0;                                                                                // 1989
                    res.forEach(function (r) {                                                                         // 1990
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 1991
                            replacements: {                                                                            // 1993
                                red: r.redac                                                                           // 1993
                            },                                                                                         // 1993
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 1993
                        })]).spread(function (redac) {                                                                 // 1993
                            dispo = r.toJSON();                                                                        // 1995
                            dispo.infosRedac = redac;                                                                  // 1996
                            return dispo;                                                                              // 1997
                        }));                                                                                           // 1998
                                                                                                                       //
                        if (r.cheque && !r.Comments.includes("%MAN%")) {                                               // 2000
                            promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {                                // 2001
                                replacements: {                                                                        // 2003
                                    numcheque: r.cheque                                                                // 2003
                                },                                                                                     // 2003
                                type: DBSQLSERVER.QueryTypes.SELECT                                                    // 2003
                            })]).spread(function (chequeState) {                                                       // 2003
                                dispo = r.toJSON();                                                                    // 2005
                                dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                return dispo;                                                                          // 2007
                            }));                                                                                       // 2008
                        }                                                                                              // 2010
                                                                                                                       //
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 2011
                            replacements: {                                                                            // 2013
                                numero_reg: r.wnrgt,                                                                   // 2013
                                domaine: r.domaine                                                                     // 2013
                            },                                                                                         // 2013
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2013
                        })]).spread(function (infosurrgt) {                                                            // 2013
                            dispo = r.toJSON();                                                                        // 2015
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 2016
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 2018
                            dispo.etat = checkRdvDate(dispo);                                                          // 2019
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 2020
                                nbj: -1,                                                                               // 2022
                                alerte: "ERROR"                                                                        // 2023
                            };                                                                                         // 2021
                            return dispo;                                                                              // 2025
                        }));                                                                                           // 2026
                    });                                                                                                // 2028
                    return Promise.all(promises);                                                                      // 2029
                }).then(function (dispos) {                                                                            // 2031
                    var nd = dispos.map(function (e, i, arr) {                                                         // 2032
                        if (e.infoSurRgt.length > 1) {                                                                 // 2033
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 2034
                            //console.dir(e);                                                                          // 2036
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 2037
                            e.infoSurRgt.push(goodelem);                                                               // 2038
                        }                                                                                              // 2039
                                                                                                                       //
                        if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";                             // 2040
                        return e;                                                                                      // 2042
                    });                                                                                                // 2043
                    return nd;                                                                                         // 2044
                });                                                                                                    // 2045
            } else if (!args.startDate && !args.endDate && args.numpolice && args.birthdate && !args.numrgt && !args.numenv && !args.nomtotal && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 2049
                    attributes: {                                                                                      // 2049
                        exclude: ['id']                                                                                // 2049
                    },                                                                                                 // 2049
                    where: {                                                                                           // 2049
                        wnupo: parseInt(args.numpolice),                                                               // 2050
                        date_naiss: args.birthdate // statut_reg_retirer:'PRET'                                        // 2051
                                                                                                                       //
                    },                                                                                                 // 2049
                    order: [['wnrgt', 'DESC']],                                                                        // 2053
                    offset: args.offset,                                                                               // 2053
                    limit: args.limit                                                                                  // 2053
                }).then(function (res) {                                                                               // 2049
                    var promises = [];                                                                                 // 2054
                    var dispo = void 0;                                                                                // 2055
                    res.forEach(function (r) {                                                                         // 2056
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 2057
                            replacements: {                                                                            // 2059
                                red: r.redac                                                                           // 2059
                            },                                                                                         // 2059
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2059
                        })]).spread(function (redac) {                                                                 // 2059
                            dispo = r.toJSON();                                                                        // 2061
                            dispo.infosRedac = redac;                                                                  // 2062
                            return dispo;                                                                              // 2063
                        }));                                                                                           // 2064
                                                                                                                       //
                        if (r.cheque && !r.Comments.includes("%MAN%")) {                                               // 2066
                            promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {                                // 2067
                                replacements: {                                                                        // 2069
                                    numcheque: r.cheque                                                                // 2069
                                },                                                                                     // 2069
                                type: DBSQLSERVER.QueryTypes.SELECT                                                    // 2069
                            })]).spread(function (chequeState) {                                                       // 2069
                                dispo = r.toJSON();                                                                    // 2071
                                dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                return dispo;                                                                          // 2073
                            }));                                                                                       // 2074
                        }                                                                                              // 2076
                                                                                                                       //
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 2077
                            replacements: {                                                                            // 2079
                                numero_reg: r.wnrgt,                                                                   // 2079
                                domaine: r.domaine                                                                     // 2079
                            },                                                                                         // 2079
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2079
                        })]).spread(function (infosurrgt) {                                                            // 2079
                            dispo = r.toJSON();                                                                        // 2081
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 2082
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 2084
                            dispo.etat = checkRdvDate(dispo);                                                          // 2085
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 2086
                                nbj: -1,                                                                               // 2088
                                alerte: "ERROR"                                                                        // 2089
                            };                                                                                         // 2087
                            return dispo;                                                                              // 2091
                        }));                                                                                           // 2092
                    });                                                                                                // 2094
                    return Promise.all(promises);                                                                      // 2095
                }).then(function (dispos) {                                                                            // 2097
                    var nd = dispos.map(function (e, i, arr) {                                                         // 2098
                        if (e.infoSurRgt.length > 1) {                                                                 // 2099
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 2100
                            //console.dir(e);                                                                          // 2102
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 2103
                            e.infoSurRgt.push(goodelem);                                                               // 2104
                        }                                                                                              // 2105
                                                                                                                       //
                        if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";                             // 2106
                        return e;                                                                                      // 2108
                    });                                                                                                // 2109
                    return nd;                                                                                         // 2110
                });                                                                                                    // 2111
            } else if (!args.startDate && !args.endDate && args.numpolice && !args.birthdate && !args.numrgt && !args.numenv && args.nomtotal && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 2114
                    attributes: {                                                                                      // 2114
                        exclude: ['id']                                                                                // 2114
                    },                                                                                                 // 2114
                    where: {                                                                                           // 2114
                        wnupo: parseInt(args.numpolice),                                                               // 2115
                        nom_beneficiaire: {                                                                            // 2116
                            $like: '%' + args.nomtotal + '%'                                                           // 2117
                        } //statut_reg_retirer:'PRET'                                                                  // 2116
                                                                                                                       //
                    },                                                                                                 // 2114
                    order: [['wnrgt', 'DESC']],                                                                        // 2120
                    offset: args.offset,                                                                               // 2120
                    limit: args.limit                                                                                  // 2120
                }).then(function (res) {                                                                               // 2114
                    var promises = [];                                                                                 // 2121
                    var dispo = void 0;                                                                                // 2122
                    res.forEach(function (r) {                                                                         // 2123
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 2124
                            replacements: {                                                                            // 2126
                                red: r.redac                                                                           // 2126
                            },                                                                                         // 2126
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2126
                        })]).spread(function (redac) {                                                                 // 2126
                            dispo = r.toJSON();                                                                        // 2128
                            dispo.infosRedac = redac;                                                                  // 2129
                            return dispo;                                                                              // 2130
                        }));                                                                                           // 2131
                                                                                                                       //
                        if (r.cheque && !r.Comments.includes("%MAN%")) {                                               // 2133
                            promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {                                // 2134
                                replacements: {                                                                        // 2136
                                    numcheque: r.cheque                                                                // 2136
                                },                                                                                     // 2136
                                type: DBSQLSERVER.QueryTypes.SELECT                                                    // 2136
                            })]).spread(function (chequeState) {                                                       // 2136
                                dispo = r.toJSON();                                                                    // 2138
                                dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                return dispo;                                                                          // 2140
                            }));                                                                                       // 2141
                        }                                                                                              // 2143
                                                                                                                       //
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 2144
                            replacements: {                                                                            // 2146
                                numero_reg: r.wnrgt,                                                                   // 2146
                                domaine: r.domaine                                                                     // 2146
                            },                                                                                         // 2146
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2146
                        })]).spread(function (infosurrgt) {                                                            // 2146
                            dispo = r.toJSON();                                                                        // 2148
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 2149
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 2151
                            dispo.etat = checkRdvDate(dispo);                                                          // 2152
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 2153
                                nbj: -1,                                                                               // 2155
                                alerte: "ERROR"                                                                        // 2156
                            };                                                                                         // 2154
                            return dispo;                                                                              // 2158
                        }));                                                                                           // 2159
                    });                                                                                                // 2161
                    return Promise.all(promises);                                                                      // 2162
                }).then(function (dispos) {                                                                            // 2164
                    var nd = dispos.map(function (e, i, arr) {                                                         // 2165
                        if (e.infoSurRgt.length > 1) {                                                                 // 2166
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 2167
                            //console.dir(e);                                                                          // 2169
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 2170
                            e.infoSurRgt.push(goodelem);                                                               // 2171
                        }                                                                                              // 2172
                                                                                                                       //
                        if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";                             // 2173
                        return e;                                                                                      // 2175
                    });                                                                                                // 2176
                    return nd;                                                                                         // 2177
                });                                                                                                    // 2178
            } else if (!args.startDate && !args.endDate && !args.numpolice && args.birthdate && !args.nomtotal && !args.numrgt && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 2181
                    attributes: {                                                                                      // 2181
                        exclude: ['id']                                                                                // 2181
                    },                                                                                                 // 2181
                    where: {                                                                                           // 2181
                        date_naiss: args.birthdate // statut_reg_retirer:'PRET'                                        // 2182
                                                                                                                       //
                    },                                                                                                 // 2181
                    order: [['wnrgt', 'DESC']],                                                                        // 2184
                    offset: args.offset,                                                                               // 2184
                    limit: args.limit                                                                                  // 2184
                }).then(function (res) {                                                                               // 2181
                    var promises = [];                                                                                 // 2185
                    var dispo = void 0;                                                                                // 2186
                    res.forEach(function (r) {                                                                         // 2187
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 2188
                            replacements: {                                                                            // 2190
                                red: r.redac                                                                           // 2190
                            },                                                                                         // 2190
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2190
                        })]).spread(function (redac) {                                                                 // 2190
                            dispo = r.toJSON();                                                                        // 2192
                            dispo.infosRedac = redac;                                                                  // 2193
                            return dispo;                                                                              // 2194
                        }));                                                                                           // 2195
                                                                                                                       //
                        if (r.cheque && !r.Comments.includes("%MAN%")) {                                               // 2197
                            promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {                                // 2198
                                replacements: {                                                                        // 2200
                                    numcheque: r.cheque                                                                // 2200
                                },                                                                                     // 2200
                                type: DBSQLSERVER.QueryTypes.SELECT                                                    // 2200
                            })]).spread(function (chequeState) {                                                       // 2200
                                dispo = r.toJSON();                                                                    // 2202
                                dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                return dispo;                                                                          // 2204
                            }));                                                                                       // 2205
                        }                                                                                              // 2207
                                                                                                                       //
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 2208
                            replacements: {                                                                            // 2210
                                numero_reg: r.wnrgt,                                                                   // 2210
                                domaine: r.domaine                                                                     // 2210
                            },                                                                                         // 2210
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2210
                        })]).spread(function (infosurrgt) {                                                            // 2210
                            dispo = r.toJSON();                                                                        // 2212
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 2213
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 2215
                            dispo.etat = checkRdvDate(dispo);                                                          // 2216
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 2217
                                nbj: -1,                                                                               // 2219
                                alerte: "ERROR"                                                                        // 2220
                            };                                                                                         // 2218
                            return dispo;                                                                              // 2222
                        }));                                                                                           // 2223
                    });                                                                                                // 2225
                    return Promise.all(promises);                                                                      // 2226
                }).then(function (dispos) {                                                                            // 2228
                    var nd = dispos.map(function (e, i, arr) {                                                         // 2229
                        if (e.infoSurRgt.length > 1) {                                                                 // 2230
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 2231
                            //console.dir(e);                                                                          // 2233
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 2234
                            e.infoSurRgt.push(goodelem);                                                               // 2235
                        }                                                                                              // 2236
                                                                                                                       //
                        if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";                             // 2237
                        return e;                                                                                      // 2239
                    });                                                                                                // 2240
                    return nd;                                                                                         // 2241
                });                                                                                                    // 2242
            } else if (!args.startDate && !args.endDate && !args.numpolice && args.birthdate && args.nomtotal && !args.numrgt && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 2245
                    attributes: {                                                                                      // 2245
                        exclude: ['id']                                                                                // 2245
                    },                                                                                                 // 2245
                    where: {                                                                                           // 2245
                        date_naiss: args.birthdate,                                                                    // 2246
                        nom_beneficiaire: {                                                                            // 2247
                            $like: '%' + args.nomtotal + '%'                                                           // 2248
                        } //statut_reg_retirer:'PRET'                                                                  // 2247
                                                                                                                       //
                    },                                                                                                 // 2245
                    order: [['wnrgt', 'DESC']],                                                                        // 2251
                    offset: args.offset,                                                                               // 2251
                    limit: args.limit                                                                                  // 2251
                }).then(function (res) {                                                                               // 2245
                    var promises = [];                                                                                 // 2252
                    var dispo = void 0;                                                                                // 2253
                    res.forEach(function (r) {                                                                         // 2254
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 2255
                            replacements: {                                                                            // 2257
                                red: r.redac                                                                           // 2257
                            },                                                                                         // 2257
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2257
                        })]).spread(function (redac) {                                                                 // 2257
                            dispo = r.toJSON();                                                                        // 2259
                            dispo.infosRedac = redac;                                                                  // 2260
                            return dispo;                                                                              // 2261
                        }));                                                                                           // 2262
                                                                                                                       //
                        if (r.cheque && !r.Comments.includes("%MAN%")) {                                               // 2264
                            promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {                                // 2265
                                replacements: {                                                                        // 2267
                                    numcheque: r.cheque                                                                // 2267
                                },                                                                                     // 2267
                                type: DBSQLSERVER.QueryTypes.SELECT                                                    // 2267
                            })]).spread(function (chequeState) {                                                       // 2267
                                dispo = r.toJSON();                                                                    // 2269
                                dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                return dispo;                                                                          // 2271
                            }));                                                                                       // 2272
                        }                                                                                              // 2274
                                                                                                                       //
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 2275
                            replacements: {                                                                            // 2277
                                numero_reg: r.wnrgt,                                                                   // 2277
                                domaine: r.domaine                                                                     // 2277
                            },                                                                                         // 2277
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2277
                        })]).spread(function (infosurrgt) {                                                            // 2277
                            dispo = r.toJSON();                                                                        // 2279
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 2280
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 2282
                            dispo.etat = checkRdvDate(dispo);                                                          // 2283
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 2284
                                nbj: -1,                                                                               // 2286
                                alerte: "ERROR"                                                                        // 2287
                            };                                                                                         // 2285
                            return dispo;                                                                              // 2289
                        }));                                                                                           // 2290
                    });                                                                                                // 2292
                    return Promise.all(promises);                                                                      // 2293
                }).then(function (dispos) {                                                                            // 2295
                    var nd = dispos.map(function (e, i, arr) {                                                         // 2296
                        if (e.infoSurRgt.length > 1) {                                                                 // 2297
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 2298
                            //console.dir(e);                                                                          // 2300
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 2301
                            e.infoSurRgt.push(goodelem);                                                               // 2302
                        }                                                                                              // 2303
                                                                                                                       //
                        if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";                             // 2304
                        return e;                                                                                      // 2306
                    });                                                                                                // 2307
                    return nd;                                                                                         // 2308
                });                                                                                                    // 2309
            } else if (!args.startDate && !args.endDate && !args.numpolice && !args.birthdate && args.nomtotal && !args.numrgt && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 2312
                    attributes: {                                                                                      // 2312
                        exclude: ['id']                                                                                // 2312
                    },                                                                                                 // 2312
                    where: {                                                                                           // 2312
                        nom_beneficiaire: {                                                                            // 2313
                            $like: '%' + args.nomtotal + '%'                                                           // 2314
                        } // statut_reg_retirer:'PRET'                                                                 // 2313
                                                                                                                       //
                    },                                                                                                 // 2312
                    order: [['wnrgt', 'DESC']],                                                                        // 2317
                    offset: args.offset,                                                                               // 2317
                    limit: args.limit                                                                                  // 2317
                }).then(function (res) {                                                                               // 2312
                    var promises = [];                                                                                 // 2318
                    var dispo = void 0;                                                                                // 2319
                    res.forEach(function (r) {                                                                         // 2320
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 2321
                            replacements: {                                                                            // 2323
                                red: r.redac                                                                           // 2323
                            },                                                                                         // 2323
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2323
                        })]).spread(function (redac) {                                                                 // 2323
                            dispo = r.toJSON();                                                                        // 2325
                            dispo.infosRedac = redac;                                                                  // 2326
                            return dispo;                                                                              // 2327
                        }));                                                                                           // 2328
                                                                                                                       //
                        if (r.cheque && !r.Comments.includes("%MAN%")) {                                               // 2330
                            promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {                                // 2331
                                replacements: {                                                                        // 2333
                                    numcheque: r.cheque                                                                // 2333
                                },                                                                                     // 2333
                                type: DBSQLSERVER.QueryTypes.SELECT                                                    // 2333
                            })]).spread(function (chequeState) {                                                       // 2333
                                dispo = r.toJSON();                                                                    // 2335
                                dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                return dispo;                                                                          // 2337
                            }));                                                                                       // 2338
                        }                                                                                              // 2340
                                                                                                                       //
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 2341
                            replacements: {                                                                            // 2343
                                numero_reg: r.wnrgt,                                                                   // 2343
                                domaine: r.domaine                                                                     // 2343
                            },                                                                                         // 2343
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2343
                        })]).spread(function (infosurrgt) {                                                            // 2343
                            dispo = r.toJSON();                                                                        // 2345
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 2346
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 2348
                            dispo.etat = checkRdvDate(dispo);                                                          // 2349
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 2350
                                nbj: -1,                                                                               // 2352
                                alerte: "ERROR"                                                                        // 2353
                            };                                                                                         // 2351
                            return dispo;                                                                              // 2355
                        }));                                                                                           // 2356
                    });                                                                                                // 2358
                    return Promise.all(promises);                                                                      // 2359
                }).then(function (dispos) {                                                                            // 2361
                    var nd = dispos.map(function (e, i, arr) {                                                         // 2362
                        if (e.infoSurRgt.length > 1) {                                                                 // 2363
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 2364
                            //console.dir(e);                                                                          // 2366
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 2367
                            e.infoSurRgt.push(goodelem);                                                               // 2368
                        }                                                                                              // 2369
                                                                                                                       //
                        if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";                             // 2370
                        return e;                                                                                      // 2372
                    });                                                                                                // 2373
                    return nd;                                                                                         // 2374
                });                                                                                                    // 2375
            } else if (!args.startDate && !args.endDate && args.numpolice && args.birthdate && args.nomtotal && !args.numrgt && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 2378
                    attributes: {                                                                                      // 2378
                        exclude: ['id']                                                                                // 2378
                    },                                                                                                 // 2378
                    where: {                                                                                           // 2378
                        wnupo: parseInt(args.numpolice),                                                               // 2379
                        date_naiss: args.birthdate,                                                                    // 2380
                        nom_beneficiaire: {                                                                            // 2381
                            $like: '%' + args.nomtotal + '%'                                                           // 2382
                        } //statut_reg_retirer:'PRET'                                                                  // 2381
                                                                                                                       //
                    },                                                                                                 // 2378
                    order: [['wnrgt', 'DESC']],                                                                        // 2385
                    offset: args.offset,                                                                               // 2385
                    limit: args.limit                                                                                  // 2385
                }).then(function (res) {                                                                               // 2378
                    var promises = [];                                                                                 // 2386
                    var dispo = void 0;                                                                                // 2387
                    res.forEach(function (r) {                                                                         // 2388
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 2389
                            replacements: {                                                                            // 2391
                                red: r.redac                                                                           // 2391
                            },                                                                                         // 2391
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2391
                        })]).spread(function (redac) {                                                                 // 2391
                            dispo = r.toJSON();                                                                        // 2393
                            dispo.infosRedac = redac;                                                                  // 2394
                            return dispo;                                                                              // 2395
                        }));                                                                                           // 2396
                                                                                                                       //
                        if (r.cheque && !r.Comments.includes("%MAN%")) {                                               // 2398
                            promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {                                // 2399
                                replacements: {                                                                        // 2401
                                    numcheque: r.cheque                                                                // 2401
                                },                                                                                     // 2401
                                type: DBSQLSERVER.QueryTypes.SELECT                                                    // 2401
                            })]).spread(function (chequeState) {                                                       // 2401
                                dispo = r.toJSON();                                                                    // 2403
                                dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                return dispo;                                                                          // 2405
                            }));                                                                                       // 2406
                        }                                                                                              // 2408
                                                                                                                       //
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 2409
                            replacements: {                                                                            // 2411
                                numero_reg: r.wnrgt,                                                                   // 2411
                                domaine: r.domaine                                                                     // 2411
                            },                                                                                         // 2411
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2411
                        })]).spread(function (infosurrgt) {                                                            // 2411
                            dispo = r.toJSON();                                                                        // 2413
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 2414
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 2416
                            dispo.etat = checkRdvDate(dispo);                                                          // 2417
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 2418
                                nbj: -1,                                                                               // 2420
                                alerte: "ERROR"                                                                        // 2421
                            };                                                                                         // 2419
                            return dispo;                                                                              // 2423
                        }));                                                                                           // 2424
                    });                                                                                                // 2426
                    return Promise.all(promises);                                                                      // 2427
                }).then(function (dispos) {                                                                            // 2429
                    var nd = dispos.map(function (e, i, arr) {                                                         // 2430
                        if (e.infoSurRgt.length > 1) {                                                                 // 2431
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 2432
                            //console.dir(e);                                                                          // 2434
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 2435
                            e.infoSurRgt.push(goodelem);                                                               // 2436
                        }                                                                                              // 2437
                                                                                                                       //
                        if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";                             // 2438
                        return e;                                                                                      // 2440
                    });                                                                                                // 2441
                    return nd;                                                                                         // 2442
                });                                                                                                    // 2443
            } else if (!args.startDate && !args.endDate && args.numpolice && !args.birthdate && !args.nomtotal && !args.numrgt && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 2446
                    attributes: {                                                                                      // 2446
                        exclude: ['id']                                                                                // 2446
                    },                                                                                                 // 2446
                    where: {                                                                                           // 2446
                        wnupo: parseInt(args.numpolice) //statut_reg_retirer:'PRET'                                    // 2447
                                                                                                                       //
                    },                                                                                                 // 2446
                    order: [['wnrgt', 'DESC']],                                                                        // 2449
                    offset: args.offset,                                                                               // 2449
                    limit: args.limit                                                                                  // 2449
                }).then(function (res) {                                                                               // 2446
                    var promises = [];                                                                                 // 2450
                    var dispo = void 0;                                                                                // 2451
                    res.forEach(function (r) {                                                                         // 2452
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 2453
                            replacements: {                                                                            // 2455
                                red: r.redac                                                                           // 2455
                            },                                                                                         // 2455
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2455
                        })]).spread(function (redac) {                                                                 // 2455
                            dispo = r.toJSON();                                                                        // 2457
                            dispo.infosRedac = redac;                                                                  // 2458
                            return dispo;                                                                              // 2459
                        }));                                                                                           // 2460
                                                                                                                       //
                        if (r.cheque && !r.Comments.includes("%MAN%")) {                                               // 2462
                            promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {                                // 2463
                                replacements: {                                                                        // 2465
                                    numcheque: r.cheque                                                                // 2465
                                },                                                                                     // 2465
                                type: DBSQLSERVER.QueryTypes.SELECT                                                    // 2465
                            })]).spread(function (chequeState) {                                                       // 2465
                                dispo = r.toJSON();                                                                    // 2467
                                dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                return dispo;                                                                          // 2469
                            }));                                                                                       // 2470
                        }                                                                                              // 2472
                                                                                                                       //
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 2473
                            replacements: {                                                                            // 2475
                                numero_reg: r.wnrgt,                                                                   // 2475
                                domaine: r.domaine                                                                     // 2475
                            },                                                                                         // 2475
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2475
                        })]).spread(function (infosurrgt) {                                                            // 2475
                            dispo = r.toJSON();                                                                        // 2477
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 2478
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 2480
                            dispo.etat = checkRdvDate(dispo);                                                          // 2481
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 2482
                                nbj: -1,                                                                               // 2484
                                alerte: "ERROR"                                                                        // 2485
                            };                                                                                         // 2483
                            return dispo;                                                                              // 2487
                        }));                                                                                           // 2488
                    });                                                                                                // 2490
                    return Promise.all(promises);                                                                      // 2491
                }).then(function (dispos) {                                                                            // 2493
                    var nd = dispos.map(function (e, i, arr) {                                                         // 2494
                        if (e.infoSurRgt.length > 1) {                                                                 // 2495
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 2496
                            //console.dir(e);                                                                          // 2498
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 2499
                            e.infoSurRgt.push(goodelem);                                                               // 2500
                        }                                                                                              // 2501
                                                                                                                       //
                        if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";                             // 2502
                        return e;                                                                                      // 2504
                    });                                                                                                // 2505
                    return nd;                                                                                         // 2506
                });                                                                                                    // 2507
            } else if (!args.startDate && !args.endDate && !args.numpolice && !args.birthdate && !args.nomtotal && args.numrgt && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 2510
                    attributes: {                                                                                      // 2510
                        exclude: ['id']                                                                                // 2510
                    },                                                                                                 // 2510
                    where: {                                                                                           // 2510
                        wnrgt: parseInt(args.numrgt) //statut_reg_retirer:'PRET'                                       // 2511
                                                                                                                       //
                    },                                                                                                 // 2510
                    order: [['wnrgt', 'DESC']],                                                                        // 2513
                    offset: args.offset,                                                                               // 2513
                    limit: args.limit                                                                                  // 2513
                }).then(function (res) {                                                                               // 2510
                    var promises = [];                                                                                 // 2514
                    var dispo = void 0;                                                                                // 2515
                    res.forEach(function (r) {                                                                         // 2516
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 2517
                            replacements: {                                                                            // 2519
                                red: r.redac                                                                           // 2519
                            },                                                                                         // 2519
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2519
                        })]).spread(function (redac) {                                                                 // 2519
                            dispo = r.toJSON();                                                                        // 2521
                            dispo.infosRedac = redac;                                                                  // 2522
                            return dispo;                                                                              // 2523
                        }));                                                                                           // 2524
                                                                                                                       //
                        if (r.cheque && !r.Comments.includes("%MAN%")) {                                               // 2526
                            promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {                                // 2527
                                replacements: {                                                                        // 2529
                                    numcheque: r.cheque                                                                // 2529
                                },                                                                                     // 2529
                                type: DBSQLSERVER.QueryTypes.SELECT                                                    // 2529
                            })]).spread(function (chequeState) {                                                       // 2529
                                dispo = r.toJSON();                                                                    // 2531
                                dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                return dispo;                                                                          // 2533
                            }));                                                                                       // 2534
                        }                                                                                              // 2536
                                                                                                                       //
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 2537
                            replacements: {                                                                            // 2539
                                numero_reg: r.wnrgt,                                                                   // 2539
                                domaine: r.domaine                                                                     // 2539
                            },                                                                                         // 2539
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2539
                        })]).spread(function (infosurrgt) {                                                            // 2539
                            dispo = r.toJSON();                                                                        // 2541
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 2542
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 2544
                            dispo.etat = checkRdvDate(dispo);                                                          // 2545
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 2546
                                nbj: -1,                                                                               // 2548
                                alerte: "ERROR"                                                                        // 2549
                            };                                                                                         // 2547
                            return dispo;                                                                              // 2551
                        }));                                                                                           // 2552
                    });                                                                                                // 2554
                    return Promise.all(promises);                                                                      // 2555
                }).then(function (dispos) {                                                                            // 2557
                    var nd = dispos.map(function (e, i, arr) {                                                         // 2558
                        if (e.infoSurRgt.length > 1) {                                                                 // 2559
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 2560
                            //console.dir(e);                                                                          // 2562
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 2563
                            e.infoSurRgt.push(goodelem);                                                               // 2564
                        }                                                                                              // 2565
                                                                                                                       //
                        if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";                             // 2566
                        return e;                                                                                      // 2568
                    });                                                                                                // 2569
                    return nd;                                                                                         // 2570
                });                                                                                                    // 2571
            } else if (!args.startDate && !args.endDate && !args.numpolice && !args.birthdate && !args.nomtotal && !args.numrgt && args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 2574
                    attributes: {                                                                                      // 2574
                        exclude: ['id']                                                                                // 2574
                    },                                                                                                 // 2574
                    where: {                                                                                           // 2574
                        Num_envoi: parseInt(args.numenv) //statut_reg_retirer:'PRET'                                   // 2575
                                                                                                                       //
                    },                                                                                                 // 2574
                    order: [['wnrgt', 'DESC']],                                                                        // 2577
                    offset: args.offset,                                                                               // 2577
                    limit: args.limit                                                                                  // 2577
                }).then(function (res) {                                                                               // 2574
                    var promises = [];                                                                                 // 2578
                    var dispo = void 0;                                                                                // 2579
                    res.forEach(function (r) {                                                                         // 2580
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 2581
                            replacements: {                                                                            // 2583
                                red: r.redac                                                                           // 2583
                            },                                                                                         // 2583
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2583
                        })]).spread(function (redac) {                                                                 // 2583
                            dispo = r.toJSON();                                                                        // 2585
                            dispo.infosRedac = redac;                                                                  // 2586
                            return dispo;                                                                              // 2587
                        }));                                                                                           // 2588
                                                                                                                       //
                        if (r.cheque && !r.Comments.includes("%MAN%")) {                                               // 2590
                            promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {                                // 2591
                                replacements: {                                                                        // 2593
                                    numcheque: r.cheque                                                                // 2593
                                },                                                                                     // 2593
                                type: DBSQLSERVER.QueryTypes.SELECT                                                    // 2593
                            })]).spread(function (chequeState) {                                                       // 2593
                                dispo = r.toJSON();                                                                    // 2595
                                dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                return dispo;                                                                          // 2597
                            }));                                                                                       // 2598
                        }                                                                                              // 2600
                                                                                                                       //
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 2601
                            replacements: {                                                                            // 2603
                                numero_reg: r.wnrgt,                                                                   // 2603
                                domaine: r.domaine                                                                     // 2603
                            },                                                                                         // 2603
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2603
                        })]).spread(function (infosurrgt) {                                                            // 2603
                            dispo = r.toJSON();                                                                        // 2605
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 2606
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 2608
                            dispo.etat = checkRdvDate(dispo);                                                          // 2609
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 2610
                                nbj: -1,                                                                               // 2612
                                alerte: "ERROR"                                                                        // 2613
                            };                                                                                         // 2611
                            return dispo;                                                                              // 2615
                        }));                                                                                           // 2616
                    });                                                                                                // 2618
                    return Promise.all(promises);                                                                      // 2619
                }).then(function (dispos) {                                                                            // 2621
                    var nd = dispos.map(function (e, i, arr) {                                                         // 2622
                        if (e.infoSurRgt.length > 1) {                                                                 // 2623
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 2624
                            //console.dir(e);                                                                          // 2626
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 2627
                            e.infoSurRgt.push(goodelem);                                                               // 2628
                        }                                                                                              // 2629
                                                                                                                       //
                        if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";                             // 2630
                        return e;                                                                                      // 2632
                    });                                                                                                // 2633
                    return nd;                                                                                         // 2634
                });                                                                                                    // 2635
            } else if (!args.startDate && !args.endDate && !args.numpolice && !args.birthdate && !args.nomtotal && !args.numrgt && !args.numenv && args.numcheque) {
                return dispoSQL.findAll({                                                                              // 2638
                    attributes: {                                                                                      // 2638
                        exclude: ['id']                                                                                // 2638
                    },                                                                                                 // 2638
                    where: {                                                                                           // 2638
                        cheque: parseInt(args.numcheque) //statut_reg_retirer:'PRET'                                   // 2639
                                                                                                                       //
                    },                                                                                                 // 2638
                    order: [['wnrgt', 'DESC']],                                                                        // 2641
                    offset: args.offset,                                                                               // 2641
                    limit: args.limit                                                                                  // 2641
                }).then(function (res) {                                                                               // 2638
                    var promises = [];                                                                                 // 2642
                    var dispo = void 0;                                                                                // 2643
                    res.forEach(function (r) {                                                                         // 2644
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 2645
                            replacements: {                                                                            // 2647
                                red: r.redac                                                                           // 2647
                            },                                                                                         // 2647
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2647
                        })]).spread(function (redac) {                                                                 // 2647
                            dispo = r.toJSON();                                                                        // 2649
                            dispo.infosRedac = redac;                                                                  // 2650
                            return dispo;                                                                              // 2651
                        }));                                                                                           // 2652
                                                                                                                       //
                        if (r.cheque && !r.Comments.includes("%MAN%")) {                                               // 2654
                            promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {                                // 2655
                                replacements: {                                                                        // 2657
                                    numcheque: r.cheque                                                                // 2657
                                },                                                                                     // 2657
                                type: DBSQLSERVER.QueryTypes.SELECT                                                    // 2657
                            })]).spread(function (chequeState) {                                                       // 2657
                                dispo = r.toJSON();                                                                    // 2659
                                dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                return dispo;                                                                          // 2661
                            }));                                                                                       // 2662
                        }                                                                                              // 2664
                                                                                                                       //
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 2665
                            replacements: {                                                                            // 2667
                                numero_reg: r.wnrgt,                                                                   // 2667
                                domaine: r.domaine                                                                     // 2667
                            },                                                                                         // 2667
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2667
                        })]).spread(function (infosurrgt) {                                                            // 2667
                            dispo = r.toJSON();                                                                        // 2669
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 2670
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 2672
                            dispo.etat = checkRdvDate(dispo);                                                          // 2673
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 2674
                                nbj: -1,                                                                               // 2676
                                alerte: "ERROR"                                                                        // 2677
                            };                                                                                         // 2675
                            return dispo;                                                                              // 2679
                        }));                                                                                           // 2680
                    });                                                                                                // 2682
                    return Promise.all(promises);                                                                      // 2683
                }).then(function (dispos) {                                                                            // 2685
                    var nd = dispos.map(function (e, i, arr) {                                                         // 2686
                        if (e.infoSurRgt.length > 1) {                                                                 // 2687
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 2688
                            //console.dir(e);                                                                          // 2690
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 2691
                            e.infoSurRgt.push(goodelem);                                                               // 2692
                        }                                                                                              // 2693
                                                                                                                       //
                        if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";                             // 2694
                        return e;                                                                                      // 2696
                    });                                                                                                // 2697
                    return nd;                                                                                         // 2698
                });                                                                                                    // 2699
            } else {                                                                                                   // 2701
                return dispoSQL.findAll({                                                                              // 2702
                    attributes: {                                                                                      // 2702
                        exclude: ['id']                                                                                // 2702
                    },                                                                                                 // 2702
                    where: {                                                                                           // 2702
                        //statut_reg_retirer:'PRET'                                                                    // 2703
                        redac: {                                                                                       // 2704
                            $not: "ADM"                                                                                // 2705
                        }                                                                                              // 2704
                    },                                                                                                 // 2702
                    order: [['wnrgt', 'DESC']],                                                                        // 2707
                    offset: args.offset,                                                                               // 2707
                    limit: args.limit                                                                                  // 2707
                }).then(function (res) {                                                                               // 2702
                    var promises = [];                                                                                 // 2708
                    var dispo = void 0;                                                                                // 2709
                    res.forEach(function (r) {                                                                         // 2710
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 2712
                            replacements: {                                                                            // 2714
                                red: r.redac                                                                           // 2714
                            },                                                                                         // 2714
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2714
                        })]).spread(function (redac) {                                                                 // 2714
                            dispo = r.toJSON();                                                                        // 2716
                            dispo.infosRedac = redac;                                                                  // 2717
                            return dispo;                                                                              // 2718
                        }));                                                                                           // 2719
                                                                                                                       //
                        if (r.cheque && !r.Comments.includes("%MAN%")) {                                               // 2721
                            promises.push(Promise.all([DBSQLSERVER.query(chequeQuery, {                                // 2722
                                replacements: {                                                                        // 2724
                                    numcheque: r.cheque                                                                // 2724
                                },                                                                                     // 2724
                                type: DBSQLSERVER.QueryTypes.SELECT                                                    // 2724
                            })]).spread(function (chequeState) {                                                       // 2724
                                dispo = r.toJSON();                                                                    // 2726
                                dispo.chequeState = chequeState[0].chequeState == null ? "INCONNU" : chequeState[0].chequeState;
                                return dispo;                                                                          // 2728
                            }));                                                                                       // 2729
                        }                                                                                              // 2731
                                                                                                                       //
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 2733
                            replacements: {                                                                            // 2735
                                numero_reg: r.wnrgt,                                                                   // 2735
                                domaine: r.domaine                                                                     // 2735
                            },                                                                                         // 2735
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2735
                        })]).spread(function (infosurrgt) {                                                            // 2735
                            dispo = r.toJSON();                                                                        // 2737
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 2738
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 2740
                            dispo.etat = checkRdvDate(dispo);                                                          // 2741
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 2742
                                nbj: -1,                                                                               // 2744
                                alerte: "ERROR"                                                                        // 2745
                            };                                                                                         // 2743
                            return dispo;                                                                              // 2747
                        }));                                                                                           // 2748
                    });                                                                                                // 2750
                    return Promise.all(promises);                                                                      // 2751
                }).then(function (dispos) {                                                                            // 2753
                    var nd = dispos.map(function (e, i, arr) {                                                         // 2754
                        if (e.infoSurRgt.length > 1) {                                                                 // 2755
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 2756
                            //console.dir(e);                                                                          // 2758
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 2759
                            e.infoSurRgt.push(goodelem);                                                               // 2760
                        }                                                                                              // 2761
                                                                                                                       //
                        if (e.chequeState == null || !e.cheque) e.chequeState = "INCONNU";                             // 2762
                        return e;                                                                                      // 2764
                    });                                                                                                // 2765
                    return nd;                                                                                         // 2766
                });                                                                                                    // 2767
            }                                                                                                          // 2768
        },                                                                                                             // 2769
        consultDispoBank: function (_, args) {                                                                         // 2772
            var query = "exec info_reg_dispo :numero_reg,:domaine ";                                                   // 2773
            var uquery = "select * from exp.reguser where redac like :red"; //Avec une restriction sur lq date de rgt  // 2774
                                                                                                                       //
            if (args.startDate && args.endDate && !args.numrgt && !args.nomtotal && !args.birthdate && !args.numpolice && args.banque && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 2777
                    attributes: {                                                                                      // 2777
                        exclude: ['id']                                                                                // 2777
                    },                                                                                                 // 2777
                    where: {                                                                                           // 2777
                        date_retrait_reg: {                                                                            // 2778
                            $between: [args.startDate, args.endDate]                                                   // 2779
                        },                                                                                             // 2778
                        statut_reg_retirer: 'SORTIE',                                                                  // 2781
                        banque: args.banque /*$or:[                                                                    // 2782
                                                {                                                                      //
                                                    statut_reg_retirer:'SORTIE'                                        //
                                                },                                                                     //
                                                {                                                                      //
                                                    statut_reg_retirer:'REFUSER'                                       //
                                                }                                                                      //
                                            ]*/                                                                        //
                    },                                                                                                 // 2777
                    order: [['wnrgt', 'DESC']]                                                                         // 2792
                }).then(function (res) {                                                                               // 2777
                    var promises = [];                                                                                 // 2793
                    var dispo = void 0;                                                                                // 2794
                    res.forEach(function (r) {                                                                         // 2795
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 2796
                            replacements: {                                                                            // 2798
                                red: r.redac                                                                           // 2798
                            },                                                                                         // 2798
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2798
                        })]).spread(function (redac) {                                                                 // 2798
                            dispo = r.toJSON();                                                                        // 2800
                            dispo.infosRedac = redac;                                                                  // 2801
                            return dispo;                                                                              // 2802
                        }));                                                                                           // 2803
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 2805
                            replacements: {                                                                            // 2807
                                numero_reg: r.wnrgt,                                                                   // 2807
                                domaine: r.domaine                                                                     // 2807
                            },                                                                                         // 2807
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2807
                        })]).spread(function (infosurrgt) {                                                            // 2807
                            dispo = r.toJSON();                                                                        // 2809
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 2810
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 2812
                            dispo.etat = checkRdvDate(dispo);                                                          // 2813
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 2814
                                nbj: -1,                                                                               // 2816
                                alerte: "ERROR"                                                                        // 2817
                            };                                                                                         // 2815
                            return dispo;                                                                              // 2819
                        }));                                                                                           // 2820
                    });                                                                                                // 2822
                    return Promise.all(promises);                                                                      // 2823
                }).then(function (dispos) {                                                                            // 2825
                    var nd = dispos.map(function (e, i, arr) {                                                         // 2826
                        if (e.infoSurRgt.length > 1) {                                                                 // 2827
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 2828
                            //console.dir(e);                                                                          // 2830
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 2831
                            e.infoSurRgt.push(goodelem);                                                               // 2832
                        }                                                                                              // 2833
                                                                                                                       //
                        return e;                                                                                      // 2834
                    }); //console.dir(nd);                                                                             // 2835
                                                                                                                       //
                    return nd;                                                                                         // 2838
                });                                                                                                    // 2839
            } else if (args.startDate && args.endDate && args.numrgt && !args.birthdate && args.banque && !args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 2843
                    attributes: {                                                                                      // 2843
                        exclude: ['id']                                                                                // 2843
                    },                                                                                                 // 2843
                    where: {                                                                                           // 2843
                        wnupo: parseInt(args.numrgt),                                                                  // 2844
                        date_retrait_reg: {                                                                            // 2845
                            $between: [args.startDate, args.endDate]                                                   // 2846
                        },                                                                                             // 2845
                        statut_reg_retirer: 'SORTIE',                                                                  // 2848
                        banque: args.banque /*$or:[                                                                    // 2849
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'731%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'732%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'724%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7245%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'784%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7845%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'760%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                            ]*/ /* $or:[                                                               //
                                                     {                                                                 //
                                                         statut_reg_retirer:'SORTIE'                                   //
                                                     },                                                                //
                                                     {                                                                 //
                                                         statut_reg_retirer:'REFUSER'                                  //
                                                     }                                                                 //
                                                 ]*/                                                                   //
                    },                                                                                                 // 2843
                    order: [['wnrgt', 'DESC']]                                                                         // 2895
                }).then(function (res) {                                                                               // 2843
                    var promises = [];                                                                                 // 2896
                    var dispo = void 0;                                                                                // 2897
                    res.forEach(function (r) {                                                                         // 2898
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 2899
                            replacements: {                                                                            // 2901
                                red: r.redac                                                                           // 2901
                            },                                                                                         // 2901
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2901
                        })]).spread(function (redac) {                                                                 // 2901
                            dispo = r.toJSON();                                                                        // 2903
                            dispo.infosRedac = redac;                                                                  // 2904
                            return dispo;                                                                              // 2905
                        }));                                                                                           // 2906
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 2908
                            replacements: {                                                                            // 2910
                                numero_reg: r.wnrgt,                                                                   // 2910
                                domaine: r.domaine                                                                     // 2910
                            },                                                                                         // 2910
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 2910
                        })]).spread(function (infosurrgt) {                                                            // 2910
                            dispo = r.toJSON();                                                                        // 2912
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 2913
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 2915
                            dispo.etat = checkRdvDate(dispo);                                                          // 2916
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 2917
                                nbj: -1,                                                                               // 2919
                                alerte: "ERROR"                                                                        // 2920
                            };                                                                                         // 2918
                            return dispo;                                                                              // 2922
                        }));                                                                                           // 2923
                    });                                                                                                // 2925
                    return Promise.all(promises);                                                                      // 2926
                }).then(function (dispos) {                                                                            // 2928
                    var nd = dispos.map(function (e, i, arr) {                                                         // 2929
                        if (e.infoSurRgt.length > 1) {                                                                 // 2930
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 2931
                            //console.dir(e);                                                                          // 2933
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 2934
                            e.infoSurRgt.push(goodelem);                                                               // 2935
                        }                                                                                              // 2936
                                                                                                                       //
                        return e;                                                                                      // 2937
                    }); //console.dir(nd);                                                                             // 2938
                                                                                                                       //
                    return nd;                                                                                         // 2941
                });                                                                                                    // 2942
            } else if (args.startDate && args.endDate && args.numrgt && args.banque && args.birthdate && !args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 2946
                    attributes: {                                                                                      // 2946
                        exclude: ['id']                                                                                // 2946
                    },                                                                                                 // 2946
                    where: {                                                                                           // 2946
                        wnrgt: parseInt(args.numrgt),                                                                  // 2947
                        date_naiss: args.birthdate,                                                                    // 2948
                        statut_reg_retirer: 'SORTIE',                                                                  // 2949
                        banque: args.banque,                                                                           // 2950
                        /* $or:[                                                                                       // 2951
                             {                                                                                         //
                                 statut_reg_retirer:'SORTIE'                                                           //
                             },                                                                                        //
                             {                                                                                         //
                                 statut_reg_retirer:'REFUSER'                                                          //
                             }                                                                                         //
                         ],*/date_retrait_reg: {                                                                       //
                            $between: [args.startDate, args.endDate]                                                   // 2960
                        } /*$or:[                                                                                      // 2959
                              {                                                                                        //
                                  wnupo:{                                                                              //
                                      $like:'731%'                                                                     //
                                  }                                                                                    //
                              },                                                                                       //
                              {                                                                                        //
                                  wnupo:{                                                                              //
                                      $like:'732%'                                                                     //
                                  }                                                                                    //
                              },                                                                                       //
                              {                                                                                        //
                                  wnupo:{                                                                              //
                                      $like:'724%'                                                                     //
                                  }                                                                                    //
                              },                                                                                       //
                              {                                                                                        //
                                  wnupo:{                                                                              //
                                      $like:'7245%'                                                                    //
                                  }                                                                                    //
                              },                                                                                       //
                              {                                                                                        //
                                  wnupo:{                                                                              //
                                      $like:'784%'                                                                     //
                                  }                                                                                    //
                              },                                                                                       //
                              {                                                                                        //
                                  wnupo:{                                                                              //
                                      $like:'7845%'                                                                    //
                                  }                                                                                    //
                              },                                                                                       //
                              {                                                                                        //
                                  wnupo:{                                                                              //
                                      $like:'760%'                                                                     //
                                  }                                                                                    //
                              },                                                                                       //
                          ]*/                                                                                          //
                    },                                                                                                 // 2946
                    order: [['wnrgt', 'DESC']]                                                                         // 2999
                }).then(function (res) {                                                                               // 2946
                    var promises = [];                                                                                 // 3000
                    var dispo = void 0;                                                                                // 3001
                    res.forEach(function (r) {                                                                         // 3002
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 3003
                            replacements: {                                                                            // 3005
                                red: r.redac                                                                           // 3005
                            },                                                                                         // 3005
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3005
                        })]).spread(function (redac) {                                                                 // 3005
                            dispo = r.toJSON();                                                                        // 3007
                            dispo.infosRedac = redac;                                                                  // 3008
                            return dispo;                                                                              // 3009
                        }));                                                                                           // 3010
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 3012
                            replacements: {                                                                            // 3014
                                numero_reg: r.wnrgt,                                                                   // 3014
                                domaine: r.domaine                                                                     // 3014
                            },                                                                                         // 3014
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3014
                        })]).spread(function (infosurrgt) {                                                            // 3014
                            dispo = r.toJSON();                                                                        // 3016
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 3017
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 3019
                            dispo.etat = checkRdvDate(dispo);                                                          // 3020
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 3021
                                nbj: -1,                                                                               // 3023
                                alerte: "ERROR"                                                                        // 3024
                            };                                                                                         // 3022
                            return dispo;                                                                              // 3026
                        }));                                                                                           // 3027
                    });                                                                                                // 3029
                    return Promise.all(promises);                                                                      // 3030
                }).then(function (dispos) {                                                                            // 3032
                    var nd = dispos.map(function (e, i, arr) {                                                         // 3033
                        if (e.infoSurRgt.length > 1) {                                                                 // 3034
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 3035
                            //console.dir(e);                                                                          // 3037
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 3038
                            e.infoSurRgt.push(goodelem);                                                               // 3039
                        }                                                                                              // 3040
                                                                                                                       //
                        return e;                                                                                      // 3041
                    }); //console.dir(nd);                                                                             // 3042
                                                                                                                       //
                    return nd;                                                                                         // 3045
                });                                                                                                    // 3046
            } else if (args.startDate && args.endDate && args.banque && args.numrgt && args.birthdate && args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 3050
                    attributes: {                                                                                      // 3050
                        exclude: ['id']                                                                                // 3050
                    },                                                                                                 // 3050
                    where: {                                                                                           // 3050
                        wnrgt: parseInt(args.numrgt),                                                                  // 3051
                        nom_beneficiaire: {                                                                            // 3052
                            $like: '%' + args.nomtotal + '%'                                                           // 3053
                        },                                                                                             // 3052
                        date_naiss: args.birthdate,                                                                    // 3055
                        date_retrait_reg: {                                                                            // 3056
                            $between: [args.startDate, args.endDate]                                                   // 3057
                        },                                                                                             // 3056
                        statut_reg_retirer: 'SORTIE',                                                                  // 3059
                        banque: args.banque /*$or:[                                                                    // 3060
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'731%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'732%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'724%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7245%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'784%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7845%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'760%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                            ]*/ /*$or:[                                                                //
                                                    {                                                                  //
                                                        statut_reg_retirer:'SORTIE'                                    //
                                                    },                                                                 //
                                                    {                                                                  //
                                                        statut_reg_retirer:'REFUSER'                                   //
                                                    }                                                                  //
                                                ]*/                                                                    //
                    },                                                                                                 // 3050
                    order: [['wnrgt', 'DESC']]                                                                         // 3106
                }).then(function (res) {                                                                               // 3050
                    var promises = [];                                                                                 // 3107
                    var dispo = void 0;                                                                                // 3108
                    res.forEach(function (r) {                                                                         // 3109
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 3110
                            replacements: {                                                                            // 3112
                                red: r.redac                                                                           // 3112
                            },                                                                                         // 3112
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3112
                        })]).spread(function (redac) {                                                                 // 3112
                            dispo = r.toJSON();                                                                        // 3114
                            dispo.infosRedac = redac;                                                                  // 3115
                            return dispo;                                                                              // 3116
                        }));                                                                                           // 3117
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 3119
                            replacements: {                                                                            // 3121
                                numero_reg: r.wnrgt,                                                                   // 3121
                                domaine: r.domaine                                                                     // 3121
                            },                                                                                         // 3121
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3121
                        })]).spread(function (infosurrgt) {                                                            // 3121
                            dispo = r.toJSON();                                                                        // 3123
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 3124
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 3126
                            dispo.etat = checkRdvDate(dispo);                                                          // 3127
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 3128
                                nbj: -1,                                                                               // 3130
                                alerte: "ERROR"                                                                        // 3131
                            };                                                                                         // 3129
                            return dispo;                                                                              // 3133
                        }));                                                                                           // 3134
                    });                                                                                                // 3136
                    return Promise.all(promises);                                                                      // 3137
                }).then(function (dispos) {                                                                            // 3139
                    var nd = dispos.map(function (e, i, arr) {                                                         // 3140
                        if (e.infoSurRgt.length > 1) {                                                                 // 3141
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 3142
                            //console.dir(e);                                                                          // 3144
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 3145
                            e.infoSurRgt.push(goodelem);                                                               // 3146
                        }                                                                                              // 3147
                                                                                                                       //
                        return e;                                                                                      // 3148
                    }); //console.dir(nd);                                                                             // 3149
                                                                                                                       //
                    return nd;                                                                                         // 3152
                });                                                                                                    // 3153
            } else if (!args.startDate && !args.endDate && args.numrgt && args.banque && args.birthdate && !args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 3157
                    attributes: {                                                                                      // 3157
                        exclude: ['id']                                                                                // 3157
                    },                                                                                                 // 3157
                    where: {                                                                                           // 3157
                        wnrgt: parseInt(args.numrgt),                                                                  // 3158
                        date_naiss: args.birthdate,                                                                    // 3159
                        statut_reg_retirer: 'SORTIE',                                                                  // 3160
                        banque: args.banque /*$or:[                                                                    // 3161
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'731%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'732%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'724%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7245%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'784%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7845%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'760%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                            ]*/ /*$or:[                                                                //
                                                    {                                                                  //
                                                        statut_reg_retirer:'SORTIE'                                    //
                                                    },                                                                 //
                                                    {                                                                  //
                                                        statut_reg_retirer:'REFUSER'                                   //
                                                    }                                                                  //
                                                ]*/ // statut_reg_retirer:'PRET'                                       //
                                                                                                                       //
                    },                                                                                                 // 3157
                    order: [['wnrgt', 'DESC']],                                                                        // 3208
                    offset: args.offset,                                                                               // 3208
                    limit: args.limit                                                                                  // 3208
                }).then(function (res) {                                                                               // 3157
                    var promises = [];                                                                                 // 3209
                    var dispo = void 0;                                                                                // 3210
                    res.forEach(function (r) {                                                                         // 3211
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 3212
                            replacements: {                                                                            // 3214
                                red: r.redac                                                                           // 3214
                            },                                                                                         // 3214
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3214
                        })]).spread(function (redac) {                                                                 // 3214
                            dispo = r.toJSON();                                                                        // 3216
                            dispo.infosRedac = redac;                                                                  // 3217
                            return dispo;                                                                              // 3218
                        }));                                                                                           // 3219
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 3221
                            replacements: {                                                                            // 3223
                                numero_reg: r.wnrgt,                                                                   // 3223
                                domaine: r.domaine                                                                     // 3223
                            },                                                                                         // 3223
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3223
                        })]).spread(function (infosurrgt) {                                                            // 3223
                            dispo = r.toJSON();                                                                        // 3225
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 3226
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 3228
                            dispo.etat = checkRdvDate(dispo);                                                          // 3229
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 3230
                                nbj: -1,                                                                               // 3232
                                alerte: "ERROR"                                                                        // 3233
                            };                                                                                         // 3231
                            return dispo;                                                                              // 3235
                        }));                                                                                           // 3236
                    });                                                                                                // 3238
                    return Promise.all(promises);                                                                      // 3239
                }).then(function (dispos) {                                                                            // 3241
                    var nd = dispos.map(function (e, i, arr) {                                                         // 3242
                        if (e.infoSurRgt.length > 1) {                                                                 // 3243
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 3244
                            //console.dir(e);                                                                          // 3246
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 3247
                            e.infoSurRgt.push(goodelem);                                                               // 3248
                        }                                                                                              // 3249
                                                                                                                       //
                        return e;                                                                                      // 3250
                    }); //console.dir(nd);                                                                             // 3251
                                                                                                                       //
                    return nd;                                                                                         // 3254
                });                                                                                                    // 3255
            } else if (!args.startDate && !args.endDate && args.numrgt && args.banque && !args.birthdate && args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 3258
                    attributes: {                                                                                      // 3258
                        exclude: ['id']                                                                                // 3258
                    },                                                                                                 // 3258
                    where: {                                                                                           // 3258
                        wnrgt: parseInt(args.numrgt),                                                                  // 3259
                        statut_reg_retirer: 'SORTIE',                                                                  // 3260
                        banque: args.banque,                                                                           // 3261
                        nom_beneficiaire: {                                                                            // 3262
                            $like: '%' + args.nomtotal + '%'                                                           // 3263
                        } /*$or:[                                                                                      // 3262
                             {                                                                                         //
                                 wnupo:{                                                                               //
                                     $like:'731%'                                                                      //
                                 }                                                                                     //
                             },                                                                                        //
                             {                                                                                         //
                                 wnupo:{                                                                               //
                                     $like:'732%'                                                                      //
                                 }                                                                                     //
                             },                                                                                        //
                             {                                                                                         //
                                 wnupo:{                                                                               //
                                     $like:'724%'                                                                      //
                                 }                                                                                     //
                             },                                                                                        //
                             {                                                                                         //
                                 wnupo:{                                                                               //
                                     $like:'7245%'                                                                     //
                                 }                                                                                     //
                             },                                                                                        //
                             {                                                                                         //
                                 wnupo:{                                                                               //
                                     $like:'784%'                                                                      //
                                 }                                                                                     //
                             },                                                                                        //
                             {                                                                                         //
                                 wnupo:{                                                                               //
                                     $like:'7845%'                                                                     //
                                 }                                                                                     //
                             },                                                                                        //
                             {                                                                                         //
                                 wnupo:{                                                                               //
                                     $like:'760%'                                                                      //
                                 }                                                                                     //
                             },                                                                                        //
                          ]*/ /* $or:[                                                                                 //
                                       {                                                                               //
                                           statut_reg_retirer:'SORTIE'                                                 //
                                       },                                                                              //
                                       {                                                                               //
                                           statut_reg_retirer:'REFUSER'                                                //
                                       }                                                                               //
                               ]*/ //statut_reg_retirer:'PRET'                                                         //
                                                                                                                       //
                    },                                                                                                 // 3258
                    order: [['wnrgt', 'DESC']],                                                                        // 3311
                    offset: args.offset,                                                                               // 3311
                    limit: args.limit                                                                                  // 3311
                }).then(function (res) {                                                                               // 3258
                    var promises = [];                                                                                 // 3312
                    var dispo = void 0;                                                                                // 3313
                    res.forEach(function (r) {                                                                         // 3314
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 3315
                            replacements: {                                                                            // 3317
                                red: r.redac                                                                           // 3317
                            },                                                                                         // 3317
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3317
                        })]).spread(function (redac) {                                                                 // 3317
                            dispo = r.toJSON();                                                                        // 3319
                            dispo.infosRedac = redac;                                                                  // 3320
                            return dispo;                                                                              // 3321
                        }));                                                                                           // 3322
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 3324
                            replacements: {                                                                            // 3326
                                numero_reg: r.wnrgt,                                                                   // 3326
                                domaine: r.domaine                                                                     // 3326
                            },                                                                                         // 3326
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3326
                        })]).spread(function (infosurrgt) {                                                            // 3326
                            dispo = r.toJSON();                                                                        // 3328
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 3329
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 3331
                            dispo.etat = checkRdvDate(dispo);                                                          // 3332
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 3333
                                nbj: -1,                                                                               // 3335
                                alerte: "ERROR"                                                                        // 3336
                            };                                                                                         // 3334
                            return dispo;                                                                              // 3338
                        }));                                                                                           // 3339
                    });                                                                                                // 3341
                    return Promise.all(promises);                                                                      // 3342
                }).then(function (dispos) {                                                                            // 3344
                    var nd = dispos.map(function (e, i, arr) {                                                         // 3345
                        if (e.infoSurRgt.length > 1) {                                                                 // 3346
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 3347
                            //console.dir(e);                                                                          // 3349
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 3350
                            e.infoSurRgt.push(goodelem);                                                               // 3351
                        }                                                                                              // 3352
                                                                                                                       //
                        return e;                                                                                      // 3353
                    }); //console.dir(nd);                                                                             // 3354
                                                                                                                       //
                    return nd;                                                                                         // 3357
                });                                                                                                    // 3358
            } else if (!args.startDate && !args.endDate && args.numrgt && args.banque && !args.birthdate && !args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 3361
                    attributes: {                                                                                      // 3361
                        exclude: ['id']                                                                                // 3361
                    },                                                                                                 // 3361
                    where: {                                                                                           // 3361
                        wnrgt: parseInt(args.numrgt),                                                                  // 3362
                        statut_reg_retirer: 'SORTIE',                                                                  // 3363
                        banque: args.banque /*$or:[                                                                    // 3364
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'731%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'732%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'724%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7245%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'784%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7845%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'760%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                            ]*/ /* $or:[                                                               //
                                                         {                                                             //
                                                             statut_reg_retirer:'SORTIE'                               //
                                                         },                                                            //
                                                         {                                                             //
                                                             statut_reg_retirer:'REFUSER'                              //
                                                         }                                                             //
                                                 ]*/ //statut_reg_retirer:'PRET'                                       //
                                                                                                                       //
                    },                                                                                                 // 3361
                    order: [['wnrgt', 'DESC']],                                                                        // 3411
                    offset: args.offset,                                                                               // 3411
                    limit: args.limit                                                                                  // 3411
                }).then(function (res) {                                                                               // 3361
                    var promises = [];                                                                                 // 3412
                    var dispo = void 0;                                                                                // 3413
                    res.forEach(function (r) {                                                                         // 3414
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 3415
                            replacements: {                                                                            // 3417
                                red: r.redac                                                                           // 3417
                            },                                                                                         // 3417
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3417
                        })]).spread(function (redac) {                                                                 // 3417
                            dispo = r.toJSON();                                                                        // 3419
                            dispo.infosRedac = redac;                                                                  // 3420
                            return dispo;                                                                              // 3421
                        }));                                                                                           // 3422
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 3424
                            replacements: {                                                                            // 3426
                                numero_reg: r.wnrgt,                                                                   // 3426
                                domaine: r.domaine                                                                     // 3426
                            },                                                                                         // 3426
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3426
                        })]).spread(function (infosurrgt) {                                                            // 3426
                            dispo = r.toJSON();                                                                        // 3428
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 3429
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 3431
                            dispo.etat = checkRdvDate(dispo);                                                          // 3432
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 3433
                                nbj: -1,                                                                               // 3435
                                alerte: "ERROR"                                                                        // 3436
                            };                                                                                         // 3434
                            return dispo;                                                                              // 3438
                        }));                                                                                           // 3439
                    });                                                                                                // 3441
                    return Promise.all(promises);                                                                      // 3442
                }).then(function (dispos) {                                                                            // 3444
                    var nd = dispos.map(function (e, i, arr) {                                                         // 3445
                        if (e.infoSurRgt.length > 1) {                                                                 // 3446
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 3447
                            //console.dir(e);                                                                          // 3449
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 3450
                            e.infoSurRgt.push(goodelem);                                                               // 3451
                        }                                                                                              // 3452
                                                                                                                       //
                        return e;                                                                                      // 3453
                    }); //console.dir(nd);                                                                             // 3454
                                                                                                                       //
                    return nd;                                                                                         // 3457
                });                                                                                                    // 3458
            } else if (!args.startDate && !args.endDate && !args.numrgt && args.birthdate && args.banque && !args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 3461
                    attributes: {                                                                                      // 3461
                        exclude: ['id']                                                                                // 3461
                    },                                                                                                 // 3461
                    where: {                                                                                           // 3461
                        date_naiss: args.birthdate,                                                                    // 3462
                        statut_reg_retirer: 'SORTIE',                                                                  // 3463
                        banque: args.banque /*$or:[                                                                    // 3464
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'731%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'732%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'724%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7245%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'784%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7845%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'760%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                            ]*/ /*$or:[                                                                //
                                                    {                                                                  //
                                                        statut_reg_retirer:'SORTIE'                                    //
                                                    },                                                                 //
                                                    {                                                                  //
                                                        statut_reg_retirer:'REFUSER'                                   //
                                                    }                                                                  //
                                                ]*/ // statut_reg_retirer:'PRET'                                       //
                                                                                                                       //
                    },                                                                                                 // 3461
                    order: [['wnrgt', 'DESC']],                                                                        // 3511
                    offset: args.offset,                                                                               // 3511
                    limit: args.limit                                                                                  // 3511
                }).then(function (res) {                                                                               // 3461
                    var promises = [];                                                                                 // 3512
                    var dispo = void 0;                                                                                // 3513
                    res.forEach(function (r) {                                                                         // 3514
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 3515
                            replacements: {                                                                            // 3517
                                red: r.redac                                                                           // 3517
                            },                                                                                         // 3517
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3517
                        })]).spread(function (redac) {                                                                 // 3517
                            dispo = r.toJSON();                                                                        // 3519
                            dispo.infosRedac = redac;                                                                  // 3520
                            return dispo;                                                                              // 3521
                        }));                                                                                           // 3522
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 3524
                            replacements: {                                                                            // 3526
                                numero_reg: r.wnrgt,                                                                   // 3526
                                domaine: r.domaine                                                                     // 3526
                            },                                                                                         // 3526
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3526
                        })]).spread(function (infosurrgt) {                                                            // 3526
                            dispo = r.toJSON();                                                                        // 3528
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 3529
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 3531
                            dispo.etat = checkRdvDate(dispo);                                                          // 3532
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 3533
                                nbj: -1,                                                                               // 3535
                                alerte: "ERROR"                                                                        // 3536
                            };                                                                                         // 3534
                            return dispo;                                                                              // 3538
                        }));                                                                                           // 3539
                    });                                                                                                // 3541
                    return Promise.all(promises);                                                                      // 3542
                }).then(function (dispos) {                                                                            // 3544
                    var nd = dispos.map(function (e, i, arr) {                                                         // 3545
                        if (e.infoSurRgt.length > 1) {                                                                 // 3546
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 3547
                            //console.dir(e);                                                                          // 3549
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 3550
                            e.infoSurRgt.push(goodelem);                                                               // 3551
                        }                                                                                              // 3552
                                                                                                                       //
                        return e;                                                                                      // 3553
                    }); //console.dir(nd);                                                                             // 3554
                                                                                                                       //
                    return nd;                                                                                         // 3557
                });                                                                                                    // 3558
            } else if (!args.startDate && !args.endDate && !args.numrgt && args.birthdate && args.banque && args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 3561
                    attributes: {                                                                                      // 3561
                        exclude: ['id']                                                                                // 3561
                    },                                                                                                 // 3561
                    where: {                                                                                           // 3561
                        date_naiss: args.birthdate,                                                                    // 3562
                        statut_reg_retirer: 'SORTIE',                                                                  // 3563
                        banque: args.banque,                                                                           // 3564
                        nom_beneficiaire: {                                                                            // 3565
                            $like: '%' + args.nomtotal + '%'                                                           // 3566
                        } /*$or:[                                                                                      // 3565
                             {                                                                                         //
                                 wnupo:{                                                                               //
                                     $like:'731%'                                                                      //
                                 }                                                                                     //
                             },                                                                                        //
                             {                                                                                         //
                                 wnupo:{                                                                               //
                                     $like:'732%'                                                                      //
                                 }                                                                                     //
                             },                                                                                        //
                             {                                                                                         //
                                 wnupo:{                                                                               //
                                     $like:'724%'                                                                      //
                                 }                                                                                     //
                             },                                                                                        //
                             {                                                                                         //
                                 wnupo:{                                                                               //
                                     $like:'7245%'                                                                     //
                                 }                                                                                     //
                             },                                                                                        //
                             {                                                                                         //
                                 wnupo:{                                                                               //
                                     $like:'784%'                                                                      //
                                 }                                                                                     //
                             },                                                                                        //
                             {                                                                                         //
                                 wnupo:{                                                                               //
                                     $like:'7845%'                                                                     //
                                 }                                                                                     //
                             },                                                                                        //
                             {                                                                                         //
                                 wnupo:{                                                                               //
                                     $like:'760%'                                                                      //
                                 }                                                                                     //
                             },                                                                                        //
                          ]*/ /*$or:[                                                                                  //
                                 {                                                                                     //
                                     statut_reg_retirer:'SORTIE'                                                       //
                                 },                                                                                    //
                                 {                                                                                     //
                                     statut_reg_retirer:'REFUSER'                                                      //
                                 }                                                                                     //
                              ]*/ //statut_reg_retirer:'PRET'                                                          //
                                                                                                                       //
                    },                                                                                                 // 3561
                    order: [['wnrgt', 'DESC']],                                                                        // 3614
                    offset: args.offset,                                                                               // 3614
                    limit: args.limit                                                                                  // 3614
                }).then(function (res) {                                                                               // 3561
                    var promises = [];                                                                                 // 3615
                    var dispo = void 0;                                                                                // 3616
                    res.forEach(function (r) {                                                                         // 3617
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 3618
                            replacements: {                                                                            // 3620
                                red: r.redac                                                                           // 3620
                            },                                                                                         // 3620
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3620
                        })]).spread(function (redac) {                                                                 // 3620
                            dispo = r.toJSON();                                                                        // 3622
                            dispo.infosRedac = redac;                                                                  // 3623
                            return dispo;                                                                              // 3624
                        }));                                                                                           // 3625
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 3627
                            replacements: {                                                                            // 3629
                                numero_reg: r.wnrgt,                                                                   // 3629
                                domaine: r.domaine                                                                     // 3629
                            },                                                                                         // 3629
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3629
                        })]).spread(function (infosurrgt) {                                                            // 3629
                            dispo = r.toJSON();                                                                        // 3631
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 3632
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 3634
                            dispo.etat = checkRdvDate(dispo);                                                          // 3635
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 3636
                                nbj: -1,                                                                               // 3638
                                alerte: "ERROR"                                                                        // 3639
                            };                                                                                         // 3637
                            return dispo;                                                                              // 3641
                        }));                                                                                           // 3642
                    });                                                                                                // 3644
                    return Promise.all(promises);                                                                      // 3645
                }).then(function (dispos) {                                                                            // 3647
                    var nd = dispos.map(function (e, i, arr) {                                                         // 3648
                        if (e.infoSurRgt.length > 1) {                                                                 // 3649
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 3650
                            //console.dir(e);                                                                          // 3652
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 3653
                            e.infoSurRgt.push(goodelem);                                                               // 3654
                        }                                                                                              // 3655
                                                                                                                       //
                        return e;                                                                                      // 3656
                    }); //console.dir(nd);                                                                             // 3657
                                                                                                                       //
                    return nd;                                                                                         // 3660
                });                                                                                                    // 3661
            } else if (!args.startDate && !args.endDate && !args.numrgt && !args.birthdate && args.nomtotal && args.banque && !args.numpolice && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 3664
                    attributes: {                                                                                      // 3664
                        exclude: ['id']                                                                                // 3664
                    },                                                                                                 // 3664
                    where: {                                                                                           // 3664
                        nom_beneficiaire: {                                                                            // 3665
                            $like: '%' + args.nomtotal + '%'                                                           // 3666
                        },                                                                                             // 3665
                        statut_reg_retirer: 'SORTIE',                                                                  // 3668
                        banque: args.banque /* $or:[                                                                   // 3669
                                             {                                                                         //
                                                 wnupo:{                                                               //
                                                     $like:'731%'                                                      //
                                                 }                                                                     //
                                             },                                                                        //
                                             {                                                                         //
                                                 wnupo:{                                                               //
                                                     $like:'732%'                                                      //
                                                 }                                                                     //
                                             },                                                                        //
                                             {                                                                         //
                                                 wnupo:{                                                               //
                                                     $like:'724%'                                                      //
                                                 }                                                                     //
                                             },                                                                        //
                                             {                                                                         //
                                                 wnupo:{                                                               //
                                                     $like:'7245%'                                                     //
                                                 }                                                                     //
                                             },                                                                        //
                                             {                                                                         //
                                                 wnupo:{                                                               //
                                                     $like:'784%'                                                      //
                                                 }                                                                     //
                                             },                                                                        //
                                             {                                                                         //
                                                 wnupo:{                                                               //
                                                     $like:'7845%'                                                     //
                                                 }                                                                     //
                                             },                                                                        //
                                             {                                                                         //
                                                 wnupo:{                                                               //
                                                     $like:'760%'                                                      //
                                                 }                                                                     //
                                             },                                                                        //
                                            ]*/ /*$or:[                                                                //
                                                   {                                                                   //
                                                       statut_reg_retirer:'SORTIE'                                     //
                                                   },                                                                  //
                                                   {                                                                   //
                                                       statut_reg_retirer:'REFUSER'                                    //
                                                   }                                                                   //
                                                ]*/ // statut_reg_retirer:'PRET'                                       //
                                                                                                                       //
                    },                                                                                                 // 3664
                    order: [['wnrgt', 'DESC']],                                                                        // 3716
                    offset: args.offset,                                                                               // 3716
                    limit: args.limit                                                                                  // 3716
                }).then(function (res) {                                                                               // 3664
                    var promises = [];                                                                                 // 3717
                    var dispo = void 0;                                                                                // 3718
                    res.forEach(function (r) {                                                                         // 3719
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 3720
                            replacements: {                                                                            // 3722
                                red: r.redac                                                                           // 3722
                            },                                                                                         // 3722
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3722
                        })]).spread(function (redac) {                                                                 // 3722
                            dispo = r.toJSON();                                                                        // 3724
                            dispo.infosRedac = redac;                                                                  // 3725
                            return dispo;                                                                              // 3726
                        }));                                                                                           // 3727
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 3729
                            replacements: {                                                                            // 3731
                                numero_reg: r.wnrgt,                                                                   // 3731
                                domaine: r.domaine                                                                     // 3731
                            },                                                                                         // 3731
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3731
                        })]).spread(function (infosurrgt) {                                                            // 3731
                            dispo = r.toJSON();                                                                        // 3733
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 3734
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 3736
                            dispo.etat = checkRdvDate(dispo);                                                          // 3737
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 3738
                                nbj: -1,                                                                               // 3740
                                alerte: "ERROR"                                                                        // 3741
                            };                                                                                         // 3739
                            return dispo;                                                                              // 3743
                        }));                                                                                           // 3744
                    });                                                                                                // 3746
                    return Promise.all(promises);                                                                      // 3747
                }).then(function (dispos) {                                                                            // 3749
                    var nd = dispos.map(function (e, i, arr) {                                                         // 3750
                        if (e.infoSurRgt.length > 1) {                                                                 // 3751
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 3752
                            //console.dir(e);                                                                          // 3754
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 3755
                            e.infoSurRgt.push(goodelem);                                                               // 3756
                        }                                                                                              // 3757
                                                                                                                       //
                        return e;                                                                                      // 3758
                    }); //console.dir(nd);                                                                             // 3759
                                                                                                                       //
                    return nd;                                                                                         // 3762
                });                                                                                                    // 3763
            } else if (!args.startDate && !args.endDate && args.numrgt && args.banque && args.birthdate && args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 3766
                    attributes: {                                                                                      // 3766
                        exclude: ['id']                                                                                // 3766
                    },                                                                                                 // 3766
                    where: {                                                                                           // 3766
                        wnrgt: parseInt(args.numrgt),                                                                  // 3767
                        date_naiss: args.birthdate,                                                                    // 3768
                        statut_reg_retirer: 'SORTIE',                                                                  // 3769
                        nom_beneficiaire: {                                                                            // 3770
                            $like: '%' + args.nomtotal + '%'                                                           // 3771
                        },                                                                                             // 3770
                        banque: args.banque /*$or:[                                                                    // 3773
                                            {                                                                          //
                                                wnupo:{                                                                //
                                                    $like:'731%'                                                       //
                                                }                                                                      //
                                            },                                                                         //
                                            {                                                                          //
                                                wnupo:{                                                                //
                                                    $like:'732%'                                                       //
                                                }                                                                      //
                                            },                                                                         //
                                            {                                                                          //
                                                wnupo:{                                                                //
                                                    $like:'724%'                                                       //
                                                }                                                                      //
                                            },                                                                         //
                                            {                                                                          //
                                                wnupo:{                                                                //
                                                    $like:'7245%'                                                      //
                                                }                                                                      //
                                            },                                                                         //
                                            {                                                                          //
                                                wnupo:{                                                                //
                                                    $like:'784%'                                                       //
                                                }                                                                      //
                                            },                                                                         //
                                            {                                                                          //
                                                wnupo:{                                                                //
                                                    $like:'7845%'                                                      //
                                                }                                                                      //
                                            },                                                                         //
                                            {                                                                          //
                                                wnupo:{                                                                //
                                                    $like:'760%'                                                       //
                                                }                                                                      //
                                            },                                                                         //
                                            ]*/ /* $or:[                                                               //
                                                    {                                                                  //
                                                        statut_reg_retirer:'SORTIE'                                    //
                                                    },                                                                 //
                                                    {                                                                  //
                                                        statut_reg_retirer:'REFUSER'                                   //
                                                    }                                                                  //
                                                 ]*/ //statut_reg_retirer:'PRET'                                       //
                                                                                                                       //
                    },                                                                                                 // 3766
                    order: [['wnrgt', 'DESC']],                                                                        // 3820
                    offset: args.offset,                                                                               // 3820
                    limit: args.limit                                                                                  // 3820
                }).then(function (res) {                                                                               // 3766
                    var promises = [];                                                                                 // 3821
                    var dispo = void 0;                                                                                // 3822
                    res.forEach(function (r) {                                                                         // 3823
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 3824
                            replacements: {                                                                            // 3826
                                red: r.redac                                                                           // 3826
                            },                                                                                         // 3826
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3826
                        })]).spread(function (redac) {                                                                 // 3826
                            dispo = r.toJSON();                                                                        // 3828
                            dispo.infosRedac = redac;                                                                  // 3829
                            return dispo;                                                                              // 3830
                        }));                                                                                           // 3831
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 3833
                            replacements: {                                                                            // 3835
                                numero_reg: r.wnrgt,                                                                   // 3835
                                domaine: r.domaine                                                                     // 3835
                            },                                                                                         // 3835
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3835
                        })]).spread(function (infosurrgt) {                                                            // 3835
                            dispo = r.toJSON();                                                                        // 3837
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 3838
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 3840
                            dispo.etat = checkRdvDate(dispo);                                                          // 3841
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 3842
                                nbj: -1,                                                                               // 3844
                                alerte: "ERROR"                                                                        // 3845
                            };                                                                                         // 3843
                            return dispo;                                                                              // 3847
                        }));                                                                                           // 3848
                    });                                                                                                // 3850
                    return Promise.all(promises);                                                                      // 3851
                }).then(function (dispos) {                                                                            // 3853
                    var nd = dispos.map(function (e, i, arr) {                                                         // 3854
                        if (e.infoSurRgt.length > 1) {                                                                 // 3855
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 3856
                            //console.dir(e);                                                                          // 3858
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 3859
                            e.infoSurRgt.push(goodelem);                                                               // 3860
                        }                                                                                              // 3861
                                                                                                                       //
                        return e;                                                                                      // 3862
                    }); //console.dir(nd);                                                                             // 3863
                                                                                                                       //
                    return nd;                                                                                         // 3866
                });                                                                                                    // 3867
            } else if (!args.startDate && !args.endDate && !args.numrgt && !args.birthdate && !args.nomtotal && args.numpolice && args.banque && !args.numenv && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 3870
                    attributes: {                                                                                      // 3870
                        exclude: ['id']                                                                                // 3870
                    },                                                                                                 // 3870
                    where: {                                                                                           // 3870
                        wnupo: parseInt(args.numpolice),                                                               // 3871
                        statut_reg_retirer: 'SORTIE',                                                                  // 3872
                        banque: args.banque /*$or:[                                                                    // 3873
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'731%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'732%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'724%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7245%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'784%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7845%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'760%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                            ]*/ /* $or:[                                                               //
                                                    {                                                                  //
                                                        statut_reg_retirer:'SORTIE'                                    //
                                                    },                                                                 //
                                                    {                                                                  //
                                                        statut_reg_retirer:'REFUSER'                                   //
                                                    }                                                                  //
                                                 ]*/ //statut_reg_retirer:'PRET'                                       //
                                                                                                                       //
                    },                                                                                                 // 3870
                    order: [['wnupo', 'DESC']],                                                                        // 3920
                    offset: args.offset,                                                                               // 3920
                    limit: args.limit                                                                                  // 3920
                }).then(function (res) {                                                                               // 3870
                    var promises = [];                                                                                 // 3921
                    var dispo = void 0;                                                                                // 3922
                    res.forEach(function (r) {                                                                         // 3923
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 3924
                            replacements: {                                                                            // 3926
                                red: r.redac                                                                           // 3926
                            },                                                                                         // 3926
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3926
                        })]).spread(function (redac) {                                                                 // 3926
                            dispo = r.toJSON();                                                                        // 3928
                            dispo.infosRedac = redac;                                                                  // 3929
                            return dispo;                                                                              // 3930
                        }));                                                                                           // 3931
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 3933
                            replacements: {                                                                            // 3935
                                numero_reg: r.wnrgt,                                                                   // 3935
                                domaine: r.domaine                                                                     // 3935
                            },                                                                                         // 3935
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 3935
                        })]).spread(function (infosurrgt) {                                                            // 3935
                            dispo = r.toJSON();                                                                        // 3937
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 3938
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 3940
                            dispo.etat = checkRdvDate(dispo);                                                          // 3941
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 3942
                                nbj: -1,                                                                               // 3944
                                alerte: "ERROR"                                                                        // 3945
                            };                                                                                         // 3943
                            return dispo;                                                                              // 3947
                        }));                                                                                           // 3948
                    });                                                                                                // 3950
                    return Promise.all(promises);                                                                      // 3951
                }).then(function (dispos) {                                                                            // 3953
                    var nd = dispos.map(function (e, i, arr) {                                                         // 3954
                        if (e.infoSurRgt.length > 1) {                                                                 // 3955
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 3956
                            //console.dir(e);                                                                          // 3958
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 3959
                            e.infoSurRgt.push(goodelem);                                                               // 3960
                        }                                                                                              // 3961
                                                                                                                       //
                        return e;                                                                                      // 3962
                    }); //console.dir(nd);                                                                             // 3963
                                                                                                                       //
                    return nd;                                                                                         // 3966
                });                                                                                                    // 3967
            } else if (!args.startDate && !args.endDate && !args.numrgt && !args.birthdate && !args.nomtotal && !args.numpolice && args.numenv && args.banque && !args.numcheque) {
                return dispoSQL.findAll({                                                                              // 3970
                    attributes: {                                                                                      // 3970
                        exclude: ['id']                                                                                // 3970
                    },                                                                                                 // 3970
                    where: {                                                                                           // 3970
                        Num_envoi: parseInt(args.numenv),                                                              // 3971
                        statut_reg_retirer: 'SORTIE',                                                                  // 3972
                        banque: args.banque /*$or:[                                                                    // 3973
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'731%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'732%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'724%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7245%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'784%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7845%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'760%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                            ]*/ /* $or:[                                                               //
                                                    {                                                                  //
                                                        statut_reg_retirer:'SORTIE'                                    //
                                                    },                                                                 //
                                                    {                                                                  //
                                                        statut_reg_retirer:'REFUSER'                                   //
                                                    }                                                                  //
                                                 ]*/ //statut_reg_retirer:'PRET'                                       //
                                                                                                                       //
                    },                                                                                                 // 3970
                    order: [['wnupo', 'DESC']],                                                                        // 4020
                    offset: args.offset,                                                                               // 4020
                    limit: args.limit                                                                                  // 4020
                }).then(function (res) {                                                                               // 3970
                    var promises = [];                                                                                 // 4021
                    var dispo = void 0;                                                                                // 4022
                    res.forEach(function (r) {                                                                         // 4023
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 4024
                            replacements: {                                                                            // 4026
                                red: r.redac                                                                           // 4026
                            },                                                                                         // 4026
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 4026
                        })]).spread(function (redac) {                                                                 // 4026
                            dispo = r.toJSON();                                                                        // 4028
                            dispo.infosRedac = redac;                                                                  // 4029
                            return dispo;                                                                              // 4030
                        }));                                                                                           // 4031
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 4033
                            replacements: {                                                                            // 4035
                                numero_reg: r.wnrgt,                                                                   // 4035
                                domaine: r.domaine                                                                     // 4035
                            },                                                                                         // 4035
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 4035
                        })]).spread(function (infosurrgt) {                                                            // 4035
                            dispo = r.toJSON();                                                                        // 4037
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 4038
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 4040
                            dispo.etat = checkRdvDate(dispo);                                                          // 4041
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 4042
                                nbj: -1,                                                                               // 4044
                                alerte: "ERROR"                                                                        // 4045
                            };                                                                                         // 4043
                            return dispo;                                                                              // 4047
                        }));                                                                                           // 4048
                    });                                                                                                // 4050
                    return Promise.all(promises);                                                                      // 4051
                }).then(function (dispos) {                                                                            // 4053
                    var nd = dispos.map(function (e, i, arr) {                                                         // 4054
                        if (e.infoSurRgt.length > 1) {                                                                 // 4055
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 4056
                            //console.dir(e);                                                                          // 4058
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 4059
                            e.infoSurRgt.push(goodelem);                                                               // 4060
                        }                                                                                              // 4061
                                                                                                                       //
                        return e;                                                                                      // 4062
                    }); //console.dir(nd);                                                                             // 4063
                                                                                                                       //
                    return nd;                                                                                         // 4066
                });                                                                                                    // 4067
            } else if (!args.startDate && !args.endDate && !args.numrgt && !args.birthdate && !args.nomtotal && !args.numpolice && !args.numenv && args.numcheque && args.banque) {
                return dispoSQL.findAll({                                                                              // 4070
                    attributes: {                                                                                      // 4070
                        exclude: ['id']                                                                                // 4070
                    },                                                                                                 // 4070
                    where: {                                                                                           // 4070
                        cheque: parseInt(args.numcheque),                                                              // 4071
                        statut_reg_retirer: 'SORTIE',                                                                  // 4072
                        banque: args.banque /*$or:[                                                                    // 4073
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'731%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'732%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'724%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7245%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'784%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7845%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'760%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                            ]*/ /* $or:[                                                               //
                                                    {                                                                  //
                                                        statut_reg_retirer:'SORTIE'                                    //
                                                    },                                                                 //
                                                    {                                                                  //
                                                        statut_reg_retirer:'REFUSER'                                   //
                                                    }                                                                  //
                                                 ]*/ //statut_reg_retirer:'PRET'                                       //
                                                                                                                       //
                    },                                                                                                 // 4070
                    order: [['wnupo', 'DESC']],                                                                        // 4120
                    offset: args.offset,                                                                               // 4120
                    limit: args.limit                                                                                  // 4120
                }).then(function (res) {                                                                               // 4070
                    var promises = [];                                                                                 // 4121
                    var dispo = void 0;                                                                                // 4122
                    res.forEach(function (r) {                                                                         // 4123
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 4124
                            replacements: {                                                                            // 4126
                                red: r.redac                                                                           // 4126
                            },                                                                                         // 4126
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 4126
                        })]).spread(function (redac) {                                                                 // 4126
                            dispo = r.toJSON();                                                                        // 4128
                            dispo.infosRedac = redac;                                                                  // 4129
                            return dispo;                                                                              // 4130
                        }));                                                                                           // 4131
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 4133
                            replacements: {                                                                            // 4135
                                numero_reg: r.wnrgt,                                                                   // 4135
                                domaine: r.domaine                                                                     // 4135
                            },                                                                                         // 4135
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 4135
                        })]).spread(function (infosurrgt) {                                                            // 4135
                            dispo = r.toJSON();                                                                        // 4137
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 4138
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 4140
                            dispo.etat = checkRdvDate(dispo);                                                          // 4141
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 4142
                                nbj: -1,                                                                               // 4144
                                alerte: "ERROR"                                                                        // 4145
                            };                                                                                         // 4143
                            return dispo;                                                                              // 4147
                        }));                                                                                           // 4148
                    });                                                                                                // 4150
                    return Promise.all(promises);                                                                      // 4151
                }).then(function (dispos) {                                                                            // 4153
                    var nd = dispos.map(function (e, i, arr) {                                                         // 4154
                        if (e.infoSurRgt.length > 1) {                                                                 // 4155
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 4156
                            //console.dir(e);                                                                          // 4158
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 4159
                            e.infoSurRgt.push(goodelem);                                                               // 4160
                        }                                                                                              // 4161
                                                                                                                       //
                        return e;                                                                                      // 4162
                    }); //console.dir(nd);                                                                             // 4163
                                                                                                                       //
                    return nd;                                                                                         // 4166
                });                                                                                                    // 4167
            } else if (args.banque != "") {                                                                            // 4169
                return dispoSQL.findAll({                                                                              // 4170
                    attributes: {                                                                                      // 4170
                        exclude: ['id']                                                                                // 4170
                    },                                                                                                 // 4170
                    where: {                                                                                           // 4170
                        //statut_reg_retirer:'PRET'                                                                    // 4171
                        //MRGGT:'C',                                                                                   // 4172
                        statut_reg_retirer: 'SORTIE',                                                                  // 4173
                        banque: args.banque /*$or:[                                                                    // 4174
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'731%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'732%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'724%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7245%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'784%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'7845%'                                                  //
                                                    }                                                                  //
                                                },                                                                     //
                                                {                                                                      //
                                                    wnupo:{                                                            //
                                                        $like:'760%'                                                   //
                                                    }                                                                  //
                                                },                                                                     //
                                            ]*/ /*$or:[                                                                //
                                                    {                                                                  //
                                                        statut_reg_retirer:'SORTIE'                                    //
                                                    },                                                                 //
                                                    {                                                                  //
                                                        statut_reg_retirer:'REFUSER'                                   //
                                                    }                                                                  //
                                                ]*/                                                                    //
                    },                                                                                                 // 4170
                    order: [['wnrgt', 'DESC']],                                                                        // 4220
                    offset: args.offset,                                                                               // 4220
                    limit: args.limit                                                                                  // 4220
                }).then(function (res) {                                                                               // 4170
                    var promises = [];                                                                                 // 4221
                    var dispo = void 0;                                                                                // 4222
                    res.forEach(function (r) {                                                                         // 4223
                        promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                         // 4224
                            replacements: {                                                                            // 4226
                                red: r.redac                                                                           // 4226
                            },                                                                                         // 4226
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 4226
                        })]).spread(function (redac) {                                                                 // 4226
                            dispo = r.toJSON();                                                                        // 4228
                            dispo.infosRedac = redac;                                                                  // 4229
                            return dispo;                                                                              // 4230
                        }));                                                                                           // 4231
                        promises.push(Promise.all([DBSQLSERVER.query(query, {                                          // 4233
                            replacements: {                                                                            // 4235
                                numero_reg: r.wnrgt,                                                                   // 4235
                                domaine: r.domaine                                                                     // 4235
                            },                                                                                         // 4235
                            type: DBSQLSERVER.QueryTypes.SELECT                                                        // 4235
                        })]).spread(function (infosurrgt) {                                                            // 4235
                            dispo = r.toJSON();                                                                        // 4237
                            infosurrgt.MONTANT_BRUT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT, 10));      // 4238
                            infosurrgt.MONTANT_NET_REGLEMENT = formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT, 10));
                            dispo.infoSurRgt = infosurrgt;                                                             // 4240
                            dispo.etat = checkRdvDate(dispo);                                                          // 4241
                            if (typeof dispo.etat == "undefined") dispo.etat = {                                       // 4242
                                nbj: -1,                                                                               // 4244
                                alerte: "ERROR"                                                                        // 4245
                            };                                                                                         // 4243
                            return dispo;                                                                              // 4247
                        }));                                                                                           // 4248
                    });                                                                                                // 4250
                    return Promise.all(promises);                                                                      // 4251
                }).then(function (dispos) {                                                                            // 4253
                    var nd = dispos.map(function (e, i, arr) {                                                         // 4254
                        if (e.infoSurRgt.length > 1) {                                                                 // 4255
                            var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);                       // 4256
                            //console.dir(e);                                                                          // 4258
                                                                                                                       //
                            e.infoSurRgt = [];                                                                         // 4259
                            e.infoSurRgt.push(goodelem);                                                               // 4260
                        }                                                                                              // 4261
                                                                                                                       //
                        return e;                                                                                      // 4262
                    }); //console.dir(nd);                                                                             // 4263
                                                                                                                       //
                    return nd;                                                                                         // 4266
                });                                                                                                    // 4267
            }                                                                                                          // 4268
        },                                                                                                             // 4269
        dataToExport: function (_, args) {                                                                             // 4270
            var query = "exec info_reg_dispo :numero_reg,:domaine ";                                                   // 4271
            var uquery = "select * from exp.reguser where redac like :red";                                            // 4272
                                                                                                                       //
            if (args.typeDate && args.startDate && args.endDate && (!args.domaine || args.domaine === "TOUS")) {       // 4273
                switch (args.typeDate) {                                                                               // 4274
                    case "date_depot_treso":                                                                           // 4275
                        return dispoSQL.findAll({                                                                      // 4276
                            attributes: {                                                                              // 4276
                                exclude: ['id']                                                                        // 4276
                            },                                                                                         // 4276
                            where: {                                                                                   // 4276
                                date_depot_treso: {                                                                    // 4277
                                    $between: [args.startDate, args.endDate]                                           // 4278
                                }                                                                                      // 4277
                            },                                                                                         // 4276
                            order: [['wnrgt', 'DESC']]                                                                 // 4280
                        }).then(function (res) {                                                                       // 4276
                            var promises = [];                                                                         // 4281
                            var dispo = void 0;                                                                        // 4282
                            res.forEach(function (r) {                                                                 // 4283
                                promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                 // 4284
                                    replacements: {                                                                    // 4286
                                        red: r.redac                                                                   // 4286
                                    },                                                                                 // 4286
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4286
                                })]).spread(function (redac) {                                                         // 4286
                                    dispo = r.toJSON();                                                                // 4288
                                    dispo.infosRedac = redac;                                                          // 4289
                                    return dispo;                                                                      // 4290
                                }));                                                                                   // 4291
                                promises.push(Promise.all([DBSQLSERVER.query(query, {                                  // 4293
                                    replacements: {                                                                    // 4295
                                        numero_reg: r.wnrgt,                                                           // 4295
                                        domaine: r.domaine                                                             // 4295
                                    },                                                                                 // 4295
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4295
                                })]).spread(function (infosurrgt) {                                                    // 4295
                                    dispo = r.toJSON();                                                                // 4297
                                    dispo.infoSurRgt = infosurrgt;                                                     // 4298
                                    dispo.etat = checkRdvDate(dispo);                                                  // 4299
                                    if (typeof dispo.etat == "undefined") dispo.etat = {                               // 4300
                                        nbj: -1,                                                                       // 4302
                                        alerte: "ERROR"                                                                // 4303
                                    };                                                                                 // 4301
                                    return dispo;                                                                      // 4305
                                }));                                                                                   // 4306
                            });                                                                                        // 4308
                            return Promise.all(promises);                                                              // 4309
                        }).then(function (dispos) {                                                                    // 4311
                            var nd = dispos.map(function (e, i, arr) {                                                 // 4312
                                if (e.infoSurRgt.length > 1) {                                                         // 4313
                                    var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);               // 4314
                                    //console.dir(e);                                                                  // 4316
                                                                                                                       //
                                    e.infoSurRgt = [];                                                                 // 4317
                                    e.infoSurRgt.push(goodelem);                                                       // 4318
                                }                                                                                      // 4319
                                                                                                                       //
                                return e;                                                                              // 4320
                            }); //console.dir(nd);                                                                     // 4321
                                                                                                                       //
                            return nd;                                                                                 // 4324
                        });                                                                                            // 4325
                                                                                                                       //
                    case "date_sort_treso":                                                                            // 4326
                        return dispoSQL.findAll({                                                                      // 4327
                            attributes: {                                                                              // 4327
                                exclude: ['id']                                                                        // 4327
                            },                                                                                         // 4327
                            where: {                                                                                   // 4327
                                date_sort_treso: {                                                                     // 4328
                                    $between: [args.startDate, args.endDate]                                           // 4329
                                }                                                                                      // 4328
                            },                                                                                         // 4327
                            order: [['wnrgt', 'DESC']]                                                                 // 4331
                        }).then(function (res) {                                                                       // 4327
                            var promises = [];                                                                         // 4332
                            var dispo = void 0;                                                                        // 4333
                            res.forEach(function (r) {                                                                 // 4334
                                promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                 // 4335
                                    replacements: {                                                                    // 4337
                                        red: r.redac                                                                   // 4337
                                    },                                                                                 // 4337
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4337
                                })]).spread(function (redac) {                                                         // 4337
                                    dispo = r.toJSON();                                                                // 4339
                                    dispo.infosRedac = redac;                                                          // 4340
                                    return dispo;                                                                      // 4341
                                }));                                                                                   // 4342
                                promises.push(Promise.all([DBSQLSERVER.query(query, {                                  // 4344
                                    replacements: {                                                                    // 4346
                                        numero_reg: r.wnrgt,                                                           // 4346
                                        domaine: r.domaine                                                             // 4346
                                    },                                                                                 // 4346
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4346
                                })]).spread(function (infosurrgt) {                                                    // 4346
                                    dispo = r.toJSON();                                                                // 4348
                                    dispo.infoSurRgt = infosurrgt;                                                     // 4349
                                    dispo.etat = checkRdvDate(dispo);                                                  // 4350
                                    if (typeof dispo.etat == "undefined") dispo.etat = {                               // 4351
                                        nbj: -1,                                                                       // 4353
                                        alerte: "ERROR"                                                                // 4354
                                    };                                                                                 // 4352
                                    return dispo;                                                                      // 4356
                                }));                                                                                   // 4357
                            });                                                                                        // 4359
                            return Promise.all(promises);                                                              // 4360
                        }).then(function (dispos) {                                                                    // 4362
                            var nd = dispos.map(function (e, i, arr) {                                                 // 4363
                                if (e.infoSurRgt.length > 1) {                                                         // 4364
                                    var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);               // 4365
                                    //console.dir(e);                                                                  // 4367
                                                                                                                       //
                                    e.infoSurRgt = [];                                                                 // 4368
                                    e.infoSurRgt.push(goodelem);                                                       // 4369
                                }                                                                                      // 4370
                                                                                                                       //
                                return e;                                                                              // 4371
                            }); //console.dir(nd);                                                                     // 4372
                                                                                                                       //
                            return nd;                                                                                 // 4375
                        });                                                                                            // 4376
                                                                                                                       //
                    case "date_depot_sign":                                                                            // 4377
                        return dispoSQL.findAll({                                                                      // 4378
                            attributes: {                                                                              // 4378
                                exclude: ['id']                                                                        // 4378
                            },                                                                                         // 4378
                            where: {                                                                                   // 4378
                                date_depot_sign: {                                                                     // 4379
                                    $between: [args.startDate, args.endDate]                                           // 4380
                                }                                                                                      // 4379
                            },                                                                                         // 4378
                            order: [['wnrgt', 'DESC']]                                                                 // 4382
                        }).then(function (res) {                                                                       // 4378
                            var promises = [];                                                                         // 4383
                            var dispo = void 0;                                                                        // 4384
                            res.forEach(function (r) {                                                                 // 4385
                                promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                 // 4386
                                    replacements: {                                                                    // 4388
                                        red: r.redac                                                                   // 4388
                                    },                                                                                 // 4388
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4388
                                })]).spread(function (redac) {                                                         // 4388
                                    dispo = r.toJSON();                                                                // 4390
                                    dispo.infosRedac = redac;                                                          // 4391
                                    return dispo;                                                                      // 4392
                                }));                                                                                   // 4393
                                promises.push(Promise.all([DBSQLSERVER.query(query, {                                  // 4395
                                    replacements: {                                                                    // 4397
                                        numero_reg: r.wnrgt,                                                           // 4397
                                        domaine: r.domaine                                                             // 4397
                                    },                                                                                 // 4397
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4397
                                })]).spread(function (infosurrgt) {                                                    // 4397
                                    dispo = r.toJSON();                                                                // 4399
                                    dispo.infoSurRgt = infosurrgt;                                                     // 4400
                                    dispo.etat = checkRdvDate(dispo);                                                  // 4401
                                    if (typeof dispo.etat == "undefined") dispo.etat = {                               // 4402
                                        nbj: -1,                                                                       // 4404
                                        alerte: "ERROR"                                                                // 4405
                                    };                                                                                 // 4403
                                    return dispo;                                                                      // 4407
                                }));                                                                                   // 4408
                            });                                                                                        // 4410
                            return Promise.all(promises);                                                              // 4411
                        }).then(function (dispos) {                                                                    // 4413
                            var nd = dispos.map(function (e, i, arr) {                                                 // 4414
                                if (e.infoSurRgt.length > 1) {                                                         // 4415
                                    var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);               // 4416
                                    //console.dir(e);                                                                  // 4418
                                                                                                                       //
                                    e.infoSurRgt = [];                                                                 // 4419
                                    e.infoSurRgt.push(goodelem);                                                       // 4420
                                }                                                                                      // 4421
                                                                                                                       //
                                return e;                                                                              // 4422
                            }); //console.dir(nd);                                                                     // 4423
                                                                                                                       //
                            return nd;                                                                                 // 4426
                        });                                                                                            // 4427
                                                                                                                       //
                    case "date_sort_sign":                                                                             // 4428
                        return dispoSQL.findAll({                                                                      // 4429
                            attributes: {                                                                              // 4429
                                exclude: ['id']                                                                        // 4429
                            },                                                                                         // 4429
                            where: {                                                                                   // 4429
                                date_sort_sign: {                                                                      // 4430
                                    $between: [args.startDate, args.endDate]                                           // 4431
                                }                                                                                      // 4430
                            },                                                                                         // 4429
                            order: [['wnrgt', 'DESC']]                                                                 // 4433
                        }).then(function (res) {                                                                       // 4429
                            var promises = [];                                                                         // 4434
                            var dispo = void 0;                                                                        // 4435
                            res.forEach(function (r) {                                                                 // 4436
                                promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                 // 4437
                                    replacements: {                                                                    // 4439
                                        red: r.redac                                                                   // 4439
                                    },                                                                                 // 4439
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4439
                                })]).spread(function (redac) {                                                         // 4439
                                    dispo = r.toJSON();                                                                // 4441
                                    dispo.infosRedac = redac;                                                          // 4442
                                    return dispo;                                                                      // 4443
                                }));                                                                                   // 4444
                                promises.push(Promise.all([DBSQLSERVER.query(query, {                                  // 4446
                                    replacements: {                                                                    // 4448
                                        numero_reg: r.wnrgt,                                                           // 4448
                                        domaine: r.domaine                                                             // 4448
                                    },                                                                                 // 4448
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4448
                                })]).spread(function (infosurrgt) {                                                    // 4448
                                    dispo = r.toJSON();                                                                // 4450
                                    dispo.infoSurRgt = infosurrgt;                                                     // 4451
                                    dispo.etat = checkRdvDate(dispo);                                                  // 4452
                                    if (typeof dispo.etat == "undefined") dispo.etat = {                               // 4453
                                        nbj: -1,                                                                       // 4455
                                        alerte: "ERROR"                                                                // 4456
                                    };                                                                                 // 4454
                                    return dispo;                                                                      // 4458
                                }));                                                                                   // 4459
                            });                                                                                        // 4461
                            return Promise.all(promises);                                                              // 4462
                        }).then(function (dispos) {                                                                    // 4464
                            var nd = dispos.map(function (e, i, arr) {                                                 // 4465
                                if (e.infoSurRgt.length > 1) {                                                         // 4466
                                    var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);               // 4467
                                    //console.dir(e);                                                                  // 4469
                                                                                                                       //
                                    e.infoSurRgt = [];                                                                 // 4470
                                    e.infoSurRgt.push(goodelem);                                                       // 4471
                                }                                                                                      // 4472
                                                                                                                       //
                                return e;                                                                              // 4473
                            }); //console.dir(nd);                                                                     // 4474
                                                                                                                       //
                            return nd;                                                                                 // 4477
                        });                                                                                            // 4478
                                                                                                                       //
                    case "date_recep_sign_reg":                                                                        // 4479
                        return dispoSQL.findAll({                                                                      // 4480
                            attributes: {                                                                              // 4480
                                exclude: ['id']                                                                        // 4480
                            },                                                                                         // 4480
                            where: {                                                                                   // 4480
                                date_recep_sign_reg: {                                                                 // 4481
                                    $between: [args.startDate, args.endDate]                                           // 4482
                                }                                                                                      // 4481
                            },                                                                                         // 4480
                            order: [['wnrgt', 'DESC']]                                                                 // 4484
                        }).then(function (res) {                                                                       // 4480
                            var promises = [];                                                                         // 4485
                            var dispo = void 0;                                                                        // 4486
                            res.forEach(function (r) {                                                                 // 4487
                                promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                 // 4488
                                    replacements: {                                                                    // 4490
                                        red: r.redac                                                                   // 4490
                                    },                                                                                 // 4490
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4490
                                })]).spread(function (redac) {                                                         // 4490
                                    dispo = r.toJSON();                                                                // 4492
                                    dispo.infosRedac = redac;                                                          // 4493
                                    return dispo;                                                                      // 4494
                                }));                                                                                   // 4495
                                promises.push(Promise.all([DBSQLSERVER.query(query, {                                  // 4497
                                    replacements: {                                                                    // 4499
                                        numero_reg: r.wnrgt,                                                           // 4499
                                        domaine: r.domaine                                                             // 4499
                                    },                                                                                 // 4499
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4499
                                })]).spread(function (infosurrgt) {                                                    // 4499
                                    dispo = r.toJSON();                                                                // 4501
                                    dispo.infoSurRgt = infosurrgt;                                                     // 4502
                                    dispo.etat = checkRdvDate(dispo);                                                  // 4503
                                    if (typeof dispo.etat == "undefined") dispo.etat = {                               // 4504
                                        nbj: -1,                                                                       // 4506
                                        alerte: "ERROR"                                                                // 4507
                                    };                                                                                 // 4505
                                    return dispo;                                                                      // 4509
                                }));                                                                                   // 4510
                            });                                                                                        // 4512
                            return Promise.all(promises);                                                              // 4513
                        }).then(function (dispos) {                                                                    // 4515
                            var nd = dispos.map(function (e, i, arr) {                                                 // 4516
                                if (e.infoSurRgt.length > 1) {                                                         // 4517
                                    var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);               // 4518
                                    //console.dir(e);                                                                  // 4520
                                                                                                                       //
                                    e.infoSurRgt = [];                                                                 // 4521
                                    e.infoSurRgt.push(goodelem);                                                       // 4522
                                }                                                                                      // 4523
                                                                                                                       //
                                return e;                                                                              // 4524
                            }); //console.dir(nd);                                                                     // 4525
                                                                                                                       //
                            return nd;                                                                                 // 4528
                        });                                                                                            // 4529
                                                                                                                       //
                    case "date_retrait_reg":                                                                           // 4530
                        return dispoSQL.findAll({                                                                      // 4531
                            attributes: {                                                                              // 4531
                                exclude: ['id']                                                                        // 4531
                            },                                                                                         // 4531
                            where: {                                                                                   // 4531
                                date_retrait_reg: {                                                                    // 4532
                                    $between: [args.startDate, args.endDate]                                           // 4533
                                }                                                                                      // 4532
                            },                                                                                         // 4531
                            order: [['wnrgt', 'DESC']]                                                                 // 4535
                        }).then(function (res) {                                                                       // 4531
                            var promises = [];                                                                         // 4536
                            var dispo = void 0;                                                                        // 4537
                            res.forEach(function (r) {                                                                 // 4538
                                promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                 // 4539
                                    replacements: {                                                                    // 4541
                                        red: r.redac                                                                   // 4541
                                    },                                                                                 // 4541
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4541
                                })]).spread(function (redac) {                                                         // 4541
                                    dispo = r.toJSON();                                                                // 4543
                                    dispo.infosRedac = redac;                                                          // 4544
                                    return dispo;                                                                      // 4545
                                }));                                                                                   // 4546
                                promises.push(Promise.all([DBSQLSERVER.query(query, {                                  // 4548
                                    replacements: {                                                                    // 4550
                                        numero_reg: r.wnrgt,                                                           // 4550
                                        domaine: r.domaine                                                             // 4550
                                    },                                                                                 // 4550
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4550
                                })]).spread(function (infosurrgt) {                                                    // 4550
                                    dispo = r.toJSON();                                                                // 4552
                                    dispo.infoSurRgt = infosurrgt;                                                     // 4553
                                    dispo.etat = checkRdvDate(dispo);                                                  // 4554
                                    if (typeof dispo.etat == "undefined") dispo.etat = {                               // 4555
                                        nbj: -1,                                                                       // 4557
                                        alerte: "ERROR"                                                                // 4558
                                    };                                                                                 // 4556
                                    return dispo;                                                                      // 4560
                                }));                                                                                   // 4561
                            });                                                                                        // 4563
                            return Promise.all(promises);                                                              // 4564
                        }).then(function (dispos) {                                                                    // 4566
                            var nd = dispos.map(function (e, i, arr) {                                                 // 4567
                                if (e.infoSurRgt.length > 1) {                                                         // 4568
                                    var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);               // 4569
                                    //console.dir(e);                                                                  // 4571
                                                                                                                       //
                                    e.infoSurRgt = [];                                                                 // 4572
                                    e.infoSurRgt.push(goodelem);                                                       // 4573
                                }                                                                                      // 4574
                                                                                                                       //
                                return e;                                                                              // 4575
                            }); //console.dir(nd);                                                                     // 4576
                                                                                                                       //
                            return nd;                                                                                 // 4579
                        });                                                                                            // 4580
                                                                                                                       //
                    case "date_naiss":                                                                                 // 4581
                        return dispoSQL.findAll({                                                                      // 4582
                            attributes: {                                                                              // 4582
                                exclude: ['id']                                                                        // 4582
                            },                                                                                         // 4582
                            where: {                                                                                   // 4582
                                date_naiss: {                                                                          // 4583
                                    $between: [args.startDate, args.endDate]                                           // 4584
                                }                                                                                      // 4583
                            },                                                                                         // 4582
                            order: [['wnrgt', 'DESC']]                                                                 // 4586
                        }).then(function (res) {                                                                       // 4582
                            var promises = [];                                                                         // 4587
                            var dispo = void 0;                                                                        // 4588
                            res.forEach(function (r) {                                                                 // 4589
                                promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                 // 4590
                                    replacements: {                                                                    // 4592
                                        red: r.redac                                                                   // 4592
                                    },                                                                                 // 4592
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4592
                                })]).spread(function (redac) {                                                         // 4592
                                    dispo = r.toJSON();                                                                // 4594
                                    dispo.infosRedac = redac;                                                          // 4595
                                    return dispo;                                                                      // 4596
                                }));                                                                                   // 4597
                                promises.push(Promise.all([DBSQLSERVER.query(query, {                                  // 4599
                                    replacements: {                                                                    // 4601
                                        numero_reg: r.wnrgt,                                                           // 4601
                                        domaine: r.domaine                                                             // 4601
                                    },                                                                                 // 4601
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4601
                                })]).spread(function (infosurrgt) {                                                    // 4601
                                    dispo = r.toJSON();                                                                // 4603
                                    dispo.infoSurRgt = infosurrgt;                                                     // 4604
                                    dispo.etat = checkRdvDate(dispo);                                                  // 4605
                                    if (typeof dispo.etat == "undefined") dispo.etat = {                               // 4606
                                        nbj: -1,                                                                       // 4608
                                        alerte: "ERROR"                                                                // 4609
                                    };                                                                                 // 4607
                                    return dispo;                                                                      // 4611
                                }));                                                                                   // 4612
                            });                                                                                        // 4614
                            return Promise.all(promises);                                                              // 4615
                        }).then(function (dispos) {                                                                    // 4617
                            var nd = dispos.map(function (e, i, arr) {                                                 // 4618
                                if (e.infoSurRgt.length > 1) {                                                         // 4619
                                    var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);               // 4620
                                    //console.dir(e);                                                                  // 4622
                                                                                                                       //
                                    e.infoSurRgt = [];                                                                 // 4623
                                    e.infoSurRgt.push(goodelem);                                                       // 4624
                                }                                                                                      // 4625
                                                                                                                       //
                                return e;                                                                              // 4626
                            }); //console.dir(nd);                                                                     // 4627
                                                                                                                       //
                            return nd;                                                                                 // 4630
                        });                                                                                            // 4631
                }                                                                                                      // 4274
            } else if (args.typeDate && args.startDate && args.endDate && args.domaine && args.domaine !== "TOUS") {   // 4633
                switch (args.typeDate) {                                                                               // 4634
                    case "date_depot_treso":                                                                           // 4635
                        return dispoSQL.findAll({                                                                      // 4636
                            attributes: {                                                                              // 4636
                                exclude: ['id']                                                                        // 4636
                            },                                                                                         // 4636
                            where: {                                                                                   // 4636
                                domaine: args.domaine,                                                                 // 4637
                                date_depot_treso: {                                                                    // 4638
                                    $between: [args.startDate, args.endDate]                                           // 4639
                                }                                                                                      // 4638
                            },                                                                                         // 4636
                            order: [['wnrgt', 'DESC']]                                                                 // 4641
                        }).then(function (res) {                                                                       // 4636
                            var promises = [];                                                                         // 4642
                            var dispo = void 0;                                                                        // 4643
                            res.forEach(function (r) {                                                                 // 4644
                                promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                 // 4645
                                    replacements: {                                                                    // 4647
                                        red: r.redac                                                                   // 4647
                                    },                                                                                 // 4647
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4647
                                })]).spread(function (redac) {                                                         // 4647
                                    dispo = r.toJSON();                                                                // 4649
                                    dispo.infosRedac = redac;                                                          // 4650
                                    return dispo;                                                                      // 4651
                                }));                                                                                   // 4652
                                promises.push(Promise.all([DBSQLSERVER.query(query, {                                  // 4654
                                    replacements: {                                                                    // 4656
                                        numero_reg: r.wnrgt,                                                           // 4656
                                        domaine: r.domaine                                                             // 4656
                                    },                                                                                 // 4656
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4656
                                })]).spread(function (infosurrgt) {                                                    // 4656
                                    dispo = r.toJSON();                                                                // 4658
                                    dispo.infoSurRgt = infosurrgt;                                                     // 4659
                                    dispo.etat = checkRdvDate(dispo);                                                  // 4660
                                    if (typeof dispo.etat == "undefined") dispo.etat = {                               // 4661
                                        nbj: -1,                                                                       // 4663
                                        alerte: "ERROR"                                                                // 4664
                                    };                                                                                 // 4662
                                    return dispo;                                                                      // 4666
                                }));                                                                                   // 4667
                            });                                                                                        // 4669
                            return Promise.all(promises);                                                              // 4670
                        }).then(function (dispos) {                                                                    // 4672
                            var nd = dispos.map(function (e, i, arr) {                                                 // 4673
                                if (e.infoSurRgt.length > 1) {                                                         // 4674
                                    var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);               // 4675
                                    //console.dir(e);                                                                  // 4677
                                                                                                                       //
                                    e.infoSurRgt = [];                                                                 // 4678
                                    e.infoSurRgt.push(goodelem);                                                       // 4679
                                }                                                                                      // 4680
                                                                                                                       //
                                return e;                                                                              // 4681
                            }); //console.dir(nd);                                                                     // 4682
                                                                                                                       //
                            return nd;                                                                                 // 4685
                        });                                                                                            // 4686
                                                                                                                       //
                    case "date_sort_treso":                                                                            // 4687
                        return dispoSQL.findAll({                                                                      // 4688
                            attributes: {                                                                              // 4688
                                exclude: ['id']                                                                        // 4688
                            },                                                                                         // 4688
                            where: {                                                                                   // 4688
                                domaine: args.domaine,                                                                 // 4689
                                date_sort_treso: {                                                                     // 4690
                                    $between: [args.startDate, args.endDate]                                           // 4691
                                }                                                                                      // 4690
                            },                                                                                         // 4688
                            order: [['wnrgt', 'DESC']]                                                                 // 4693
                        }).then(function (res) {                                                                       // 4688
                            var promises = [];                                                                         // 4694
                            var dispo = void 0;                                                                        // 4695
                            res.forEach(function (r) {                                                                 // 4696
                                promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                 // 4697
                                    replacements: {                                                                    // 4699
                                        red: r.redac                                                                   // 4699
                                    },                                                                                 // 4699
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4699
                                })]).spread(function (redac) {                                                         // 4699
                                    dispo = r.toJSON();                                                                // 4701
                                    dispo.infosRedac = redac;                                                          // 4702
                                    return dispo;                                                                      // 4703
                                }));                                                                                   // 4704
                                promises.push(Promise.all([DBSQLSERVER.query(query, {                                  // 4706
                                    replacements: {                                                                    // 4708
                                        numero_reg: r.wnrgt,                                                           // 4708
                                        domaine: r.domaine                                                             // 4708
                                    },                                                                                 // 4708
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4708
                                })]).spread(function (infosurrgt) {                                                    // 4708
                                    dispo = r.toJSON();                                                                // 4710
                                    dispo.infoSurRgt = infosurrgt;                                                     // 4711
                                    dispo.etat = checkRdvDate(dispo);                                                  // 4712
                                    if (typeof dispo.etat == "undefined") dispo.etat = {                               // 4713
                                        nbj: -1,                                                                       // 4715
                                        alerte: "ERROR"                                                                // 4716
                                    };                                                                                 // 4714
                                    return dispo;                                                                      // 4718
                                }));                                                                                   // 4719
                            });                                                                                        // 4721
                            return Promise.all(promises);                                                              // 4722
                        }).then(function (dispos) {                                                                    // 4724
                            var nd = dispos.map(function (e, i, arr) {                                                 // 4725
                                if (e.infoSurRgt.length > 1) {                                                         // 4726
                                    var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);               // 4727
                                    //console.dir(e);                                                                  // 4729
                                                                                                                       //
                                    e.infoSurRgt = [];                                                                 // 4730
                                    e.infoSurRgt.push(goodelem);                                                       // 4731
                                }                                                                                      // 4732
                                                                                                                       //
                                return e;                                                                              // 4733
                            }); //console.dir(nd);                                                                     // 4734
                                                                                                                       //
                            return nd;                                                                                 // 4737
                        });                                                                                            // 4738
                                                                                                                       //
                    case "date_depot_sign":                                                                            // 4739
                        return dispoSQL.findAll({                                                                      // 4740
                            attributes: {                                                                              // 4740
                                exclude: ['id']                                                                        // 4740
                            },                                                                                         // 4740
                            where: {                                                                                   // 4740
                                domaine: args.domaine,                                                                 // 4741
                                date_depot_sign: {                                                                     // 4742
                                    $between: [args.startDate, args.endDate]                                           // 4743
                                }                                                                                      // 4742
                            },                                                                                         // 4740
                            order: [['wnrgt', 'DESC']]                                                                 // 4745
                        }).then(function (res) {                                                                       // 4740
                            var promises = [];                                                                         // 4746
                            var dispo = void 0;                                                                        // 4747
                            res.forEach(function (r) {                                                                 // 4748
                                promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                 // 4749
                                    replacements: {                                                                    // 4751
                                        red: r.redac                                                                   // 4751
                                    },                                                                                 // 4751
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4751
                                })]).spread(function (redac) {                                                         // 4751
                                    dispo = r.toJSON();                                                                // 4753
                                    dispo.infosRedac = redac;                                                          // 4754
                                    return dispo;                                                                      // 4755
                                }));                                                                                   // 4756
                                promises.push(Promise.all([DBSQLSERVER.query(query, {                                  // 4758
                                    replacements: {                                                                    // 4760
                                        numero_reg: r.wnrgt,                                                           // 4760
                                        domaine: r.domaine                                                             // 4760
                                    },                                                                                 // 4760
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4760
                                })]).spread(function (infosurrgt) {                                                    // 4760
                                    dispo = r.toJSON();                                                                // 4762
                                    dispo.infoSurRgt = infosurrgt;                                                     // 4763
                                    dispo.etat = checkRdvDate(dispo);                                                  // 4764
                                    if (typeof dispo.etat == "undefined") dispo.etat = {                               // 4765
                                        nbj: -1,                                                                       // 4767
                                        alerte: "ERROR"                                                                // 4768
                                    };                                                                                 // 4766
                                    return dispo;                                                                      // 4770
                                }));                                                                                   // 4771
                            });                                                                                        // 4773
                            return Promise.all(promises);                                                              // 4774
                        }).then(function (dispos) {                                                                    // 4776
                            var nd = dispos.map(function (e, i, arr) {                                                 // 4777
                                if (e.infoSurRgt.length > 1) {                                                         // 4778
                                    var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);               // 4779
                                    //console.dir(e);                                                                  // 4781
                                                                                                                       //
                                    e.infoSurRgt = [];                                                                 // 4782
                                    e.infoSurRgt.push(goodelem);                                                       // 4783
                                }                                                                                      // 4784
                                                                                                                       //
                                return e;                                                                              // 4785
                            }); //console.dir(nd);                                                                     // 4786
                                                                                                                       //
                            return nd;                                                                                 // 4789
                        });                                                                                            // 4790
                                                                                                                       //
                    case "date_sort_sign":                                                                             // 4791
                        return dispoSQL.findAll({                                                                      // 4792
                            attributes: {                                                                              // 4792
                                exclude: ['id']                                                                        // 4792
                            },                                                                                         // 4792
                            where: {                                                                                   // 4792
                                domaine: args.domaine,                                                                 // 4793
                                date_sort_sign: {                                                                      // 4794
                                    $between: [args.startDate, args.endDate]                                           // 4795
                                }                                                                                      // 4794
                            },                                                                                         // 4792
                            order: [['wnrgt', 'DESC']]                                                                 // 4797
                        }).then(function (res) {                                                                       // 4792
                            var promises = [];                                                                         // 4798
                            var dispo = void 0;                                                                        // 4799
                            res.forEach(function (r) {                                                                 // 4800
                                promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                 // 4801
                                    replacements: {                                                                    // 4803
                                        red: r.redac                                                                   // 4803
                                    },                                                                                 // 4803
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4803
                                })]).spread(function (redac) {                                                         // 4803
                                    dispo = r.toJSON();                                                                // 4805
                                    dispo.infosRedac = redac;                                                          // 4806
                                    return dispo;                                                                      // 4807
                                }));                                                                                   // 4808
                                promises.push(Promise.all([DBSQLSERVER.query(query, {                                  // 4810
                                    replacements: {                                                                    // 4812
                                        numero_reg: r.wnrgt,                                                           // 4812
                                        domaine: r.domaine                                                             // 4812
                                    },                                                                                 // 4812
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4812
                                })]).spread(function (infosurrgt) {                                                    // 4812
                                    dispo = r.toJSON();                                                                // 4814
                                    dispo.infoSurRgt = infosurrgt;                                                     // 4815
                                    dispo.etat = checkRdvDate(dispo);                                                  // 4816
                                    if (typeof dispo.etat == "undefined") dispo.etat = {                               // 4817
                                        nbj: -1,                                                                       // 4819
                                        alerte: "ERROR"                                                                // 4820
                                    };                                                                                 // 4818
                                    return dispo;                                                                      // 4822
                                }));                                                                                   // 4823
                            });                                                                                        // 4825
                            return Promise.all(promises);                                                              // 4826
                        }).then(function (dispos) {                                                                    // 4828
                            var nd = dispos.map(function (e, i, arr) {                                                 // 4829
                                if (e.infoSurRgt.length > 1) {                                                         // 4830
                                    var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);               // 4831
                                    //console.dir(e);                                                                  // 4833
                                                                                                                       //
                                    e.infoSurRgt = [];                                                                 // 4834
                                    e.infoSurRgt.push(goodelem);                                                       // 4835
                                }                                                                                      // 4836
                                                                                                                       //
                                return e;                                                                              // 4837
                            }); //console.dir(nd);                                                                     // 4838
                                                                                                                       //
                            return nd;                                                                                 // 4841
                        });                                                                                            // 4842
                                                                                                                       //
                    case "date_recep_sign_reg":                                                                        // 4843
                        return dispoSQL.findAll({                                                                      // 4844
                            attributes: {                                                                              // 4844
                                exclude: ['id']                                                                        // 4844
                            },                                                                                         // 4844
                            where: {                                                                                   // 4844
                                domaine: args.domaine,                                                                 // 4845
                                date_recep_sign_reg: {                                                                 // 4846
                                    $between: [args.startDate, args.endDate]                                           // 4847
                                }                                                                                      // 4846
                            },                                                                                         // 4844
                            order: [['wnrgt', 'DESC']]                                                                 // 4849
                        }).then(function (res) {                                                                       // 4844
                            var promises = [];                                                                         // 4850
                            var dispo = void 0;                                                                        // 4851
                            res.forEach(function (r) {                                                                 // 4852
                                promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                 // 4853
                                    replacements: {                                                                    // 4855
                                        red: r.redac                                                                   // 4855
                                    },                                                                                 // 4855
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4855
                                })]).spread(function (redac) {                                                         // 4855
                                    dispo = r.toJSON();                                                                // 4857
                                    dispo.infosRedac = redac;                                                          // 4858
                                    return dispo;                                                                      // 4859
                                }));                                                                                   // 4860
                                promises.push(Promise.all([DBSQLSERVER.query(query, {                                  // 4862
                                    replacements: {                                                                    // 4864
                                        numero_reg: r.wnrgt,                                                           // 4864
                                        domaine: r.domaine                                                             // 4864
                                    },                                                                                 // 4864
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4864
                                })]).spread(function (infosurrgt) {                                                    // 4864
                                    dispo = r.toJSON();                                                                // 4866
                                    dispo.infoSurRgt = infosurrgt;                                                     // 4867
                                    dispo.etat = checkRdvDate(dispo);                                                  // 4868
                                    if (typeof dispo.etat == "undefined") dispo.etat = {                               // 4869
                                        nbj: -1,                                                                       // 4871
                                        alerte: "ERROR"                                                                // 4872
                                    };                                                                                 // 4870
                                    return dispo;                                                                      // 4874
                                }));                                                                                   // 4875
                            });                                                                                        // 4877
                            return Promise.all(promises);                                                              // 4878
                        }).then(function (dispos) {                                                                    // 4880
                            var nd = dispos.map(function (e, i, arr) {                                                 // 4881
                                if (e.infoSurRgt.length > 1) {                                                         // 4882
                                    var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);               // 4883
                                    //console.dir(e);                                                                  // 4885
                                                                                                                       //
                                    e.infoSurRgt = [];                                                                 // 4886
                                    e.infoSurRgt.push(goodelem);                                                       // 4887
                                }                                                                                      // 4888
                                                                                                                       //
                                return e;                                                                              // 4889
                            }); //console.dir(nd);                                                                     // 4890
                                                                                                                       //
                            return nd;                                                                                 // 4893
                        });                                                                                            // 4894
                                                                                                                       //
                    case "date_retrait_reg":                                                                           // 4895
                        return dispoSQL.findAll({                                                                      // 4896
                            attributes: {                                                                              // 4896
                                exclude: ['id']                                                                        // 4896
                            },                                                                                         // 4896
                            where: {                                                                                   // 4896
                                domaine: args.domaine,                                                                 // 4897
                                date_retrait_reg: {                                                                    // 4898
                                    $between: [args.startDate, args.endDate]                                           // 4899
                                }                                                                                      // 4898
                            },                                                                                         // 4896
                            order: [['wnrgt', 'DESC']]                                                                 // 4901
                        }).then(function (res) {                                                                       // 4896
                            var promises = [];                                                                         // 4902
                            var dispo = void 0;                                                                        // 4903
                            res.forEach(function (r) {                                                                 // 4904
                                promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                 // 4905
                                    replacements: {                                                                    // 4907
                                        red: r.redac                                                                   // 4907
                                    },                                                                                 // 4907
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4907
                                })]).spread(function (redac) {                                                         // 4907
                                    dispo = r.toJSON();                                                                // 4909
                                    dispo.infosRedac = redac;                                                          // 4910
                                    return dispo;                                                                      // 4911
                                }));                                                                                   // 4912
                                promises.push(Promise.all([DBSQLSERVER.query(query, {                                  // 4914
                                    replacements: {                                                                    // 4916
                                        numero_reg: r.wnrgt,                                                           // 4916
                                        domaine: r.domaine                                                             // 4916
                                    },                                                                                 // 4916
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4916
                                })]).spread(function (infosurrgt) {                                                    // 4916
                                    dispo = r.toJSON();                                                                // 4918
                                    dispo.infoSurRgt = infosurrgt;                                                     // 4919
                                    dispo.etat = checkRdvDate(dispo);                                                  // 4920
                                    if (typeof dispo.etat == "undefined") dispo.etat = {                               // 4921
                                        nbj: -1,                                                                       // 4923
                                        alerte: "ERROR"                                                                // 4924
                                    };                                                                                 // 4922
                                    return dispo;                                                                      // 4926
                                }));                                                                                   // 4927
                            });                                                                                        // 4929
                            return Promise.all(promises);                                                              // 4930
                        }).then(function (dispos) {                                                                    // 4932
                            var nd = dispos.map(function (e, i, arr) {                                                 // 4933
                                if (e.infoSurRgt.length > 1) {                                                         // 4934
                                    var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);               // 4935
                                    //console.dir(e);                                                                  // 4937
                                                                                                                       //
                                    e.infoSurRgt = [];                                                                 // 4938
                                    e.infoSurRgt.push(goodelem);                                                       // 4939
                                }                                                                                      // 4940
                                                                                                                       //
                                return e;                                                                              // 4941
                            }); //console.dir(nd);                                                                     // 4942
                                                                                                                       //
                            return nd;                                                                                 // 4945
                        });                                                                                            // 4946
                                                                                                                       //
                    case "date_naiss":                                                                                 // 4948
                        return dispoSQL.findAll({                                                                      // 4949
                            attributes: {                                                                              // 4949
                                exclude: ['id']                                                                        // 4949
                            },                                                                                         // 4949
                            where: {                                                                                   // 4949
                                date_naiss: {                                                                          // 4950
                                    $between: [args.startDate, args.endDate]                                           // 4951
                                }                                                                                      // 4950
                            },                                                                                         // 4949
                            order: [['wnrgt', 'DESC']]                                                                 // 4953
                        }).then(function (res) {                                                                       // 4949
                            var promises = [];                                                                         // 4954
                            var dispo = void 0;                                                                        // 4955
                            res.forEach(function (r) {                                                                 // 4956
                                promises.push(Promise.all([DBSQLSERVER.query(uquery, {                                 // 4957
                                    replacements: {                                                                    // 4959
                                        red: r.redac                                                                   // 4959
                                    },                                                                                 // 4959
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4959
                                })]).spread(function (redac) {                                                         // 4959
                                    dispo = r.toJSON();                                                                // 4961
                                    dispo.infosRedac = redac;                                                          // 4962
                                    return dispo;                                                                      // 4963
                                }));                                                                                   // 4964
                                promises.push(Promise.all([DBSQLSERVER.query(query, {                                  // 4966
                                    replacements: {                                                                    // 4968
                                        numero_reg: r.wnrgt,                                                           // 4968
                                        domaine: r.domaine                                                             // 4968
                                    },                                                                                 // 4968
                                    type: DBSQLSERVER.QueryTypes.SELECT                                                // 4968
                                })]).spread(function (infosurrgt) {                                                    // 4968
                                    dispo = r.toJSON();                                                                // 4970
                                    dispo.infoSurRgt = infosurrgt;                                                     // 4971
                                    dispo.etat = checkRdvDate(dispo);                                                  // 4972
                                    if (typeof dispo.etat == "undefined") dispo.etat = {                               // 4973
                                        nbj: -1,                                                                       // 4975
                                        alerte: "ERROR"                                                                // 4976
                                    };                                                                                 // 4974
                                    return dispo;                                                                      // 4978
                                }));                                                                                   // 4979
                            });                                                                                        // 4981
                            return Promise.all(promises);                                                              // 4982
                        }).then(function (dispos) {                                                                    // 4984
                            var nd = dispos.map(function (e, i, arr) {                                                 // 4985
                                if (e.infoSurRgt.length > 1) {                                                         // 4986
                                    var goodelem = e.infoSurRgt[0]; //console.log("reglement "+e.wnrgt);               // 4987
                                    //console.dir(e);                                                                  // 4989
                                                                                                                       //
                                    e.infoSurRgt = [];                                                                 // 4990
                                    e.infoSurRgt.push(goodelem);                                                       // 4991
                                }                                                                                      // 4992
                                                                                                                       //
                                return e;                                                                              // 4993
                            }); //console.dir(nd);                                                                     // 4994
                                                                                                                       //
                            return nd;                                                                                 // 4997
                        });                                                                                            // 4998
                }                                                                                                      // 4634
            } else {                                                                                                   // 5000
                return [];                                                                                             // 5001
            }                                                                                                          // 5002
        },                                                                                                             // 5004
        voirInfoReg: function (_, args) {                                                                              // 5005
            if (!args.wnrgt && !args.domaine) return [];else {                                                         // 5006
                var query = "exec info_reg_dispo :numero_reg,:domaine ";                                               // 5009
                return DBSQLSERVER.query(query, {                                                                      // 5010
                    replacements: {                                                                                    // 5011
                        numero_reg: args.wnrgt,                                                                        // 5012
                        domaine: args.domaine                                                                          // 5013
                    },                                                                                                 // 5011
                    type: DBSQLSERVER.QueryTypes.SELECT                                                                // 5015
                });                                                                                                    // 5010
            }                                                                                                          // 5017
        }                                                                                                              // 5019
    },                                                                                                                 // 30
    Mutation: {                                                                                                        // 5026
        deleteUsers: function (_, args) {                                                                              // 5027
            var codeArr = args.usercodes;                                                                              // 5028
            Meteor.users.remove({                                                                                      // 5029
                codeRedac: {                                                                                           // 5029
                    $in: codeArr                                                                                       // 5030
                }                                                                                                      // 5029
            });                                                                                                        // 5029
            userSQL.destroy({                                                                                          // 5032
                where: {                                                                                               // 5032
                    Redac: codeArr                                                                                     // 5033
                }                                                                                                      // 5032
            });                                                                                                        // 5032
            return userSQL.findAll({                                                                                   // 5035
                attributes: {                                                                                          // 5035
                    exclude: ['id']                                                                                    // 5035
                },                                                                                                     // 5035
                order: [['Nom', 'DESC']]                                                                               // 5035
            });                                                                                                        // 5035
        }                                                                                                              // 5036
    },                                                                                                                 // 5026
    Subscription: {                                                                                                    // 5038
        rgtUpdated: {                                                                                                  // 5039
            subscribe: pubsub.asyncIterator('rgtUpdated'),                                                             // 5040
            resolve: function (payload) {                                                                              // 5041
                return payload;                                                                                        // 5041
            }                                                                                                          // 5041
        }                                                                                                              // 5039
    }                                                                                                                  // 5038
};                                                                                                                     // 29
module.exportDefault(resolvers);                                                                                       // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"schema.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/graphql/schema.js                                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var schema = "\n        \n        type User{\n            username:String\n            uncrypted:String\n            nom:String\n            prenoms:String\n            fullname: String\n            codeRedac:String\n            role:String\n            createdAt:String\n        }\n        type UserSQL{\n            ulogin:String\n            mdp:String\n            nom:String\n            prenom:String\n            role:String\n            redac:String\n        }\n        type InfosREG{\n            DATE_SURVENANCE_SINISTRE:String\n            NOM_BENEFICIAIRE:String\n            NUMERO_BENEFICIAIRE:String\n            LIBELLE_SINISTRE:String\n            NUMERO_SINISTRE:String\n            NUMERO_REGLEMENT:String\n            NUMERO_CHEQUE:String\n            DECOMPTE:String\n            POLICE:String\n            DATE_REGLEMENT:String\n            DATE_RECEPTION:String\n            CAUSE_SINISTRE:String\n            TYPE_SINISTRE:String\n            MONTANT_BRUT:String\n            MONTANT_NET_REGLEMENT:String\n        }\n        type Alert{\n            nbj:Int\n            alerte:String\n        }\n        type DisporegSQL{\n            wasrg:String\n            wnrgt:Int\n            wnupo:Int\n            Num_envoi:Int\n            cheque:Int\n            nom_beneficiaire:String\n            date_naiss:String\n            date_depot_treso:String\n            date_sort_treso:String\n            date_depot_sign:String\n            date_recep_sign_reg:String\n            date_retrait_reg:String\n            statut_reg_retirer:String\n            domaine:String\n            redac:String\n            MNTGT:String\n            MRGGT:String\n            dateRDV:String\n            ValBank:String\n            Comments:String\n            CommentsBank:String\n            banque:String\n            chequeState:String\n            etat:Alert\n            infosRedac:[UserSQL]\n            infoSurRgt:[InfosREG]\n        }\n        type Query{\n            user(username:String):[User]\n            userSQL(nom:String,orderDesc:Boolean!):[UserSQL] \n            dataToExport(typeDate:String,startDate:String,endDate:String,domaine:String):[DisporegSQL]\n            consultDispo(startDate:String,endDate:String,numpolice:Int,numrgt:Int,numenv:Int,numcheque:Int,nomtotal:String,birthdate:String,offset:Int,limit:Int):[DisporegSQL]\n            listeDispo(typeDate:String,date:String,statut:String,domaine:String,numenv:Int,numregl:Int,numcheque:Int,numpol:Int,nomtotal:String,numreglStart:Int,numreglEnd:Int,offset:Int,limit:Int):[DisporegSQL]\n            consultDispoBank(startDate:String,endDate:String,numpolice:Int,banque:String,numrgt:Int,numenv:Int,numcheque:Int,nomtotal:String,birthdate:String,offset:Int,limit:Int):[DisporegSQL]\n            voirInfoReg(wnrgt:Int,domaine:String):[InfosREG]\n        }\n        type Subscription{\n            rgtUpdated(wnrgt:Int):DisporegSQL\n        }\n        type Mutation{\n            deleteUsers(usercodes:[String]!):[UserSQL]\n        }\n        schema{\n            query:Query\n            mutation:Mutation\n            subscription:Subscription\n        }\n\n";
module.exportDefault(schema);                                                                                          // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"publications":{"User.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/publications/User.js                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor = void 0;                                                                                                   // 1
module.watch(require("meteor/meteor"), {                                                                               // 1
    Meteor: function (v) {                                                                                             // 1
        Meteor = v;                                                                                                    // 1
    }                                                                                                                  // 1
}, 0);                                                                                                                 // 1
module.exportDefault(function () {                                                                                     // 1
    Meteor.publish('CurrentUser', function () {                                                                        // 5
        if (this.userId) return Meteor.users.find({                                                                    // 6
            _id: this.userId                                                                                           // 7
        }, {                                                                                                           // 7
            fields: {                                                                                                  // 7
                role: 1                                                                                                // 7
            }                                                                                                          // 7
        });else this.ready();                                                                                          // 7
    });                                                                                                                // 10
});                                                                                                                    // 11
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"WhatsNew.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/publications/WhatsNew.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor = void 0;                                                                                                   // 1
module.watch(require("meteor/meteor"), {                                                                               // 1
    Meteor: function (v) {                                                                                             // 1
        Meteor = v;                                                                                                    // 1
    }                                                                                                                  // 1
}, 0);                                                                                                                 // 1
var WhatsNew = void 0;                                                                                                 // 1
module.watch(require("../../imports/api/collections.js"), {                                                            // 1
    WhatsNew: function (v) {                                                                                           // 1
        WhatsNew = v;                                                                                                  // 1
    }                                                                                                                  // 1
}, 1);                                                                                                                 // 1
module.exportDefault(WhatsNewPub = function () {                                                                       // 1
    Meteor.publish('latestNews', function () {                                                                         // 6
        return WhatsNew.find();                                                                                        // 7
    });                                                                                                                // 9
});                                                                                                                    // 10
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"methods.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods.js                                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _regenerator = require("babel-runtime/regenerator");                                                               //
                                                                                                                       //
var _regenerator2 = _interopRequireDefault(_regenerator);                                                              //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
var module1 = module;                                                                                                  // 1
var Meteor = void 0;                                                                                                   // 1
module1.watch(require("meteor/meteor"), {                                                                              // 1
    Meteor: function (v) {                                                                                             // 1
        Meteor = v;                                                                                                    // 1
    }                                                                                                                  // 1
}, 0);                                                                                                                 // 1
var Promise = void 0;                                                                                                  // 1
module1.watch(require("meteor/promise"), {                                                                             // 1
    Promise: function (v) {                                                                                            // 1
        Promise = v;                                                                                                   // 1
    }                                                                                                                  // 1
}, 1);                                                                                                                 // 1
var Accounts = void 0;                                                                                                 // 1
module1.watch(require("meteor/accounts-base"), {                                                                       // 1
    Accounts: function (v) {                                                                                           // 1
        Accounts = v;                                                                                                  // 1
    }                                                                                                                  // 1
}, 2);                                                                                                                 // 1
var Sequelize = void 0;                                                                                                // 1
module1.watch(require("sequelize"), {                                                                                  // 1
    "default": function (v) {                                                                                          // 1
        Sequelize = v;                                                                                                 // 1
    }                                                                                                                  // 1
}, 3);                                                                                                                 // 1
var userSQL = void 0,                                                                                                  // 1
    dispoSQL = void 0,                                                                                                 // 1
    DBSQL = void 0,                                                                                                    // 1
    DBSQLSERVER = void 0;                                                                                              // 1
module1.watch(require("./graphql/connectors.js"), {                                                                    // 1
    userSQL: function (v) {                                                                                            // 1
        userSQL = v;                                                                                                   // 1
    },                                                                                                                 // 1
    dispoSQL: function (v) {                                                                                           // 1
        dispoSQL = v;                                                                                                  // 1
    },                                                                                                                 // 1
    DBSQL: function (v) {                                                                                              // 1
        DBSQL = v;                                                                                                     // 1
    },                                                                                                                 // 1
    DBSQLSERVER: function (v) {                                                                                        // 1
        DBSQLSERVER = v;                                                                                               // 1
    }                                                                                                                  // 1
}, 4);                                                                                                                 // 1
var WhatsNew = void 0,                                                                                                 // 1
    RegUpdated = void 0,                                                                                               // 1
    Historique = void 0;                                                                                               // 1
module1.watch(require("../imports/api/collections.js"), {                                                              // 1
    WhatsNew: function (v) {                                                                                           // 1
        WhatsNew = v;                                                                                                  // 1
    },                                                                                                                 // 1
    RegUpdated: function (v) {                                                                                         // 1
        RegUpdated = v;                                                                                                // 1
    },                                                                                                                 // 1
    Historique: function (v) {                                                                                         // 1
        Historique = v;                                                                                                // 1
    }                                                                                                                  // 1
}, 5);                                                                                                                 // 1
var pubsub = void 0;                                                                                                   // 1
module1.watch(require("./graphql/resolvers"), {                                                                        // 1
    pubsub: function (v) {                                                                                             // 1
        pubsub = v;                                                                                                    // 1
    }                                                                                                                  // 1
}, 6);                                                                                                                 // 1
var moment = void 0;                                                                                                   // 1
module1.watch(require("meteor/momentjs:moment"), {                                                                     // 1
    moment: function (v) {                                                                                             // 1
        moment = v;                                                                                                    // 1
    }                                                                                                                  // 1
}, 7);                                                                                                                 // 1
var Email = void 0;                                                                                                    // 1
module1.watch(require("meteor/email"), {                                                                               // 1
    Email: function (v) {                                                                                              // 1
        Email = v;                                                                                                     // 1
    }                                                                                                                  // 1
}, 8);                                                                                                                 // 1
var checkRdvDateMD = void 0,                                                                                           // 1
    frenchDateToEn = void 0;                                                                                           // 1
module1.watch(require("../imports/utils/utilitaires"), {                                                               // 1
    checkRdvDateMD: function (v) {                                                                                     // 1
        checkRdvDateMD = v;                                                                                            // 1
    },                                                                                                                 // 1
    frenchDateToEn: function (v) {                                                                                     // 1
        frenchDateToEn = v;                                                                                            // 1
    }                                                                                                                  // 1
}, 9);                                                                                                                 // 1
var Excel = void 0;                                                                                                    // 1
module1.watch(require("meteor/netanelgilad:excel"), {                                                                  // 1
    Excel: function (v) {                                                                                              // 1
        Excel = v;                                                                                                     // 1
    }                                                                                                                  // 1
}, 10);                                                                                                                // 1
                                                                                                                       //
var PromiseB = require('bluebird');                                                                                    // 3
                                                                                                                       //
var fs = require('fs');                                                                                                // 13
                                                                                                                       //
var json2xls = require('json2xls');                                                                                    // 15
                                                                                                                       //
module1.exportDefault(function () {                                                                                    // 1
    Meteor.methods({                                                                                                   // 20
        sendEmail: function (to, from, subject, text) {                                                                // 21
            check([to], [Array]);                                                                                      // 22
            check([from, subject, text], [String]);                                                                    // 23
            this.unblock();                                                                                            // 24
            Email.send({                                                                                               // 25
                to: to,                                                                                                // 25
                from: from,                                                                                            // 25
                subject: subject,                                                                                      // 25
                html: text                                                                                             // 25
            });                                                                                                        // 25
        },                                                                                                             // 26
        updateNewsScreenTime: function () {                                                                            // 27
            var currentUser = Meteor.users.findOne({                                                                   // 28
                _id: this.userId                                                                                       // 28
            });                                                                                                        // 28
                                                                                                                       //
            if (currentUser && currentUser.seenUpdateXtime < 3) {                                                      // 29
                console.log();                                                                                         // 30
                Meteor.users.update({                                                                                  // 31
                    _id: this.userId                                                                                   // 31
                }, {                                                                                                   // 31
                    $set: {                                                                                            // 32
                        seenUpdateXtime: currentUser.seenUpdateXtime++                                                 // 33
                    }                                                                                                  // 32
                });                                                                                                    // 31
                console.log("in update screentime");                                                                   // 36
                console.dir(currentUser);                                                                              // 37
            } else if (currentUser && currentUser.seenUpdateXtime == 3) {                                              // 38
                Meteor.users.update({                                                                                  // 39
                    _id: this.userId                                                                                   // 39
                }, {                                                                                                   // 39
                    $set: {                                                                                            // 40
                        hasSeenUpdate: true,                                                                           // 41
                        isNewsThere: false                                                                             // 42
                    }                                                                                                  // 40
                });                                                                                                    // 39
            }                                                                                                          // 45
        },                                                                                                             // 46
        quoiDeneuf: function () {                                                                                      // 47
            var guidGenerator = function () {                                                                          // 48
                var S4 = function () {                                                                                 // 49
                    return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);                              // 50
                };                                                                                                     // 51
                                                                                                                       //
                return S4() + S4() + "-" + S4() + "-" + S4() + "-" + S4() + "-" + S4() + S4() + S4();                  // 52
            };                                                                                                         // 53
                                                                                                                       //
            var updates = ["GESDREG (Gestion des disponibilités de règlements) version 2.0.0", "Dans cette version les mises à jour suivantes ont été effectuées:", "---Possibilité d'exclusion des règlements par numéro de règlement", "---Insertion des codes rejets des envois", "---Intégration des règlements manuels par fichier Excel", "---Affichage des chèques annulés ou non valides", "---Interface banquaire mise à jour"];
            var newsId = guidGenerator();                                                                              // 64
            var existInCol = WhatsNew.find().fetch();                                                                  // 65
                                                                                                                       //
            if (existInCol.length > 0) {                                                                               // 66
                WhatsNew.remove({});                                                                                   // 67
            }                                                                                                          // 68
                                                                                                                       //
            WhatsNew.insert({                                                                                          // 69
                updates: updates,                                                                                      // 70
                newsId: newsId                                                                                         // 71
            });                                                                                                        // 69
            var met = Meteor.users.find().fetch();                                                                     // 73
                                                                                                                       //
            if (met.length) {                                                                                          // 74
                met.map(function (e, i, arr) {                                                                         // 75
                    Meteor.users.update({                                                                              // 76
                        username: e.username,                                                                          // 76
                        NewsID: null                                                                                   // 76
                    }, {                                                                                               // 76
                        $set: {                                                                                        // 77
                            isNewsThere: true,                                                                         // 78
                            NewsID: newsId                                                                             // 79
                        }                                                                                              // 77
                    });                                                                                                // 76
                });                                                                                                    // 82
            }                                                                                                          // 84
        },                                                                                                             // 86
        checkAdminUser: function (username, mdp) {                                                                     // 87
            if (username === Meteor.settings.ADMINLOGMDP && mdp === Meteor.settings.ADMINLOGMDP) return true;else return false;
        },                                                                                                             // 92
        checkDelai: function () {                                                                                      // 93
            function _callee() {                                                                                       // 20
                var d;                                                                                                 // 20
                return _regenerator2.default.async(function () {                                                       // 20
                    function _callee$(_context) {                                                                      // 20
                        while (1) {                                                                                    // 20
                            switch (_context.prev = _context.next) {                                                   // 20
                                case 0:                                                                                // 20
                                    //check tous les reglement dont la date de depot treso est renseignee et pas la date de sortie
                                    d = {                                                                              // 95
                                        regTreso: [],                                                                  // 96
                                        horsDelaiT: [],                                                                // 97
                                        regSign: [],                                                                   // 98
                                        horsDelaiS: []                                                                 // 99
                                    };                                                                                 // 95
                                    _context.next = 3;                                                                 // 20
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 20
                                        attributes: {                                                                  // 101
                                            exclude: ['id']                                                            // 101
                                        },                                                                             // 101
                                        where: {                                                                       // 101
                                            statut_reg_retirer: 'A LA TRESO'                                           // 102
                                        },                                                                             // 101
                                        order: [['wnrgt', 'DESC']]                                                     // 103
                                    }).then(function (res) {                                                           // 101
                                        res.map(function (e, i, arr) {                                                 // 104
                                            // console.dir(e.dataValues);                                              // 105
                                            var delai = moment(e.dataValues.date_depot_treso).add(3, 'd');             // 106
                                                                                                                       //
                                            if (moment(e.dataValues.date_depot_treso).isBefore(moment(delai))) {       // 107
                                                d.regTreso.push(e.dataValues);                                         // 108
                                            } else if (moment(e.dataValuesdate_depot_treso).isAfter(moment(delai))) {  // 109
                                                d.horsDelaiT.push(e.dataValues);                                       // 110
                                            }                                                                          // 111
                                        });                                                                            // 112
                                    }));                                                                               // 113
                                                                                                                       //
                                case 3:                                                                                // 20
                                    _context.next = 5;                                                                 // 20
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 20
                                        attributes: {                                                                  // 114
                                            exclude: ['id']                                                            // 114
                                        },                                                                             // 114
                                        where: {                                                                       // 114
                                            statut_reg_retirer: 'A LA SIGNATURE'                                       // 115
                                        },                                                                             // 114
                                        order: [['wnrgt', 'DESC']]                                                     // 116
                                    }).then(function (res) {                                                           // 114
                                        res.map(function (e, i, arr) {                                                 // 117
                                            //console.dir(e.dataValues);                                               // 118
                                            var delai = moment(e.dataValues.date_depot_sign).add(1, 'd');              // 119
                                                                                                                       //
                                            if (moment(e.dataValues.date_depot_sign).isBefore(moment(delai))) {        // 120
                                                d.regSign.push(e.dataValues);                                          // 121
                                            } else if (moment(e.dataValues.date_depot_sign).isAfter(moment(delai))) {  // 122
                                                d.horsDelaiS.push(e.dataValues);                                       // 123
                                            }                                                                          // 124
                                        });                                                                            // 125
                                    }));                                                                               // 126
                                                                                                                       //
                                case 5:                                                                                // 20
                                    return _context.abrupt("return", d);                                               // 20
                                                                                                                       //
                                case 6:                                                                                // 20
                                case "end":                                                                            // 20
                                    return _context.stop();                                                            // 20
                            }                                                                                          // 20
                        }                                                                                              // 20
                    }                                                                                                  // 20
                                                                                                                       //
                    return _callee$;                                                                                   // 20
                }(), null, this);                                                                                      // 20
            }                                                                                                          // 20
                                                                                                                       //
            return _callee;                                                                                            // 20
        }(),                                                                                                           // 20
        checkDelaiParRapportAuClient: function () {                                                                    // 130
            function _callee2() {                                                                                      // 20
                var d, query, req;                                                                                     // 20
                return _regenerator2.default.async(function () {                                                       // 20
                    function _callee2$(_context2) {                                                                    // 20
                        while (1) {                                                                                    // 20
                            switch (_context2.prev = _context2.next) {                                                 // 20
                                case 0:                                                                                // 20
                                    //check tous les reglement dont la date de depot treso est renseignee et pas la date de sortie
                                    d = {                                                                              // 132
                                        rachatTotbancass: 0,                                                           // 133
                                        rachatTotIndiv: 0,                                                             // 134
                                        avanceRachatP: 0,                                                              // 135
                                        terme: 0,                                                                      // 136
                                        carec: 0,                                                                      // 137
                                        ifc: 0                                                                         // 138
                                    };                                                                                 // 132
                                    query = "exec info_reg_dispo :numero_reg,:domaine ";                               // 141
                                    req = "select * from exp.regdispo where dateRDV between 2018-07-01 and 2018-07-31";
                                    _context2.next = 5;                                                                // 20
                                    return _regenerator2.default.awrap(dispoSQL.findAll({                              // 20
                                        attributes: {                                                                  // 143
                                            exclude: ['id']                                                            // 143
                                        },                                                                             // 143
                                        where: {                                                                       // 143
                                            dateRDV: {                                                                 // 144
                                                $between: [moment('2018-07-16').format("YYYY-MM-DD"), moment('2018-07-20').format("YYYY-MM-DD")]
                                            }                                                                          // 144
                                        },                                                                             // 143
                                        order: [['wnrgt', 'DESC']]                                                     // 148
                                    }).then(function (res) {                                                           // 143
                                        var promises = [];                                                             // 150
                                        var dispo = void 0;                                                            // 151
                                        res.forEach(function (r) {                                                     // 152
                                            promises.push(Promise.all([DBSQLSERVER.query(query, {                      // 153
                                                replacements: {                                                        // 155
                                                    numero_reg: r.wnrgt,                                               // 155
                                                    domaine: r.domaine                                                 // 155
                                                },                                                                     // 155
                                                type: DBSQLSERVER.QueryTypes.SELECT                                    // 155
                                            })]).then(function (infosurrgt) {                                          // 155
                                                //ici on a un tableau multidimensionnel i dont know why and i dont want to bother looking for an answer to that
                                                dispo = r.toJSON();                                                    // 158
                                                dispo.infoSurRgt = infosurrgt; //console.log(dispo.infoSurRgt[0][0])   // 159
                                                                                                                       //
                                                var data = checkRdvDateMD(dispo);                                      // 161
                                                var sinistre = typeof dispo.infoSurRgt != "undefined" || typeof dispo.infoSurRgt[0][0].TYPE_SINISTRE != "undefined" || dispo.infoSurRgt[0][0].TYPE_SINISTRE != "" ? dispo.infoSurRgt[0][0].TYPE_SINISTRE : ''; //console.log("le sinistre est :"+dispo.infoSurRgt[0][0].TYPE_SINISTRE);
                                                //console.log("le type de data est "+typeof data);                     // 164
                                                //console.log(data);                                                   // 165
                                                                                                                       //
                                                if (sinistre != '' && data) {                                          // 166
                                                    console.log("le sinistre est :" + sinistre);                       // 167
                                                                                                                       //
                                                    if (sinistre == "AVANCE" || sinistre == "RACHAT PARTIEL") {        // 168
                                                        if (data.alerte === "HAUTE") d.avanceRachatP++;                // 169
                                                    } else if (sinistre == "RACHAT TOTAL") {                           // 171
                                                        var codeProduit = dispo.wnupo.toString().substring(0, 3);      // 172
                                                                                                                       //
                                                        switch (codeProduit) {                                         // 173
                                                            case "110":                                                // 174
                                                            case "112":                                                // 175
                                                            case "116":                                                // 176
                                                            case "120":                                                // 177
                                                            case "122":                                                // 178
                                                            case "130":                                                // 179
                                                            case "140":                                                // 180
                                                            case "162":                                                // 181
                                                            case "166":                                                // 182
                                                            case "168":                                                // 183
                                                            case "210":                                                // 184
                                                            case "212":                                                // 185
                                                            case "216":                                                // 186
                                                            case "218":                                                // 187
                                                            case "220":                                                // 188
                                                            case "224":                                                // 189
                                                            case "230":                                                // 190
                                                            case "234":                                                // 191
                                                            case "241":                                                // 192
                                                            case "242":                                                // 193
                                                            case "243":                                                // 194
                                                            case "246":                                                // 195
                                                            case "247":                                                // 196
                                                            case "248":                                                // 197
                                                            case "260":                                                // 198
                                                            case "310":                                                // 199
                                                            case "312":                                                // 200
                                                            case "330":                                                // 201
                                                            case "331":                                                // 202
                                                            case "332":                                                // 203
                                                            case "333":                                                // 204
                                                            case "334":                                                // 205
                                                            case "360":                                                // 206
                                                            case "791":                                                // 207
                                                            case "793":                                                // 208
                                                                if (data.alerte === "HAUTE") d.rachatTotIndiv++;       // 209
                                                                break;                                                 // 211
                                                                                                                       //
                                                            case "710":                                                // 212
                                                            case "713":                                                // 213
                                                            case "715":                                                // 214
                                                            case "717":                                                // 215
                                                            case "720":                                                // 216
                                                            case "722":                                                // 217
                                                            case "724":                                                // 218
                                                            case "726":                                                // 219
                                                            case "731":                                                // 220
                                                            case "732":                                                // 221
                                                            case "742":                                                // 222
                                                            case "745":                                                // 223
                                                            case "752":                                                // 224
                                                            case "755":                                                // 225
                                                            case "760":                                                // 226
                                                            case "766":                                                // 227
                                                            case "770":                                                // 228
                                                            case "772":                                                // 229
                                                            case "773":                                                // 230
                                                            case "774":                                                // 231
                                                            case "776":                                                // 232
                                                            case "777":                                                // 233
                                                            case "778":                                                // 234
                                                            case "782":                                                // 235
                                                            case "784":                                                // 236
                                                            case "786":                                                // 237
                                                                if (data.alerte === "HAUTE") d.rachatTotbancass++;     // 238
                                                                break;                                                 // 240
                                                        }                                                              // 173
                                                    } else if (sinistre == "TERME") {                                  // 242
                                                        if (data.alerte === "HAUTE") d.terme++;                        // 243
                                                    } else if (sinistre == "CAREC") {                                  // 245
                                                        if (data.alerte === "HAUTE") d.carec++;                        // 246
                                                    } else if (sinistre == "IFC") {                                    // 248
                                                        if (data.alerte === "HAUTE") d.ifc++;                          // 249
                                                    }                                                                  // 251
                                                }                                                                      // 252
                                                                                                                       //
                                                return dispo;                                                          // 254
                                            }));                                                                       // 255
                                        });                                                                            // 257
                                        return Promise.all(promises);                                                  // 258
                                    }));                                                                               // 260
                                                                                                                       //
                                case 5:                                                                                // 20
                                    console.dir(d);                                                                    // 262
                                    return _context2.abrupt("return", d);                                              // 20
                                                                                                                       //
                                case 7:                                                                                // 20
                                case "end":                                                                            // 20
                                    return _context2.stop();                                                           // 20
                            }                                                                                          // 20
                        }                                                                                              // 20
                    }                                                                                                  // 20
                                                                                                                       //
                    return _callee2$;                                                                                  // 20
                }(), null, this);                                                                                      // 20
            }                                                                                                          // 20
                                                                                                                       //
            return _callee2;                                                                                           // 20
        }(),                                                                                                           // 20
        exportToExcel: function (EXL) {                                                                                // 265
            var jsonArray = [];                                                                                        // 267
            EXL.forEach(function (instance, index, record) {                                                           // 269
                if (record[index].domaine === "I") domaine = "INDIVIDUEL";                                             // 271
                if (record[index].domaine === "G") domaine = "GROUPE";                                                 // 272
                if (record[index].domaine === "R") domaine = "RENTE";                                                  // 273
                var tempArr = {                                                                                        // 275
                    'DOMAINE': domaine,                                                                                // 276
                    'NUMERO_DU_BENEFICIAIRE': record[index].wasrg,                                                     // 277
                    'NUMERO_POLICE': record[index].wnupo,                                                              // 278
                    'NUMERO_REGLEMENT': record[index].wnrgt,                                                           // 279
                    'NUMERO_CHEQUE': record[index].infoSurRgt[0] ? record[index].infoSurRgt[0].NUMERO_CHEQUE != '' ? record[index].infoSurRgt[0].NUMERO_CHEQUE : 'Aucun numero' : 'Aucun numero',
                    'MONTANT': record[index].MNTGT,                                                                    // 281
                    'MODE_REGLEMENT': record[index].MRGGT,                                                             // 282
                    'NOM_DU_BENEFICIAIRE': record[index].nom_beneficiaire,                                             // 283
                    'LIBELLE_SINISTRE': record[index].infoSurRgt[0] ? record[index].infoSurRgt[0].LIBELLE_SINISTRE : null,
                    'CAUSE_SINISTRE': record[index].infoSurRgt[0] ? record[index].infoSurRgt[0].CAUSE_SINISTRE : null,
                    'TYPE_SINISTRE': record[index].infoSurRgt[0] ? record[index].infoSurRgt[0].TYPE_SINISTRE : null,   // 286
                    'DATE_RECEPTION': record[index].infoSurRgt[0] ? record[index].infoSurRgt[0].DATE_RECEPTION : null,
                    'DATE_RDV': record[index].dateRDV,                                                                 // 288
                    'DATE_NAISSANCE_BENEFICIAIRE': record[index].date_naiss ? moment(record[index].date_naiss).format("DD-MM-YYYY") : "NON DEFINIE",
                    'DATE_DEPOT_TRESO': record[index].date_depot_treso ? moment(record[index].date_depot_treso).format("DD-MM-YYYY") : "NON DEFINIE",
                    'DATE_SORT_TRESO': record[index].date_sort_treso ? moment(record[index].date_sort_treso).format("DD-MM-YYYY") : "NON DEFINIE",
                    'DATE_DEPOT_SIGNATURE': record[index].date_depot_sign ? moment(record[index].date_depot_sign).format("DD-MM-YYYY") : "NON DEFINIE",
                    'DATE_RECEPTION_SIGNATURE': record[index].date_recep_sign_reg ? moment(record[index].date_recep_sign_reg).format("DD-MM-YYYY") : "NON DEFINIE",
                    'DATE_RETRAIT_REGLEMENT': record[index].date_retrait_reg ? moment(record[index].date_retrait_reg).format("DD-MM-YYYY") : "NON DEFINIE",
                    'STATUT_DU_REGLEMENT': record[index].statut_reg_retirer,                                           // 295
                    'REDACTEUR': record[index].redac === "ADM" ? "Administrateur" : record[index].redac                // 296
                };                                                                                                     // 275
                jsonArray.push(tempArr);                                                                               // 298
            });                                                                                                        // 299
            var xls = json2xls(jsonArray);                                                                             // 301
            return xls;                                                                                                // 302
        },                                                                                                             // 303
        createNewUser: function (values) {                                                                             // 304
            var codeFound = Meteor.users.findOne({                                                                     // 305
                codeRedac: values.codeRedac.toUpperCase()                                                              // 305
            });                                                                                                        // 305
                                                                                                                       //
            if (codeFound) {                                                                                           // 306
                throw new Meteor.Error("Veuillez re vérifier, il se pourrait que le code rédacteur existe déja"); //return false;
            } //-----------------------------                                                                          // 309
                                                                                                                       //
                                                                                                                       //
            if (Accounts.createUser({                                                                                  // 311
                username: values.username,                                                                             // 312
                password: values.password                                                                              // 313
            })) {                                                                                                      // 311
                var nuser = Meteor.users.findOne({                                                                     // 315
                    username: values.username                                                                          // 315
                });                                                                                                    // 315
                                                                                                                       //
                if (Meteor.users.update(nuser._id, {                                                                   // 316
                    $set: {                                                                                            // 317
                        uncrypted: values.passwordconf,                                                                // 318
                        nom: values.nom,                                                                               // 319
                        prenoms: values.prenom,                                                                        // 320
                        fullname: values.nom + ' ' + values.prenom,                                                    // 321
                        email: values.email,                                                                           // 322
                        hasSeenUpdate: false,                                                                          // 323
                        seenUpdateXtime: 0,                                                                            // 324
                        isNewsThere: false,                                                                            // 325
                        NewsID: null,                                                                                  // 326
                        codeRedac: values.codeRedac.toUpperCase(),                                                     // 327
                        role: values.role                                                                              // 328
                    }                                                                                                  // 317
                })) {                                                                                                  // 316
                    //DBSQL.sync();                                                                                    // 331
                    var message = "<em>Ceci est un message automatique, veuillez ne pas y répondre.</em><br/><br/>Bonjour Monsieur/Madame,<br/><br/>Veuillez trouver ci dessous vos accès au module GESDREG en charge de la gestion des disponibilités de règlements. <br/><br/>Identifiant: <b>" + values.username + "</b><br/> Mot de passe: <b>" + values.passwordconf + "</b>. <br/><br/>Votre application est accèssible via le lien suivant: <a href='http://10.11.100.48:8082'>http://10.11.100.48:8082</a>. <br/>Pour un fonctionnement optimal veuillez ouvrir l'application avec les navigateurs <b>Google Chrome</b> ou <b>Mozilla Firefox.</b><br/><br/> Cordialement, <br/><br/><b>DSI NSIA VIE ASSURANCES</b>";
                    console.log("Valeur de la variable environment mail " + process.env.MAIL_URL);                     // 333
                    Meteor.call("sendEmail", [values.email, Meteor.settings.ADMINMAIL], "info@nsiavieapplications.com", "Vos identifiants sur le module GESDREG(Gestion des disponibilités de règlement)", message);
                    return userSQL.create({                                                                            // 335
                        ulogin: values.username,                                                                       // 336
                        mdp: nuser.services.password.bcrypt.substring(0, 8) + values.passwordconf,                     // 337
                        //values.passwordconf,                                                                         // 337
                        nom: values.nom,                                                                               // 338
                        prenom: values.prenom,                                                                         // 339
                        email: values.email,                                                                           // 340
                        redac: values.codeRedac.toUpperCase(),                                                         // 341
                        role: values.role                                                                              // 342
                    }).then(function (err, res) {                                                                      // 335
                        if (err) {                                                                                     // 344
                            // throw new Meteor.Error("Veuillez re vérifier, il se pourrait que le code rédacteur existe déja");
                            return false;                                                                              // 347
                        } else return true; //DBSQL.close();                                                           // 348
                                                                                                                       //
                    }).catch(function (err) {                                                                          // 353
                        throw new Meteor.Error("Veuillez re vérifier, il se pourrait que le code rédacteur existe déja");
                    }); //return true;                                                                                 // 355
                } else {                                                                                               // 357
                    Meteor.users.remove({                                                                              // 359
                        username: values.username                                                                      // 359
                    });                                                                                                // 359
                    throw new Meteor.Error("Veuillez re vérifier vos champs");                                         // 360
                }                                                                                                      // 362
            } else {                                                                                                   // 363
                throw new Meteor.Error("Veuillez re vérifier vos champs, cet utilisateur existe deja");                // 364
            }                                                                                                          // 365
        },                                                                                                             // 368
        createDispo: function (values) {                                                                               // 369
            var redac = Meteor.users.findOne({                                                                         // 370
                _id: Meteor.userId                                                                                     // 370
            });                                                                                                        // 370
            console.log(Meteor.userid);                                                                                // 371
            console.dir(values);                                                                                       // 372
            return dispoSQL.create({                                                                                   // 373
                wasrg: values.wasrg,                                                                                   // 374
                wnrgt: values.wnrgt,                                                                                   // 375
                date_depot_treso: values.date_depot_treso,                                                             // 376
                date_sort_treso: values.date_sort_treso,                                                               // 377
                date_depot_sign: values.date_depot_sign,                                                               // 378
                date_recep_sign_reg: values.date_recep_sign_reg,                                                       // 379
                redac: redac.codeRedac,                                                                                // 380
                statut_reg_retirer: "EN COURS",                                                                        // 381
                domaine: values.domaine                                                                                // 382
            }).then(function () {                                                                                      // 373
                return true;                                                                                           // 384
            });                                                                                                        // 385
        },                                                                                                             // 386
        updateDisposManuel: function () {                                                                              // 387
            var excel = new Excel('xlsx');                                                                             // 388
            var pathToFile = process.env.PWD + '/FICHIERS/rgtmanuel/rgtmanuel.xlsx';                                   // 389
            var workbook = excel.readFile(pathToFile, {                                                                // 390
                cellDates: true,                                                                                       // 390
                dateNF: "dd/MM/yyyy"                                                                                   // 390
            }); //console.dir(workbook);                                                                               // 390
                                                                                                                       //
            var sheet = workbook.Sheets.Feuil1;                                                                        // 392
            var options = {};                                                                                          // 393
            var redac = Meteor.users.findOne({                                                                         // 394
                _id: Meteor.user()._id                                                                                 // 394
            }); // Generate the JSON like so:                                                                          // 394
                                                                                                                       //
            var workbookJson = excel.utils.sheet_to_json(sheet, options); //console.dir(workbookJson);                 // 397
                                                                                                                       //
            var query = "insert into exp.regdispo (date_depot_treso,date_sort_treso,date_depot_sign,date_recep_sign_reg,date_retrait_reg,redac,statut_reg_retirer,wnupo,wnrgt,MNTGT,nom_beneficiaire,domaine,Num_envoi,cheque,MRGGT,banque,Comments) values (:ddt,:dst,:dds,:drsr,:drr,:r,:srr,:p,:rgt,:mnt,:nb,:dom,:nenv,:c,:mrggt,:ban,:com)";
            workbookJson.map(function (e, i) {                                                                         // 400
                console.log("in the loop");                                                                            // 401
                                                                                                                       //
                if (!e.DOMAINE) {                                                                                      // 402
                    throw new Meteor.Error("bad-coderej", "Veuillez vérifier la ligne " + (i + 2) + " du fichier des règlements manuels.le domaine n'est pas renseigné.");
                    return;                                                                                            // 404
                }                                                                                                      // 405
                                                                                                                       //
                if (e.MODE_REGLEMENT == 'C' && (e.CHEQUE == "" || isNaN(e.CHEQUE))) {                                  // 406
                    throw new Meteor.Error("bad-coderej", "Veuillez vérifier la ligne " + (i + 2) + " du fichier des règlements manuels.le numéro de chèque est mal renseigné.");
                    return;                                                                                            // 408
                }                                                                                                      // 409
                                                                                                                       //
                if (e.MODE_REGLEMENT == 'B' && (e.ENVOI == "" || isNaN(e.ENVOI))) {                                    // 410
                    throw new Meteor.Error("bad-coderej", "Veuillez vérifier la ligne " + (i + 2) + " du fichier des règlements manuels.le numéro d'envoi est mal renseigné.");
                    return;                                                                                            // 412
                }                                                                                                      // 413
                                                                                                                       //
                if (e.PRESTATION == "" || !e.PRESTATION) {                                                             // 414
                    throw new Meteor.Error("bad-coderej", "Veuillez vérifier la ligne " + (i + 2) + " du fichier des règlements manuels.le champs PRESTATION n'est pas renseigné.");
                    return;                                                                                            // 416
                } /*if(e.REGLEMENT!='88888' ||parseInt(e.REGLEMENT)!=88888 ){                                          // 417
                      throw new Meteor.Error("bad-coderej","Veuillez vérifier la ligne "+(i+2)+" du fichier des règlements manuels.le numéro de reglement doit être 88888.");
                      return;                                                                                          //
                  }*/                                                                                                  //
                                                                                                                       //
                if (isNaN(e.POLICE)) {                                                                                 // 422
                    throw new Meteor.Error("bad-coderej", "Veuillez vérifier la ligne " + (i + 2) + " du fichier des règlements manuels.le numéro de police est mal renseigné.");
                    return;                                                                                            // 424
                }                                                                                                      // 425
                                                                                                                       //
                if (isNaN(e.MONTANT)) {                                                                                // 426
                    throw new Meteor.Error("bad-coderej", "Veuillez vérifier la ligne " + (i + 2) + " du fichier des règlements manuels.le numéro de police est mal renseigné.");
                    return;                                                                                            // 428
                }                                                                                                      // 429
                                                                                                                       //
                var statut = "EN COURS";                                                                               // 430
                                                                                                                       //
                if (e.DATE_ENTREE_TRESO) {                                                                             // 431
                    statut = "A LA TRESO";                                                                             // 432
                }                                                                                                      // 433
                                                                                                                       //
                if (e.DATE_SORTIE_TRESO) {                                                                             // 434
                    statut = "SORTIE DE TRESO";                                                                        // 435
                }                                                                                                      // 436
                                                                                                                       //
                if (e.DATE_ENTREE_SIGNATURE) {                                                                         // 437
                    statut = "A LA SIGNATURE";                                                                         // 438
                }                                                                                                      // 439
                                                                                                                       //
                if (e.DATE_SORTIE_SIGNATURE) {                                                                         // 440
                    statut = "PRET";                                                                                   // 441
                }                                                                                                      // 442
                                                                                                                       //
                if (e.DATE_RETRAIT) {                                                                                  // 443
                    statut = "SORTIE";                                                                                 // 444
                }                                                                                                      // 445
                                                                                                                       //
                Historique.insert({                                                                                    // 446
                    dateConnexion: new Date(),                                                                         // 447
                    heure: moment(Date.now()).format("HH:mm:ss"),                                                      // 448
                    actions: "Insertion des reglements manuel",                                                        // 449
                    par: redac.codeRedac                                                                               // 450
                });                                                                                                    // 446
                DBSQLSERVER.query(query, {                                                                             // 452
                    replacements: {                                                                                    // 453
                        ddt: e.DATE_ENTREE_TRESO ? moment(frenchDateToEn(e.DATE_ENTREE_TRESO)).format("YYYY-MM-DD") : null,
                        dst: e.DATE_SORTIE_TRESO ? moment(frenchDateToEn(e.DATE_SORTIE_TRESO)).format("YYYY-MM-DD") : null,
                        dds: e.DATE_ENTREE_SIGNATURE ? moment(frenchDateToEn(e.DATE_ENTREE_SIGNATURE)).format("YYYY-MM-DD") : null,
                        drsr: e.DATE_SORTIE_SIGNATURE ? moment(frenchDateToEn(e.DATE_SORTIE_SIGNATURE)).format("YYYY-MM-DD") : null,
                        drr: e.DATE_RETRAIT ? moment(frenchDateToEn(e.DATE_RETRAIT)).format("YYYY-MM-DD") : null,      // 459
                        r: redac.codeRedac,                                                                            // 460
                        srr: statut,                                                                                   // 461
                        p: e.POLICE,                                                                                   // 462
                        rgt: e.REGLEMENT,                                                                              // 463
                        mnt: e.MONTANT,                                                                                // 464
                        nb: e.BENEFICIAIRE,                                                                            // 465
                        dom: e.DOMAINE,                                                                                // 466
                        nenv: e.ENVOI ? parseInt(e.ENVOI) : null,                                                      // 467
                        c: e.CHEQUE ? parseInt(e.CHEQUE) : null,                                                       // 468
                        mrggt: e.MODE_REGLEMENT,                                                                       // 469
                        ban: e.BANQUE ? e.BANQUE : null,                                                               // 470
                        com: e.COMMENTAIRE + '%MAN%$' + e.PRESTATION + '!'                                             // 471
                    },                                                                                                 // 453
                    type: DBSQLSERVER.QueryTypes.INSERT                                                                // 473
                }).catch(function (err) {                                                                              // 452
                    console.log(err);                                                                                  // 475
                    throw new Meteor.Error("bad-coderej", "Une erreur est survenue lors de la mise à jour veuillez vérifier votre fichier");
                    return err.reason;                                                                                 // 477
                });                                                                                                    // 478
            });                                                                                                        // 479
        },                                                                                                             // 484
        updateDispos: function (values, rgtArray, numenv) {                                                            // 485
            //mise a jour groupee des reglement                                                                        // 486
            console.log("numenv est " + numenv);                                                                       // 487
            var prom = void 0;                                                                                         // 488
            var query = void 0;                                                                                        // 489
            var comment = void 0;                                                                                      // 490
            var redac = Meteor.users.findOne({                                                                         // 491
                _id: Meteor.user()._id                                                                                 // 491
            }); //console.log(typeof values.date_sort_treso);                                                          // 491
                                                                                                                       //
            switch (values.choixForm) {                                                                                // 493
                case "MODIFIER":                                                                                       // 494
                    var statut = "EN COURS";                                                                           // 495
                                                                                                                       //
                    if (values.date_depot_treso) {                                                                     // 496
                        statut = "A LA TRESO";                                                                         // 497
                    }                                                                                                  // 498
                                                                                                                       //
                    if (values.date_sort_treso) {                                                                      // 499
                        statut = "SORTIE DE TRESO";                                                                    // 500
                    }                                                                                                  // 501
                                                                                                                       //
                    if (values.date_depot_sign) {                                                                      // 502
                        statut = "A LA SIGNATURE";                                                                     // 503
                    }                                                                                                  // 504
                                                                                                                       //
                    if (values.date_recep_sign_reg) {                                                                  // 505
                        statut = "PRET";                                                                               // 506
                    }                                                                                                  // 507
                                                                                                                       //
                    if (values.date_retrait_reg) {                                                                     // 508
                        statut = "SORTIE";                                                                             // 509
                    } /*if(values.delreg){                                                                             // 510
                          console.log("contents of delreg");                                                           //
                          console.dir(values.delreg);                                                                  //
                          var rgtEx = values.delreg.match(/\d+/g).map(Number);                                         //
                          console.log("les rgt a exclure sont:");                                                      //
                          console.dir(rgtEx);                                                                          //
                          query="and wnrgt not in (";                                                                  //
                          rgtEx.map((e,i)=>{                                                                           //
                           if(i==rgtEx.length-1){                                                                      //
                               query+=e+')';                                                                           //
                           }else{                                                                                      //
                               query+=e+',';                                                                           //
                           }                                                                                           //
                          });                                                                                          //
                          console.log(query);                                                                          //
                          //return;                                                                                    //
                      }*/                                                                                              //
                                                                                                                       //
                    if (numenv) {                                                                                      // 528
                        query = "update exp.regdispo set date_depot_treso=:ddt, date_sort_treso=:dst, date_depot_sign=:dds,date_recep_sign_reg=:drsr,date_retrait_reg=:drr,redac=:r,statut_reg_retirer=:srr";
                        var cdr = "";                                                                                  // 530
                                                                                                                       //
                        if (values.coderej && values.coderej != "") {                                                  // 531
                            if (typeof parseInt(values.coderej, 10) != "number") {                                     // 532
                                throw new Meteor.Error("bad-coderej", "Veuillez re verifier le code rejet renseigné.Seulement les nombres sont acceptés.");
                            }                                                                                          // 535
                                                                                                                       //
                            query += ",Comments=:cdr";                                                                 // 536
                        }                                                                                              // 537
                                                                                                                       //
                        query += " where Num_envoi=:n";                                                                // 538
                                                                                                                       //
                        if (values.delreg) {                                                                           // 539
                            var rgtEx = values.delreg.match(/\d+/g).map(Number);                                       // 540
                            query += "and wnrgt not in (";                                                             // 541
                            rgtEx.map(function (e, i) {                                                                // 542
                                if (i == rgtEx.length - 1) {                                                           // 543
                                    query += e + ')';                                                                  // 544
                                } else {                                                                               // 545
                                    query += e + ',';                                                                  // 546
                                }                                                                                      // 547
                            });                                                                                        // 548
                            console.log(query); // query+="and wnrgt not in ()";                                       // 549
                        }                                                                                              // 551
                                                                                                                       //
                        Historique.insert({                                                                            // 552
                            dateConnexion: new Date(),                                                                 // 553
                            heure: moment(Date.now()).format("HH:mm:ss"),                                              // 554
                            actions: "Mise a jour de date sur les reglements de l'envoi " + numenv,                    // 555
                            par: redac.codeRedac                                                                       // 556
                        });                                                                                            // 552
                        DBSQLSERVER.query(query, {                                                                     // 558
                            replacements: {                                                                            // 559
                                ddt: values.date_depot_treso ? moment(values.date_depot_treso).format("YYYY-MM-DD") : null,
                                dst: values.date_sort_treso ? moment(values.date_sort_treso).format("YYYY-MM-DD") : null,
                                dds: values.date_depot_sign ? moment(values.date_depot_sign).format("YYYY-MM-DD") : null,
                                drsr: values.date_recep_sign_reg ? moment(values.date_recep_sign_reg).format("YYYY-MM-DD") : null,
                                drr: values.date_retrait_reg ? moment(values.date_retrait_reg).format("YYYY-MM-DD") : null,
                                r: redac.codeRedac,                                                                    // 566
                                srr: statut,                                                                           // 567
                                cdr: values.coderej ? values.coderej : '',                                             // 568
                                n: numenv                                                                              // 569
                            },                                                                                         // 559
                            type: DBSQLSERVER.QueryTypes.UPDATE                                                        // 571
                        }).catch(function (err) {                                                                      // 558
                            console.log(err);                                                                          // 573
                            return err.reason;                                                                         // 574
                        });                                                                                            // 575
                    } else {                                                                                           // 576
                        query = "update exp.regdispo set date_depot_treso=:ddt, date_sort_treso=:dst, date_depot_sign=:dds,date_recep_sign_reg=:drsr,date_retrait_reg=:drr,redac=:r,statut_reg_retirer=:srr where wnupo=:wnupo and wnrgt=:wnrgt and domaine=:d ";
                                                                                                                       //
                        if (values.delreg) {                                                                           // 578
                            var rgtEx = values.delreg.match(/\d+/g).map(Number);                                       // 579
                            query += "and wnrgt not in (";                                                             // 580
                            rgtEx.map(function (e, i) {                                                                // 581
                                if (i == rgtEx.length - 1) {                                                           // 582
                                    query += e + ')';                                                                  // 583
                                } else {                                                                               // 584
                                    query += e + ',';                                                                  // 585
                                }                                                                                      // 586
                            });                                                                                        // 587
                            console.log(query); // query+="and wnrgt not in ()";                                       // 588
                        }                                                                                              // 590
                                                                                                                       //
                        rgtArray.forEach(function (e, i, arr) {                                                        // 591
                            console.log("ligne de rgt: " + i);                                                         // 592
                            Historique.insert({                                                                        // 593
                                dateConnexion: new Date(),                                                             // 594
                                heure: moment(Date.now()).format("HH:mm:ss"),                                          // 595
                                actions: "Mise a jour de date sur le reglement " + e.wnrgt,                            // 596
                                par: redac.codeRedac                                                                   // 597
                            });                                                                                        // 593
                            prom = Promise.await(dispoSQL.findOne({                                                    // 599
                                where: {                                                                               // 600
                                    wnrgt: e.wnrgt,                                                                    // 601
                                    wnupo: e.wnupo,                                                                    // 602
                                    domaine: e.domaine                                                                 // 603
                                }                                                                                      // 600
                            }).then(function (p) {                                                                     // 599
                                //console.dir(e);                                                                      // 605
                                //Verifications sur les dates                                                          // 606
                                if (e && e.infoSurRgt.length) {                                                        // 607
                                    if (!values.date_depot_treso && e.date_depot_treso) values.date_depot_treso = e.date_depot_treso;
                                    if (!values.date_depot_sign && e.date_depot_sign) values.date_depot_sign = e.date_depot_sign;
                                    if (!values.date_sort_treso && e.date_sort_treso) values.date_sort_treso = e.date_sort_treso;
                                    if (!values.date_recep_sign_reg && e.date_recep_sign_reg) values.date_recep_sign_reg = e.date_recep_sign_reg;
                                    if (!values.date_retrait_reg && e.date_retrait_reg) values.date_retrait_reg = e.date_retrait_reg;
                                                                                                                       //
                                    if (values.date_depot_treso && moment(values.date_depot_treso).isBefore(e.infoSurRgt[0].DATE_SURVENANCE_SINISTRE) && moment(values.date_depot_treso).isBefore(e.infoSurRgt[0].DATE_RECEPTION)) {
                                        throw new Meteor.Error("bad-date", "Veuillez re verifier la date de dépot à la trésorerie du règlement " + e.wnrgt + " . Elle ne peut être avant la date de survenance du sinistre ou la date de réception du règlement");
                                    } else if (values.date_depot_treso && (values.date_sort_treso || values.date_depot_sign || values.date_recep_sign_reg || values.date_retrait_reg) && (values.date_sort_treso ? moment(values.date_depot_treso).diff(moment(values.date_sort_treso)) > 0 : false || values.date_depot_sign ? moment(values.date_depot_treso).diff(moment(values.date_depot_sign)) > 0 : false || values.date_recep_sign_reg ? moment(values.date_depot_treso).diff(moment(values.date_recep_sign_reg)) > 0 : false || values.date_retrait_reg ? moment(values.date_depot_treso).diff(moment(values.date_retrait_reg)) > 0 : false)) {
                                        throw new Meteor.Error("bad-date", "Veuillez re verifier la date de dépot à la trésorerie du règlement " + e.wnrgt + " . Elle ne peut être après la date de sortie de trésorerie ou les dates de depot et retour de signature ou encore la date du retrait du règlement 1");
                                    } else if (values.date_sort_treso // && moment(e.date_sort_treso).isBefore(e.infoSurRgt[0].DATE_REGLEMENT.replace(/\//g,"-"))
                                    && moment(values.date_sort_treso).isBefore(e.infoSurRgt[0].DATE_SURVENANCE_SINISTRE) && moment(values.date_sort_treso).isBefore(e.infoSurRgt[0].DATE_RECEPTION)) {
                                        throw new Meteor.Error("bad-date", "Veuillez re verifier la date de sortie de trésorerie du règlement " + e.wnrgt + " .Elle ne peut être avant la date de survenance du sinistre ou la date de réception du règlement");
                                    } /*  else if(p.date_depot_treso && moment(values.date_sort_treso).isBefore(moment(p.date_depot_treso).format("YYYY-MM-DD"))){
                                            throw new Meteor.Error("bad-date","Veuillez re verifier la date de sortie de trésorerie du règlement "+e.wnrgt+" .Elle ne peut être avant la date de dépot à la trésorerie que vous avez précédemment saisie.");
                                        }*/else if (values.date_sort_treso && (values.date_depot_treso || values.date_depot_sign || values.date_recep_sign_reg || values.date_retrait_reg) && (values.date_depot_treso ? moment(values.date_sort_treso).diff(moment(values.date_depot_treso)) < 0 : false || values.date_depot_sign ? moment(values.date_sort_treso).diff(moment(values.date_depot_sign)) > 0 : false || values.date_recep_sign_reg ? moment(values.date_sort_treso).diff(moment(values.date_recep_sign_reg)) > 0 : false || values.date_retrait_reg ? moment(values.date_sort_treso).diff(moment(values.date_retrait_reg)) > 0 : false)) {
                                            throw new Meteor.Error("bad-date", "Veuillez re verifier la date de sortie de trésorerie du règlement " + e.wnrgt + " .Elle ne peut être avant la date de dépot à la trésorerie ou après les dates de depot et retour de signature ou encore la date du retrait du règlement 2");
                                        } else if (values.date_depot_sign && moment(values.date_depot_sign).isBefore(e.infoSurRgt[0].DATE_RECEPTION) && moment(values.date_depot_sign).isBefore(e.infoSurRgt[0].DATE_SURVENANCE_SINISTRE)) {
                                            throw new Meteor.Error("bad-date", "Veuillez re verifier la date de dépot pour signature du règlement " + e.wnrgt + " .Elle ne peut être avant la date de survenance du sinistre ou la date de réception du règlement ");
                                        } /*else if(moment(values.date_depot_sign).isBefore(moment(p.date_depot_treso).format("YYYY-MM-DD"))
                                              ||moment(values.date_depot_sign).isBefore(moment(p.date_sort_treso).format("YYYY-MM-DD"))){
                                                  throw new Meteor.Error("bad-date","Veuillez re verifier la date de dépot pour signature du règlement "+e.wnrgt+" . Elle ne peut être avant la date de dépot à la trésorerie ou avant la date de sortie de trésorerie qui ont été saisies précédemment.");
                                              }*/else if (values.date_depot_sign && (values.date_depot_treso || values.date_sort_treso || values.date_recep_sign_reg || values.date_retrait_reg) && (values.date_depot_treso ? moment(values.date_depot_sign).diff(moment(values.date_depot_treso)) < 0 : false || values.date_sort_treso ? moment(values.date_depot_sign).diff(moment(values.date_sort_treso)) < 0 : false || values.date_recep_sign_reg ? moment(values.date_depot_sign).diff(moment(values.date_recep_sign_reg)) > 0 : false || values.date_retrait_reg ? moment(values.date_depot_sign).diff(moment(values.date_retrait_reg)) > 0 : false)) {
                                                throw new Meteor.Error("bad-date", "Veuillez re verifier la date de dépot pour signature du règlement " + e.wnrgt + " .Elle ne peut être avant la date de dépot à la trésorerie ou la date de sortie de la trésorerie ,ni après la date de retour de signature ou encore la date du retrait du règlement");
                                            } else if (values.date_recep_sign_reg && moment(values.date_recep_sign_reg).isBefore(e.infoSurRgt[0].DATE_RECEPTION) && moment(values.date_recep_sign_reg).isBefore(e.infoSurRgt[0].DATE_SURVENANCE_SINISTRE)) {
                                                throw new Meteor.Error("bad-date", "Veuillez re verifier la date de retour de signature du règlement " + e.wnrgt + " .Elle ne peut être avant la date de survenance du sinistre ou la date de réception du règlement ");
                                            } /*else if(moment(values.date_recep_sign_reg).isBefore(moment(p.date_depot_treso).format("YYYY-MM-DD"))
                                                  ||moment(values.date_recep_sign_reg).isBefore(moment(p.date_sort_treso).format("YYYY-MM-DD"))
                                                  ||moment(values.date_recep_sign_reg).isBefore(moment(p.date_depot_sign).format("YYYY-MM-DD"))){
                                                      throw new Meteor.Error("bad-date","Veuillez re verifier la date de retour de signature du règlement "+e.wnrgt+" . Elle ne peut être avant la date de dépot à la trésorerie, la date de sortie de trésorerie, la date de dépot pour signature.");    
                                                  }*/else if (values.date_recep_sign_reg && (values.date_depot_treso || values.date_sort_treso || values.date_depot_sign || values.date_retrait_reg) && (values.date_depot_treso ? moment(values.date_recep_sign_reg).diff(moment(values.date_depot_treso)) < 0 : false || values.date_sort_treso ? moment(values.date_recep_sign_reg).diff(moment(values.date_sort_treso)) < 0 : false || values.date_depot_sign ? moment(values.date_recep_sign_reg).diff(moment(values.date_depot_sign)) < 0 : false || values.date_retrait_reg ? moment(values.date_recep_sign_reg).diff(moment(values.date_retrait_reg)) > 0 : false)) {
                                                    throw new Meteor.Error("bad-date", "Veuillez re verifier la date de retour de signature du règlement " + e.wnrgt + " . Elle ne peut être avant la date de dépot à la trésorerie,la date de sortie de la trésorerie et la date de dépot à la signature ,ni après la date du retrait du règlement 4");
                                                } else if (values.date_retrait_reg && moment(values.date_retrait_reg).isBefore(e.infoSurRgt[0].DATE_RECEPTION) && moment(values.date_retrait_reg).isBefore(e.infoSurRgt[0].DATE_SURVENANCE_SINISTRE)) {
                                                    throw new Meteor.Error("bad-date", "Veuillez re verifier la date de retrait du règlement du règlement " + e.wnrgt + " . Elle ne peut être avant la date de survenance du sinistre ou la date de réception du règlement.");
                                                } /*else if(moment(values.date_retrait_reg).isBefore(moment(p.date_depot_treso).format("YYYY-MM-DD"))
                                                      ||moment(values.date_retrait_reg).isBefore(moment(p.date_sort_treso).format("YYYY-MM-DD"))
                                                      ||moment(values.date_retrait_reg).isBefore(moment(p.date_depot_sign).format("YYYY-MM-DD"))
                                                      ||moment(values.date_retrait_reg).isBefore(moment(p.date_recep_sign_reg).format("YYYY-MM-DD"))){
                                                          throw new Meteor.Error("bad-date","Veuillez re verifier la date de retrait du règlement "+e.wnrgt+" . Elle ne peut être avant la date de dépot à la trésorerie, la date de sortie de trésorerie, la date de dépot pour signature et la date de retour de signature.");
                                                                                                                       //
                                                      }*/else if (values.date_retrait_reg && (values.date_depot_treso || values.date_sort_treso || values.date_depot_sign || values.date_recep_sign_reg) && (values.date_depot_treso ? moment(values.date_retrait_reg).diff(moment(values.date_depot_treso)) < 0 : false || values.date_depot_treso ? moment(values.date_retrait_reg).diff(moment(values.date_sort_treso)) < 0 : false || values.date_depot_treso ? moment(values.date_retrait_reg).diff(moment(values.date_depot_sign)) < 0 : false || values.date_depot_treso ? moment(values.date_retrait_reg).diff(moment(values.date_recep_sign_reg)) < 0 : false)) {
                                                        throw new Meteor.Error("bad-date", "Veuillez re verifier la date de retrait du règlement " + e.wnrgt + " . Elle ne peut être avant la date de dépot à la trésorerie,la date de sortie de la trésorerie,la date de dépot à la signature et la date de retour de signature 5");
                                                    } else {                                                           // 726
                                                        DBSQLSERVER.query(query, {                                     // 729
                                                            replacements: {                                            // 730
                                                                wnrgt: e.wnrgt,                                        // 731
                                                                wnupo: e.wnupo,                                        // 732
                                                                d: e.domaine,                                          // 733
                                                                ddt: values.date_depot_treso ? moment(values.date_depot_treso).format("YYYY-MM-DD") : e.date_depot_treso ? moment(e.date_depot_treso).format("YYYY-MM-DD") : null,
                                                                dst: values.date_sort_treso ? moment(values.date_sort_treso).format("YYYY-MM-DD") : e.date_sort_treso ? moment(e.date_sort_treso).format("YYYY-MM-DD") : null,
                                                                dds: values.date_depot_sign ? moment(values.date_depot_sign).format("YYYY-MM-DD") : e.date_depot_sign ? moment(e.date_depot_sign).format("YYYY-MM-DD") : null,
                                                                drsr: values.date_recep_sign_reg ? moment(values.date_recep_sign_reg).format("YYYY-MM-DD") : e.date_recep_sign_reg ? moment(e.date_recep_sign_reg).format("YYYY-MM-DD") : null,
                                                                drr: values.date_retrait_reg ? moment(values.date_retrait_reg).format("YYYY-MM-DD") : e.date_retrait_reg ? moment(e.date_retrait_reg).format("YYYY-MM-DD") : null,
                                                                r: redac.codeRedac,                                    // 739
                                                                srr: statut                                            // 740
                                                            },                                                         // 730
                                                            type: DBSQLSERVER.QueryTypes.UPDATE                        // 742
                                                        }).catch(function (err) {                                      // 729
                                                            console.log(err);                                          // 744
                                                            return err.reason;                                         // 745
                                                        });                                                            // 746
                                                    }                                                                  // 748
                                } else {                                                                               // 749
                                    throw new Meteor.Error("bad-date", "Veuillez re verifier les dates de survenance du sinistre et date de réception de la demande du règlement " + e.wnrgt + "; il se pourrait que l'une d'entre elles soit mal renseignée.");
                                }                                                                                      // 752
                            }));                                                                                       // 754
                        });                                                                                            // 757
                        return prom;                                                                                   // 758
                    }                                                                                                  // 759
                                                                                                                       //
                    break;                                                                                             // 763
                                                                                                                       //
                case "MODIFIERDV":                                                                                     // 764
                    query = "update exp.regdispo set dateRDV=:rdv where wnupo=:wnupo and wnrgt=:wnrgt and domaine=:d ";
                                                                                                                       //
                    if (!moment(values.dateRDV).isValid()) {                                                           // 767
                        throw new Meteor.Error("bad-date", "Veuillez re verifier la date de rendez-vous du règlement " + e.wnrgt + " . Elle n'est pas valide");
                    }                                                                                                  // 770
                                                                                                                       //
                    rgtArray.forEach(function (e, i, arr) {                                                            // 772
                        Historique.insert({                                                                            // 773
                            dateConnexion: new Date(),                                                                 // 774
                            heure: moment(Date.now()).format("HH:mm:ss"),                                              // 775
                            actions: "Mise a jour de date RDV sur le reglement " + e.wnrgt,                            // 776
                            par: redac.codeRedac                                                                       // 777
                        });                                                                                            // 773
                        console.log("ligne de rgt: " + i);                                                             // 779
                        prom = Promise.await(dispoSQL.findOne({                                                        // 780
                            where: {                                                                                   // 781
                                wnrgt: e.wnrgt,                                                                        // 782
                                wnupo: e.wnupo,                                                                        // 783
                                domaine: e.domaine                                                                     // 784
                            }                                                                                          // 781
                        }).then(function (p) {                                                                         // 780
                            DBSQLSERVER.query(query, {                                                                 // 786
                                replacements: {                                                                        // 787
                                    wnrgt: e.wnrgt,                                                                    // 788
                                    wnupo: e.wnupo,                                                                    // 789
                                    d: e.domaine,                                                                      // 790
                                    rdv: values.dateRDV                                                                // 791
                                },                                                                                     // 787
                                type: DBSQLSERVER.QueryTypes.UPDATE                                                    // 793
                            }).catch(function (err) {                                                                  // 786
                                console.log(err);                                                                      // 795
                                return err.reason;                                                                     // 796
                            });                                                                                        // 797
                        }));                                                                                           // 798
                    });                                                                                                // 799
                    return prom;                                                                                       // 800
                    break;                                                                                             // 801
                                                                                                                       //
                case "REFUSER":                                                                                        // 802
                    query = "update exp.regdispo set statut_reg_retirer=:stat, Comments=:com where wnupo=:wnupo and wnrgt=:wnrgt and domaine=:d ";
                    comment = values.comments === "" || !values.comments ? "Refuser par le gestionnaire " + redac.codeRedac : values.comments;
                    rgtArray.forEach(function (e, i, arr) {                                                            // 805
                        console.log("ligne de rgt: " + i);                                                             // 806
                        Historique.insert({                                                                            // 807
                            dateConnexion: new Date(),                                                                 // 808
                            heure: moment(Date.now()).format("HH:mm:ss"),                                              // 809
                            actions: "Refus du reglement " + e.wnrgt,                                                  // 810
                            par: redac.codeRedac                                                                       // 811
                        });                                                                                            // 807
                        prom = Promise.await(dispoSQL.findOne({                                                        // 813
                            where: {                                                                                   // 814
                                wnrgt: e.wnrgt,                                                                        // 815
                                wnupo: e.wnupo,                                                                        // 816
                                domaine: e.domaine                                                                     // 817
                            }                                                                                          // 814
                        }).then(function (p) {                                                                         // 813
                            DBSQLSERVER.query(query, {                                                                 // 820
                                replacements: {                                                                        // 821
                                    wnrgt: e.wnrgt,                                                                    // 822
                                    wnupo: e.wnupo,                                                                    // 823
                                    d: e.domaine,                                                                      // 824
                                    stat: "REFUSER",                                                                   // 825
                                    com: comment                                                                       // 826
                                },                                                                                     // 821
                                type: DBSQLSERVER.QueryTypes.UPDATE                                                    // 828
                            }).catch(function (err) {                                                                  // 820
                                console.log(err);                                                                      // 830
                                return err.reason;                                                                     // 831
                            });                                                                                        // 832
                        }));                                                                                           // 833
                    });                                                                                                // 834
                    return prom;                                                                                       // 835
                    break;                                                                                             // 836
                                                                                                                       //
                case "ANNULER":                                                                                        // 837
                    query = "update exp.regdispo set statut_reg_retirer=:stat,Comments=:com where wnupo=:wnupo and wnrgt=:wnrgt and domaine=:d ";
                    comment = values.comments === "" || !values.comments ? "Annuler par le gestionnaire " + redac.codeRedac : values.comments;
                    rgtArray.forEach(function (e, i, arr) {                                                            // 840
                        console.log("ligne de rgt: " + i);                                                             // 841
                        Historique.insert({                                                                            // 842
                            dateConnexion: new Date(),                                                                 // 843
                            heure: moment(Date.now()).format("HH:mm:ss"),                                              // 844
                            actions: "Annulation du reglement " + e.wnrgt,                                             // 845
                            par: redac.codeRedac                                                                       // 846
                        });                                                                                            // 842
                        prom = Promise.await(dispoSQL.findOne({                                                        // 848
                            where: {                                                                                   // 849
                                wnrgt: e.wnrgt,                                                                        // 850
                                wnupo: e.wnupo,                                                                        // 851
                                domaine: e.domaine                                                                     // 852
                            }                                                                                          // 849
                        }).then(function (p) {                                                                         // 848
                            DBSQLSERVER.query(query, {                                                                 // 855
                                replacements: {                                                                        // 856
                                    wnrgt: e.wnrgt,                                                                    // 857
                                    wnupo: e.wnupo,                                                                    // 858
                                    d: e.domaine,                                                                      // 859
                                    stat: "ANNULER",                                                                   // 860
                                    com: comment                                                                       // 861
                                },                                                                                     // 856
                                type: DBSQLSERVER.QueryTypes.UPDATE                                                    // 863
                            }).catch(function (err) {                                                                  // 855
                                console.log(err);                                                                      // 865
                                return err.reason;                                                                     // 866
                            });                                                                                        // 867
                        }));                                                                                           // 868
                    });                                                                                                // 869
                    return prom;                                                                                       // 870
                    break;                                                                                             // 871
                                                                                                                       //
                default:                                                                                               // 872
                    throw new Meteor.Error("bad-date", "Veuillez re essayer");                                         // 873
                    break;                                                                                             // 874
            }                                                                                                          // 493
        },                                                                                                             // 877
        updateDispo: function (newval, initialValues) {                                                                // 878
            console.dir(newval);                                                                                       // 879
            var statut = "EN COURS";                                                                                   // 880
            newval.date_depot_treso = newval.date_depot_treso ? newval.date_depot_treso : initialValues.date_depot_treso ? initialValues.date_depot_treso : null;
            newval.date_sort_treso = newval.date_sort_treso ? newval.date_sort_treso : initialValues.date_sort_treso ? initialValues.date_sort_treso : null;
            newval.date_depot_sign = newval.date_depot_sign ? newval.date_depot_sign : initialValues.date_depot_sign ? initialValues.date_depot_sign : null;
            newval.date_recep_sign_reg = newval.date_recep_sign_reg ? newval.date_recep_sign_reg : initialValues.date_recep_sign_reg ? initialValues.date_recep_sign_reg : null;
            newval.date_retrait_reg = newval.date_retrait_reg ? newval.date_retrait_reg : initialValues.date_retrait_reg ? initialValues.date_retrait_reg : null; /*let statut=!newval.statut?initialValues.statut_reg_retirer:"EN COURS";
                                                                                                                                                                  newval.statut=newval.date_retrait_reg && !newval.date_recep_sign_reg?"SORTIE":newval.date_recep_sign_reg && !newval.date_retrait_reg?"PRET":"EN COURS";*/
                                                                                                                       //
            if (newval.date_depot_treso) {                                                                             // 888
                statut = "A LA TRESO";                                                                                 // 889
            }                                                                                                          // 890
                                                                                                                       //
            if (newval.date_sort_treso) {                                                                              // 891
                statut = "SORTIE DE TRESO";                                                                            // 892
            }                                                                                                          // 893
                                                                                                                       //
            if (newval.date_depot_sign) {                                                                              // 894
                statut = "A LA SIGNATURE";                                                                             // 895
            }                                                                                                          // 896
                                                                                                                       //
            if (newval.date_recep_sign_reg) {                                                                          // 897
                statut = "PRET";                                                                                       // 898
            }                                                                                                          // 899
                                                                                                                       //
            if (newval.date_retrait_reg) {                                                                             // 900
                statut = "SORTIE";                                                                                     // 901
            }                                                                                                          // 902
                                                                                                                       //
            var redac = Meteor.users.findOne({                                                                         // 903
                _id: Meteor.user()._id                                                                                 // 903
            });                                                                                                        // 903
            var query = "update exp.regdispo set date_depot_treso=:ddt, date_sort_treso=:dst, date_depot_sign=:dds,date_recep_sign_reg=:drsr,date_retrait_reg=:drr,redac=:r,statut_reg_retirer=:srr where wnupo=:wnupo and wnrgt=:wnrgt and domaine=:d ";
            var res = DBSQLSERVER.query(query, {                                                                       // 905
                replacements: {                                                                                        // 906
                    wnrgt: newval.wnrgt,                                                                               // 907
                    wnupo: newval.wnupo,                                                                               // 908
                    d: newval.domaine,                                                                                 // 909
                    ddt: newval.date_depot_treso,                                                                      // 910
                    dst: newval.date_sort_treso,                                                                       // 911
                    dds: newval.date_depot_sign,                                                                       // 912
                    drsr: newval.date_recep_sign_reg,                                                                  // 913
                    drr: newval.date_retrait_reg,                                                                      // 914
                    r: redac.codeRedac,                                                                                // 915
                    srr: statut                                                                                        // 916
                },                                                                                                     // 906
                type: DBSQLSERVER.QueryTypes.UPDATE                                                                    // 918
            }).catch(function (err) {                                                                                  // 905
                console.log(err);                                                                                      // 920
                return err.reason;                                                                                     // 921
            }); /*dispoSQL.findOne({where:{wnrgt:newval.wnrgt,domaine:newval.domaine}}).then((e)=>{                    // 922
                    e.update({                                                                                         //
                        date_depot_treso:newval.date_depot_treso,                                                      //
                        date_sort_treso:newval.date_sort_treso,                                                        //
                        date_depot_sign:newval.date_depot_sign,                                                        //
                        date_recep_sign_reg:newval.date_recep_sign_reg,                                                //
                        date_retrait_reg:newval.date_retrait_reg,                                                      //
                        redac:redac.codeRedac,                                                                         //
                        statut_reg_retirer:statut                                                                      //
                                                                                                                       //
                    }).catch((err)=>{                                                                                  //
                        console.log(err);                                                                              //
                        return err.reason;                                                                             //
                    });                                                                                                //
                });*/ ///////////////////////////                                                                      //
        },                                                                                                             // 939
        updateDisposBank: function (values, initialValues) {                                                           // 940
            if (initialValues.statut_reg_retirer == "SORTIE") {                                                        // 941
                var redac = Meteor.users.findOne({                                                                     // 942
                    _id: Meteor.user()._id                                                                             // 942
                });                                                                                                    // 942
                var query = "update exp.regdispo set ValBank=:v, CommentsBank=:c where wnupo=:wnupo and wnrgt=:wnrgt and domaine=:d ";
                Historique.insert({                                                                                    // 944
                    dateConnexion: new date(),                                                                         // 945
                    heure: moment(date.now()).format("HH:mm:ss"),                                                      // 946
                    actions: "Annulation du reglement " + e.wnrgt,                                                     // 947
                    par: redac.codeRedac                                                                               // 948
                });                                                                                                    // 944
                var res = DBSQLSERVER.query(query, {                                                                   // 950
                    replacements: {                                                                                    // 951
                        wnrgt: initialValues.wnrgt,                                                                    // 952
                        wnupo: initialValues.wnupo,                                                                    // 953
                        d: initialValues.domaine,                                                                      // 954
                        v: values.choixbank,                                                                           // 955
                        c: values.comment                                                                              // 956
                    },                                                                                                 // 951
                    type: DBSQLSERVER.QueryTypes.UPDATE                                                                // 958
                }).catch(function (err) {                                                                              // 950
                    console.log(err);                                                                                  // 960
                    return err.reason;                                                                                 // 961
                });                                                                                                    // 962
                pubsub.publish('rgtUpdated', {                                                                         // 963
                    reg: initialValues,                                                                                // 963
                    wnrgt: initialValues.wnrgt                                                                         // 963
                });                                                                                                    // 963
            } else {                                                                                                   // 964
                throw new Meteor.Error("access-error", "Vous ne pouvez pas modifier ce reglement. Veuillez contacter un administrateur");
            }                                                                                                          // 966
                                                                                                                       //
            console.dir(initialValues);                                                                                // 967
        },                                                                                                             // 968
        voirInfoReg: function (args) {                                                                                 // 969
            var query = "exec info_reg_dispo :numero_reg,:domaine ";                                                   // 970
            var res = DBSQLSERVER.query(query, {                                                                       // 971
                replacements: {                                                                                        // 972
                    numero_reg: args.wnrgt,                                                                            // 973
                    domaine: args.domaine                                                                              // 974
                },                                                                                                     // 972
                type: DBSQLSERVER.QueryTypes.SELECT                                                                    // 976
            });                                                                                                        // 971
            return res;                                                                                                // 978
        },                                                                                                             // 979
        maj_database: function () {                                                                                    // 980
            var query = "exec chargement_reg_module "; //ca charge les reglements dans la base                         // 981
                                                                                                                       //
            var r = DBSQLSERVER.query(query, {                                                                         // 984
                type: DBSQLSERVER.QueryTypes.INSERT                                                                    // 985
            });                                                                                                        // 984
            return r; // return res;                                                                                   // 987
        }                                                                                                              // 990
    } /* maj_dateRDV(toffset){                                                                                         // 20
           let inforegQ="exec info_reg_dispo :numero_reg,:domaine ";                                                   //
           let upQ="update exp.regdispo set dateRDV=:drdv where wnupo=:wnupo and wnrgt=:wnrgt and dateRDV IS NULL ";   //
            //On fait des modifs sur les champs dans la base comme le calcul de la date de RDV                         //
           let r=Promise.await(dispoSQL.findAll({attributes:{exclude:['id']},where:{                                   //
               dateRDV:{                                                                                               //
                   $eq:null                                                                                            //
               },                                                                                                      //
               $or:[                                                                                                   //
                   {                                                                                                   //
                       MRGGT:'C'                                                                                       //
                   },                                                                                                  //
                   {                                                                                                   //
                       MRGGT:'E'                                                                                       //
                   }                                                                                                   //
               ]                                                                                                       //
          },order:[['wnrgt','DESC']],offset:toffset,limit:25000}).then((res)=>{                                        //
              if(!res.length)return;                                                                                   //
                  let promises=[];                                                                                     //
                  let dispo;                                                                                           //
                  console.log("longueur de res "+res.length);                                                          //
                  res.forEach((r)=>{                                                                                   //
                      promises.push(                                                                                   //
                          PromiseB.all([                                                                               //
                          DBSQLSERVER.query(inforegQ,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})
                          ]).spread((infosurrgt)=>{                                                                    //
                              dispo=r.toJSON();                                                                        //
                              dispo.infoSurRgt=infosurrgt;                                                             //
                                                                                                                       //
                              return dispo;                                                                            //
                          })                                                                                           //
                      );                                                                                               //
                  });                                                                                                  //
                  return PromiseB.all(promises)                                                                        //
                                                                                                                       //
              }).then((dispos)=>{                                                                                      //
                  console.log("Les dispos completes sont: "+dispos.length)                                             //
                  let nd=dispos.map((e,i,arr)=>{                                                                       //
                      if(e.infoSurRgt.length>1){                                                                       //
                          let goodelem=e.infoSurRgt[0];                                                                //
                          //console.log("reglement "+e.wnrgt);                                                         //
                          //console.dir(e);                                                                            //
                          e.infoSurRgt=[];                                                                             //
                          e.infoSurRgt.push(goodelem);                                                                 //
                      }                                                                                                //
                      return e;                                                                                        //
                  });                                                                                                  //
                  console.log("longueur de nd "+nd.length);                                                            //
                  //On check et on calcule la date de RDV pour chaque reglement dont la dateRDV n'est pas a jour       //
                  nd.map((e,i,arr)=>{                                                                                  //
                      //console.log("type de Type sINISTRE: "+typeof e.infoSurRgt[0].TYPE_SINISTRE);                   //
                   let rdvDate;                                                                                        //
                   if(typeof e.infoSurRgt[0]!="undefined"||typeof e.infoSurRgt[0].TYPE_SINISTRE!="undefined" || e.infoSurRgt[0].TYPE_SINISTRE!= null ){
                       switch(e.infoSurRgt[0].TYPE_SINISTRE){                                                          //
                           case "RACHAT TOTAL":                                                                        //
                           let get4numbers=parseInt(e.wnupo.toString().substring(0,4),10);//juste pour avoir les 4 premier chiffres fuck
                               //la il ya deux cas celui des polices individuelles et des polices bancassurances       //
                               //INDIVIDUEL                                                                            //
                               if((get4numbers>1000 && get4numbers<4000)||(get4numbers>7900 &&get4numbers<8000)){      //
                                    rdvDate=moment(e.infoSurRgt[0].DATE_RECEPTION).add(60,'days');                     //
                                    console.log("date reception: "+e.infoSurRgt[0].DATE_RECEPTION+" date RDV: "+moment(rdvDate).format("YYYY-MM-DD"));
                               }                                                                                       //
                               //BANCASSURANCE                                                                         //
                               else if(get4numbers>7000 && get4numbers<7900){                                          //
                                   rdvDate=moment(e.infoSurRgt[0].DATE_RECEPTION).add(45,'days');                      //
                                   console.log("date reception: "+e.infoSurRgt[0].DATE_RECEPTION+" date RDV: "+moment(rdvDate).format("YYYY-MM-DD"));
                                     }                                                                                 //
                           break;                                                                                      //
                           case "RACHAT PARTIEL":                                                                      //
                           case "AVANCE":                                                                              //
                           rdvDate=moment(e.infoSurRgt[0].DATE_RECEPTION).add(21,'days');                              //
                           console.log("date reception: "+e.infoSurRgt[0].DATE_RECEPTION+" date RDV: "+moment(rdvDate).format("YYYY-MM-DD"));
                           break;                                                                                      //
                           default:                                                                                    //
                            rdvDate=null;                                                                              //
                           break;                                                                                      //
                          }                                                                                            //
                         /* RegUpdated.insert({                                                                        //
                              wasrg:e.wasrg,                                                                           //
                              wnrgt:e.wnrgt,                                                                           //
                              wnupo:e.wnupo                                                                            //
                          });                                                                                          //
                       let promises=[];                                                                                //
                       let dispo;                                                                                      //
                       console.log("valeur de la daterdv: "+rdvDate);                                                  //
                       let rD=moment(rdvDate,"YYYY-MM-DD",true);                                                       //
                       console.log(rD);                                                                                //
                       if(rD.isValid()){                                                                               //
                           promises.push(                                                                              //
                               PromiseB.all([                                                                          //
                               DBSQLSERVER.query(upQ,{ replacements:{drdv:rD.isValid()?rD.format("YYYY-MM-DD"):null,wnupo:e.wnupo,wnrgt:e.wnrgt},type:DBSQLSERVER.QueryTypes.UPDATE}).catch((err)=>{
                                   console.log(err);                                                                   //
                                   return err.reason;                                                                  //
                               })                                                                                      //
                               ])                                                                                      //
                           );                                                                                          //
                       }else{                                                                                          //
                           console.log("date rdv not valid erreur");                                                   //
                       }                                                                                               //
                   }else{                                                                                              //
                       console.log("erreur d'infomations infoSurRgt n'est pas fourni loop again");                     //
                   }                                                                                                   //
                                                                                                                       //
                                                                                                                       //
                  });                                                                                                  //
                   //return nd;                                                                                        //
              }));                                                                                                     //
              console.log("next round-------");                                                                        //
                    let o =toffset+25000;                                                                              //
                    console.log("valeur de o:"+o);                                                                     //
                                                                                                                       //
                                                                                                                       //
                   Meteor.call("maj_dateRDV",o);                                                                       //
                                                                                                                       //
                                                                                                                       //
       },*/);                                                                                                          //
});                                                                                                                    // 1110
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"main.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/main.js                                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var module1 = module;                                                                                                  // 1
var Meteor = void 0;                                                                                                   // 1
module1.watch(require("meteor/meteor"), {                                                                              // 1
    Meteor: function (v) {                                                                                             // 1
        Meteor = v;                                                                                                    // 1
    }                                                                                                                  // 1
}, 0);                                                                                                                 // 1
module1.watch(require("./graphql/graphqlServer"));                                                                     // 1
var publications = void 0;                                                                                             // 1
module1.watch(require("./publications/User.js"), {                                                                     // 1
    "default": function (v) {                                                                                          // 1
        publications = v;                                                                                              // 1
    }                                                                                                                  // 1
}, 1);                                                                                                                 // 1
var WhatsNewPub = void 0;                                                                                              // 1
module1.watch(require("./publications/WhatsNew.js"), {                                                                 // 1
    "default": function (v) {                                                                                          // 1
        WhatsNewPub = v;                                                                                               // 1
    }                                                                                                                  // 1
}, 2);                                                                                                                 // 1
var userSQL = void 0,                                                                                                  // 1
    dispoSQL = void 0,                                                                                                 // 1
    DBSQL = void 0,                                                                                                    // 1
    DBSQLSERVER = void 0;                                                                                              // 1
module1.watch(require("./graphql/connectors.js"), {                                                                    // 1
    userSQL: function (v) {                                                                                            // 1
        userSQL = v;                                                                                                   // 1
    },                                                                                                                 // 1
    dispoSQL: function (v) {                                                                                           // 1
        dispoSQL = v;                                                                                                  // 1
    },                                                                                                                 // 1
    DBSQL: function (v) {                                                                                              // 1
        DBSQL = v;                                                                                                     // 1
    },                                                                                                                 // 1
    DBSQLSERVER: function (v) {                                                                                        // 1
        DBSQLSERVER = v;                                                                                               // 1
    }                                                                                                                  // 1
}, 3);                                                                                                                 // 1
var methods = void 0;                                                                                                  // 1
module1.watch(require("./methods"), {                                                                                  // 1
    "default": function (v) {                                                                                          // 1
        methods = v;                                                                                                   // 1
    }                                                                                                                  // 1
}, 4);                                                                                                                 // 1
                                                                                                                       //
var schedule = require('node-schedule');                                                                               // 7
                                                                                                                       //
Meteor.startup(function () {                                                                                           // 9
    // Meteor.users._ensureIndex({codeRedac:1},{unique:true});                                                         // 10
    publications();                                                                                                    // 11
    WhatsNewPub();                                                                                                     // 12
    methods();                                                                                                         // 13
    turnAround();                                                                                                      // 15
});                                                                                                                    // 16
var w = schedule.scheduleJob(Meteor.settings.RUNMAJ, Meteor.bindEnvironment(function () {                              // 18
    console.log("lancement mise a jour");                                                                              // 19
    Meteor.call('maj_database');                                                                                       // 20
    console.log("done MAJ regdispo " + Date.now());                                                                    // 21
}));                                                                                                                   // 22
                                                                                                                       //
function turnAround() {                                                                                                // 24
    if (Meteor.isServer) {                                                                                             // 25
        Meteor.setTimeout(function () {                                                                                // 27
            checkSQLandDoMAJ();                                                                                        // 28
        }, 3000);                                                                                                      // 29
    }                                                                                                                  // 30
}                                                                                                                      // 31
                                                                                                                       //
function checkSQLandDoMAJ() {                                                                                          // 32
    console.log("in cleaning function");                                                                               // 33
    var meteorUsers = Meteor.users.find().fetch();                                                                     // 34
    var i = 0;                                                                                                         // 35
                                                                                                                       //
    if (meteorUsers.length) {                                                                                          // 36
        meteorUsers.forEach(function (muser) {                                                                         // 37
            userSQL.findAll({                                                                                          // 38
                attributes: {                                                                                          // 38
                    exclude: ['id']                                                                                    // 38
                },                                                                                                     // 38
                where: {                                                                                               // 38
                    ulogin: muser.username,                                                                            // 39
                    //mdp:muser.services.password.bcrypt.substring(0,8)+muser.uncrypted,                               // 40
                    redac: muser.codeRedac                                                                             // 41
                }                                                                                                      // 38
            }).then(Meteor.bindEnvironment(function (err) {                                                            // 38
                if (err.length <= 0) {                                                                                 // 43
                    //on ne la pas retrouver donc on efface l'element meteor                                           // 44
                    Meteor.users.remove({                                                                              // 45
                        _id: muser._id                                                                                 // 45
                    });                                                                                                // 45
                    console.dir(err); //console.log("unused user account "+muser.username+" deleted");                 // 46
                } else {                                                                                               // 48
                    //console.dir(err);                                                                                // 49
                    console.log("found no account to delete");                                                         // 50
                }                                                                                                      // 51
            }));                                                                                                       // 52
        });                                                                                                            // 53
    } else {                                                                                                           // 54
        //on check si il ya des utilisateurs existants dans sql server si oui on les duplique et les cree dans mongo   // 55
        userSQL.findAll({                                                                                              // 56
            attributes: {                                                                                              // 56
                exclude: ['id']                                                                                        // 56
            }                                                                                                          // 56
        }).then(Meteor.bindEnvironment(function (res) {                                                                // 56
            if (!res.length) {                                                                                         // 57
                //on ne la pas retrouver donc on efface l'element meteor                                               // 58
                console.log("found no account to copy from in sql server"); //console.dir(err);                        // 59
                //console.log("unused user account "+muser.username+" deleted");                                       // 61
            } else {                                                                                                   // 62
                res.map(function (e, arr, i) {                                                                         // 63
                    // Meteor.call("createNewUser",e);                                                                 // 64
                    Accounts.createUser({                                                                              // 65
                        username: e.ulogin,                                                                            // 66
                        password: e.mdp.substring(8)                                                                   // 67
                    });                                                                                                // 65
                    var nuser = Meteor.users.findOne({                                                                 // 70
                        username: e.ulogin                                                                             // 70
                    });                                                                                                // 70
                    Meteor.users.update(nuser._id, {                                                                   // 72
                        $set: {                                                                                        // 73
                            uncrypted: e.mdp.substring(8),                                                             // 74
                            nom: e.nom,                                                                                // 75
                            prenoms: e.prenom,                                                                         // 76
                            email: e.email,                                                                            // 77
                            fullname: e.nom + ' ' + e.prenom,                                                          // 78
                            hasSeenUpdate: false,                                                                      // 79
                            seenUpdateXtime: 0,                                                                        // 80
                            isNewsThere: false,                                                                        // 81
                            NewsID: null,                                                                              // 82
                            codeRedac: e.redac.toUpperCase(),                                                          // 83
                            role: e.role                                                                               // 84
                        }                                                                                              // 73
                    });                                                                                                // 72
                                                                                                                       //
                    if (e.nom == "zehi") {                                                                             // 87
                        var message = "<p><em>Ceci est un message automatique, veuillez ne pas y répondre.</em></p><br/><p>Bonjour Monsieur/Madame,</p><p>Veuillez trouver ci dessous vos accès au module <b>GESDREG</b> en charge de la gestion des disponibilités de règlements. </p><br/><p>Identifiant:<b> " + values.username + "</b><br/>Mot de passe:<b> " + values.passwordconf + "</b></p><p>Votre application est accèssible via le lien suivant:<a href='http://nvmob-srv:8082'>http://nvmob-srv:8082</a></p><p>Pour un fonctionnement optimal veuillez ouvrir l'application avec les navigateur <b>Google Chrome ou Mozilla Firefox</b></p><br/><br/><p>Cordialement, DSI NSIA VIE ASSURANCES</p>";
                        Meteor.call("sendEmail", values.email, "info@nsiavieapplications.com", "Vos identifiants sur le module GESDREG(Gestion des disponibilités de règlement)", message);
                    }                                                                                                  // 90
                                                                                                                       //
                    var muser = Meteor.users.findOne({                                                                 // 91
                        username: e.ulogin                                                                             // 91
                    });                                                                                                // 91
                                                                                                                       //
                    if (muser) {                                                                                       // 92
                        console.log("inserted in mongo users " + ++i);                                                 // 93
                    }                                                                                                  // 94
                });                                                                                                    // 96
                Meteor.call("quoiDeneuf", function () {                                                                // 97
                    console.log("Mises à jour chargées");                                                              // 98
                });                                                                                                    // 99
            }                                                                                                          // 100
        }));                                                                                                           // 101
    }                                                                                                                  // 102
}                                                                                                                      // 104
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},{
  "extensions": [
    ".js",
    ".json",
    ".jsx"
  ]
});
require("./server/graphql/connectors.js");
require("./server/graphql/graphqlServer.js");
require("./server/graphql/resolvers.js");
require("./server/graphql/schema.js");
require("./server/publications/User.js");
require("./server/publications/WhatsNew.js");
require("./server/methods.js");
require("./server/main.js");
//# sourceMappingURL=app.js.map
