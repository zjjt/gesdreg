{"version":3,"sources":["meteor://ðŸ’»app/imports/api/collections.js","meteor://ðŸ’»app/imports/utils/utilitaires.js","meteor://ðŸ’»app/server/graphql/connectors.js","meteor://ðŸ’»app/server/graphql/graphqlServer.js","meteor://ðŸ’»app/server/graphql/resolvers.js","meteor://ðŸ’»app/server/graphql/schema.js","meteor://ðŸ’»app/server/publications/User.js","meteor://ðŸ’»app/server/publications/WhatsNew.js","meteor://ðŸ’»app/server/methods.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","WhatsNew","RegUpdated","Historique","RgtManuel","Meteor","watch","require","v","Mongo","FilesCollection","Collection","storagePath","process","env","PWD","namingFunction","collectionName","allowClientCode","onBeforeunloadMessage","isClient","alert","onBeforeUpload","file","size","test","extension","englishDateToFr","frenchDateToEn","formatNumberInMoney","isEmptyObject","isEmptyObjectProps","uniq","DAYS_IN_MONTH","isValidDate","convertInTextFromFrenchDate","checkRdvDate","checkRdvDateMD","moment","momentBusiness","locale","workingWeekdays","date","yy","substring","mm","dd","x","console","log","parts","toString","split","replace","join","o","Object","keys","every","prop","head","ls","tail","slice","empty","length","cons","a","b","concat","has","_uniq","seen","daysInMonth","year","month","day","parseInt","Math","round","e","mois","dateReceptionY","infoSurRgt","DATE_RECEPTION","dateReceptionM","dateReceptionD","typeSinistre","TYPE_SINISTRE","dateRDV","today","Date","now","format","data","res","trim","statut_reg_retirer","isBefore","nbj","alerte","businessDiff","codeProduit","wnupo","dir","userSQL","DBSQL","dispoSQL","DBSQLSERVER","Sequelize","casual","_","settings","DBSQLSERVER_DATABASE","DBSQLSERVER_USER","DBSQLSERVER_PASSWORD","host","DBSQLSERVER_HOST","port","DBSQLSERVER_PORT","dialect","dialectOptions","requestTimeout","UserModel","define","ulogin","type","STRING","allowNull","field","mdp","redac","role","nom","prenom","email","schema","timestamps","freezeTableName","regDispoModel","wasrg","INTEGER","primaryKey","wnrgt","nom_beneficiaire","date_naiss","DATE","date_depot_treso","date_sort_treso","date_depot_sign","date_recep_sign_reg","date_retrait_reg","domaine","MNTGT","MRGGT","ValBank","Comments","CommentsBank","Num_envoi","banque","cheque","models","regdispo","reguser","bodyParser","graphqlExpress","graphiqlExpress","proxyMiddleware","resolvers","express","cors","WebApp","createApolloServer","execute","subscribe","SubscriptionServer","makeExecutableSchema","createServer","executableSchema","typeDefs","allowUndefinedInResolve","printErrors","configServer","expressServer","use","pubsub","withFilter","PubSub","Promise","sync","authenticate","then","catch","Query","user","args","username","users","find","fetch","orderDesc","findAll","attributes","exclude","where","$like","order","listeDispo","query","chequeQuery","typeDate","statut","numenv","numregl","numpol","nomtotal","numreglStart","numreglEnd","l","offset","limit","promises","dispo","forEach","r","push","all","replacements","numero_reg","QueryTypes","SELECT","spread","infosurrgt","toJSON","MONTANT_BRUT","MONTANT_NET_REGLEMENT","etat","includes","numcheque","chequeState","dispos","nd","map","i","arr","goodelem","reason","$between","consultDispo","uquery","startDate","endDate","numpolice","numrgt","birthdate","red","infosRedac","$not","consultDispoBank","dataToExport","date_sort_sign","voirInfoReg","Mutation","deleteUsers","codeArr","usercodes","remove","codeRedac","$in","destroy","Redac","Subscription","rgtUpdated","asyncIterator","resolve","payload","exportDefault","publish","userId","_id","fields","ready","WhatsNewPub","module1","Accounts","Email","Excel","PromiseB","fs","json2xls","methods","sendEmail","to","from","subject","text","check","Array","String","unblock","send","html","updateNewsScreenTime","currentUser","findOne","seenUpdateXtime","update","$set","hasSeenUpdate","isNewsThere","quoiDeneuf","guidGenerator","S4","random","updates","newsId","existInCol","insert","met","NewsID","checkAdminUser","ADMINLOGMDP","checkDelai","d","regTreso","horsDelaiT","regSign","horsDelaiS","delai","dataValues","add","dataValuesdate_depot_treso","isAfter","checkDelaiParRapportAuClient","rachatTotbancass","rachatTotIndiv","avanceRachatP","terme","carec","ifc","req","sinistre","exportToExcel","EXL","jsonArray","instance","index","record","tempArr","NUMERO_CHEQUE","LIBELLE_SINISTRE","CAUSE_SINISTRE","xls","createNewUser","values","codeFound","toUpperCase","Error","createUser","password","nuser","uncrypted","passwordconf","prenoms","fullname","message","MAIL_URL","call","ADMINMAIL","create","services","bcrypt","err","createDispo","userid","updateDisposManuel","excel","pathToFile","workbook","readFile","cellDates","dateNF","sheet","Sheets","Feuil1","options","workbookJson","utils","sheet_to_json","DOMAINE","MODE_REGLEMENT","CHEQUE","isNaN","ENVOI","PRESTATION","POLICE","MONTANT","DATE_ENTREE_TRESO","DATE_SORTIE_TRESO","DATE_ENTREE_SIGNATURE","DATE_SORTIE_SIGNATURE","DATE_RETRAIT","dateConnexion","heure","actions","par","ddt","dst","dds","drsr","drr","srr","p","rgt","REGLEMENT","mnt","nb","BENEFICIAIRE","dom","nenv","c","mrggt","ban","BANQUE","com","COMMENTAIRE","INSERT","updateDispos","rgtArray","prom","comment","choixForm","cdr","coderej","delreg","rgtEx","match","Number","n","UPDATE","await","DATE_SURVENANCE_SINISTRE","diff","isValid","rdv","comments","stat","updateDispo","newval","initialValues","updateDisposBank","choixbank","reg","maj_database","publications","schedule","startup","turnAround","w","scheduleJob","RUNMAJ","bindEnvironment","isServer","setTimeout","checkSQLandDoMAJ","meteorUsers","muser"],"mappings":"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","file":"/app.js","sourcesContent":["import {Meteor} from 'meteor/mongo';\r\nimport {Mongo} from 'meteor/mongo';\r\nimport {FilesCollection} from 'meteor/ostrio:files';\r\n\r\n\r\nlet WhatsNew=new Mongo.Collection('WhatsNew');\r\nlet RegUpdated=new Mongo.Collection('RegUpdated');\r\nlet Historique=new Mongo.Collection('Historique');\r\nlet RgtManuel=new FilesCollection({\r\n    storagePath:process.env.PWD+'/FICHIERS/rgtmanuel/',\r\n     namingFunction(){\r\n         return 'rgtmanuel'\r\n     },\r\n     collectionName:'RgtManuel',\r\n     allowClientCode:false,\r\n     onBeforeunloadMessage(){\r\n         if(Meteor.isClient){\r\n             alert(\"Le fichier est toujours en cours de tÃ©lÃ©chargement.Veuillez patienter...\");\r\n         }else\r\n         {\r\n             return 'Le fichier est toujours en cours de tÃ©lÃ©chargement.Veuillez patienter...';\r\n         }\r\n         \r\n     },\r\n     onBeforeUpload(file){\r\n         //allow file size under 10mb and only xlsx or xls\r\n         if(file.size<=10485760 && /xls|xlsx/i.test(file.extension)){\r\n             return true;\r\n         }else{ \r\n             if(Meteor.isClient){\r\n             alert(\"Veuillez fournir un fichier excel xls ou xlsx. \");\r\n             }else{\r\n                 return 'Veuillez fournir un fichier excel xls ou xlsx. ';\r\n             }\r\n             \r\n         }\r\n     },\r\n });\r\nexport {WhatsNew,RegUpdated,Historique,RgtManuel};","const momentBusiness = require('moment-business-days');\r\nimport {moment} from 'meteor/momentjs:moment';\r\n\r\n\r\nmomentBusiness.locale('us', {\r\n    workingWeekdays: [1,2,3,4,5] \r\n });\r\n\r\nexport const englishDateToFr=(date)=>{\r\n    if(typeof date==\"undefined\"||date==null)\r\n    return \"NON DEFINI\";\r\n    let yy=date.substring(0,4);\r\n    let mm=date.substring(5,7);\r\n    let dd=date.substring(8);\r\n    return dd+\"-\"+mm+\"-\"+yy;\r\n} \r\nexport const frenchDateToEn=(date)=>{\r\n    //21-02-2018\r\n    let yy=date.substring(6);\r\n    let mm=date.substring(3,5);\r\n    let dd=date.substring(0,2);\r\n    return yy+\"-\"+mm+\"-\"+dd;\r\n} \r\n\r\nexport let formatNumberInMoney=(x)=>{\r\n    console.log(x);\r\n    let parts=x.toString().split(\".\");\r\n    parts[0]=parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\");\r\n    return parts.join(\".\");\r\n}\r\n\r\nexport function isEmptyObject(o) {\r\n    return Object.keys(o).every(function(x) {\r\n        return o[x]===''||o[x]===null || typeof o[x]==\"undefined\";  // or just \"return o[x];\" for falsy values\r\n    });\r\n}\r\n\r\nexport function isEmptyObjectProps(o,prop){\r\n    return o[prop]===''||o[prop]===null || typeof o[prop]==\"undefined\";\r\n}\r\n//Les fonctions suivantes servent a enlever les dupliquer des tableaux\r\nlet head  = function(ls)  { return ls[0] };\r\nlet tail  = function(ls)  { return ls.slice(1) };\r\nlet empty = function(ls)  { return ls.length == 0 };\r\nlet cons  = function(a, b) { return [a].concat(b) };\r\n\r\nlet has = function(x, ls) {\r\n    return empty(ls) ? false : head(ls) == x || has(x, tail(ls));\r\n};\r\n\r\nlet _uniq = function(ls, seen) {\r\n    return empty(ls) ? [] :\r\n        has(head(ls), seen) ?\r\n            _uniq(tail(ls), seen) :\r\n            cons(head(ls),\r\n                _uniq(tail(ls),\r\n                    cons(head(ls), seen)));\r\n};\r\n\r\nexport const uniq = function(ls) {\r\n    return _uniq(ls, []);\r\n}; \r\n\r\nexport const DAYS_IN_MONTH = [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\r\n\r\nfunction daysInMonth(year, month) {\r\n    // isValidDate checked that year and month are integers already.\r\n\r\n    // February of leap years. Assumes that the Gregorian calendar extends\r\n    // infinitely in the future and in the past.\r\n    if (month === 2 && (year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0))) {\r\n        return 29\r\n    }\r\n\r\n    // Everything else.\r\n    return DAYS_IN_MONTH[month]\r\n}\r\n\r\nexport function isValidDate(year, month, day) {\r\n    day=parseInt(day,10);\r\n    month=parseInt(month,10);\r\n    year=parseInt(year,10);\r\n    console.log(day+\"-\"+month+\"-\"+year);\r\n    return (\r\n        // Check that year, month and day are integers. Deals with NaN.\r\n        year === Math.round(year) && month === Math.round(month) && day === Math.round(day) &&\r\n        // Any year is valid. Check that month and day are valid.\r\n        month >= 1 && month <= 12 && day >= 1 && day <= daysInMonth(year, month)\r\n    )\r\n}\r\n\r\nexport let convertInTextFromFrenchDate=(e)=>{\r\n    //alert(e);\r\n    if(e.length>=10){\r\n        let day=e.substring(0,2);\r\n        let mois=e.substring(3,5);\r\n        let year=e.substring(6);\r\n    //alert(isValidDate(year,mois,day))    \r\n        if(isValidDate(year,mois,day))\r\n            return year+mois+day;\r\n        else{\r\n            alert(\"Veuillez fournir une date valide\");\r\n            //location.reload()\r\n        }\r\n    }  \r\n}\r\n\r\nexport let checkRdvDate=(e)=>{\r\n    //console.log(\"in util funct rdv\")\r\n    let dateReceptionY=e.infoSurRgt[0]&&e.infoSurRgt[0].DATE_RECEPTION?e.infoSurRgt[0].DATE_RECEPTION.substring(0,4):null;\r\n    let dateReceptionM=e.infoSurRgt[0]&&e.infoSurRgt[0].DATE_RECEPTION?e.infoSurRgt[0].DATE_RECEPTION.substring(5,7):null;\r\n    let dateReceptionD=e.infoSurRgt[0]&&e.infoSurRgt[0].DATE_RECEPTION?e.infoSurRgt[0].DATE_RECEPTION.substring(8):null;\r\n    let typeSinistre=e.infoSurRgt[0]?e.infoSurRgt[0].TYPE_SINISTRE:null\r\n    let dateRDV=e.dateRDV;\r\n    let today=moment(Date.now()).format(\"YYYY-MM-DD\");\r\n    let data;\r\n    let res;\r\n    typeSinistre=typeSinistre?typeSinistre.trim():null;\r\n    //console.log(\"dateRDV= \"+moment(dateRDV).format(\"DD-MM-YYYY\")+\" todayIs= \"+moment(today).format(\"DD-MM-YYYY\"));\r\n    if(isValidDate(dateReceptionY,dateReceptionM,dateReceptionD) && dateRDV && (e.statut_reg_retirer!==\"PRET\"||e.statut_reg_retirer!==\"SORTIE\"||e.statut_reg_retirer!==\"REFUSER\")){\r\n        //on check le type de prestation\r\n        console.log(\"le statut est \"+e.statut_reg_retirer);\r\n       // console.log(\"typeSinistre: \"+typeSinistre);\r\n        switch(typeSinistre){\r\n            case \"RACHAT PARTIEL\":\r\n            case \"AVANCE\":\r\n            //delai de traitement de 21 jr et alerte 7jr avant\r\n            if(moment(dateRDV).isBefore(today)){\r\n                data={\r\n                    nbj:-1,\r\n                    alerte:\"TERMINER\"\r\n                }\r\n                return data;\r\n            }else{\r\n                res=momentBusiness(dateRDV).businessDiff(momentBusiness(today));\r\n                if(res<=7){\r\n                    data={\r\n                        nbj:res,\r\n                        alerte:res<=7 && res>=5?\"NORMAL\":\"HAUTE\"\r\n                    }\r\n                    //console.log(\"in util funct rachat partiel\")\r\n                    //console.dir(res);\r\n                    return data;\r\n                }else{\r\n                    data={\r\n                        nbj:res,\r\n                        alerte:\"RAS\"\r\n                    }\r\n                    return data;\r\n                }\r\n            }\r\n                \r\n            break;\r\n            case \"TERME\":\r\n            case \"IFC\":\r\n                if(moment(dateRDV).isBefore(today)){\r\n                    data={\r\n                        nbj:-1,\r\n                        alerte:\"TERMINER\"\r\n                    }\r\n                    return data;\r\n                }else{\r\n                    //delai de traitement de 15 jr et alerte 7jr avant\r\n                    res=momentBusiness(dateRDV).businessDiff(momentBusiness(today));\r\n                    if(res<=7){\r\n                        data={\r\n                            nbj:res,\r\n                            alerte:res<=7 && res>=5?\"NORMAL\":\"HAUTE\"\r\n                        }\r\n                        //console.log(\"in util funct ifc\")\r\n                        console.log(res);\r\n                        return data;\r\n                    }else{\r\n                        data={\r\n                            nbj:res,\r\n                            alerte:\"RAS\"\r\n                        }\r\n                        return data;\r\n                    }\r\n                }\r\n            \r\n            break;\r\n            case \"RACHAT TOTAL\":\r\n                let codeProduit=e.wnupo.toString().substring(0,3);\r\n                //console.log(\"codeproduit: \"+codeProduit+\" et type= \"+typeof codeProduit)\r\n                switch(codeProduit){\r\n                   case \"110\":\r\n                   case \"112\":\r\n                   case \"116\":\r\n                   case \"120\":\r\n                   case \"122\":\r\n                   case \"130\":\r\n                   case \"140\":\r\n                   case \"162\":\r\n                   case \"166\":\r\n                   case \"168\":\r\n                   case \"210\":\r\n                   case \"212\":\r\n                   case \"216\":\r\n                   case \"218\":\r\n                   case \"220\":\r\n                   case \"224\":\r\n                   case \"230\":\r\n                   case \"234\":\r\n                   case \"241\":\r\n                   case \"242\":\r\n                   case \"243\":\r\n                   case \"246\":\r\n                   case \"247\":\r\n                   case \"248\":\r\n                   case \"260\":\r\n                   case \"310\":\r\n                   case \"312\":\r\n                   case \"330\":\r\n                   case \"331\":\r\n                   case \"332\":\r\n                   case \"333\":\r\n                   case \"334\":\r\n                   case \"360\":\r\n                   case \"791\":\r\n                   case \"793\":\r\n                    if(moment(dateRDV).isBefore(today)){\r\n                        data={\r\n                            nbj:-1,\r\n                            alerte:\"TERMINER\"\r\n                        }\r\n                        return data;\r\n                    }else{\r\n                        //cas individuelle\r\n                        //delai de traitement de 60 jr et alerte 15jr avant\r\n                        res=momentBusiness(dateRDV).businessDiff(momentBusiness(today));\r\n                        //console.log(\"resultat de res: \"+res);\r\n                        if(res<=15){\r\n                            data={\r\n                                nbj:res,\r\n                                alerte:res<=15 && res>=13?\"NORMAL\":\"HAUTE\"\r\n                            }\r\n                            //console.log(\"in util funct rachat total i\")\r\n                            //console.dir(res);\r\n                            return data;\r\n                        }else{\r\n                            data={\r\n                                nbj:res,\r\n                                alerte:\"RAS\"\r\n                            }\r\n                            return data;\r\n                        }\r\n                    }\r\n                        \r\n                    break;\r\n                    case \"710\":\r\n                    case \"713\":\r\n                    case \"715\":\r\n                    case \"717\":\r\n                    case \"720\":\r\n                    case \"722\":\r\n                    case \"724\":\r\n                    case \"726\":\r\n                    case \"731\":\r\n                    case \"732\":\r\n                    case \"742\":\r\n                    case \"745\":\r\n                    case \"752\":\r\n                    case \"755\":\r\n                    case \"760\":\r\n                    case \"766\":\r\n                    case \"770\":\r\n                    case \"772\":\r\n                    case \"773\":\r\n                    case \"774\":\r\n                    case \"776\":\r\n                    case \"777\":\r\n                    case \"778\":\r\n                    case \"782\":\r\n                    case \"784\":\r\n                    case \"786\":\r\n                        if(moment(dateRDV).isBefore(today)){\r\n                            data={\r\n                                nbj:-1,\r\n                                alerte:\"TERMINER\"\r\n                            }\r\n                            return data;\r\n                        }else{\r\n                            //cas bancassurances\r\n                            //delai de traitement de 45 jr et alerte 10jr avant\r\n                            res=momentBusiness(dateRDV,'YYYY-MM-DD').businessDiff(momentBusiness(today,'YYYY-MM-DD'));\r\n                            console.log(\"resultat de res: \"+res);\r\n                            if(res<=10){\r\n                                data={\r\n                                    nbj:res,\r\n                                    alerte:res<=10 && res>=8?\"NORMAL\":\"HAUTE\"\r\n                                }\r\n                                console.log(\"in util funct rachat total b\")\r\n                                console.dir(res);\r\n                                return data;\r\n                            }else{\r\n                                data={\r\n                                    nbj:res,\r\n                                    alerte:\"RAS\"\r\n                                }\r\n                                return data;\r\n                            }\r\n                        }\r\n                            \r\n                }\r\n            \r\n            \r\n            break;\r\n            case \"CAREC\":\r\n                if(moment(dateRDV).isBefore(today)){\r\n                    data={\r\n                        nbj:-1,\r\n                        alerte:\"TERMINER\"\r\n                    }\r\n                    return data;\r\n                }else{\r\n                    //delai de traitement de 30 jr et alerte 7jr avant\r\n                    res=momentBusiness(dateRDV,'YYYY-MM-DD').businessDiff(momentBusiness(today,'YYYY-MM-DD'));\r\n                    if(res<=7){\r\n                        data={\r\n                            nbj:res,\r\n                            alerte:res<=7 && res>=5?\"NORMAL\":\"HAUTE\"\r\n                        }\r\n                        console.log(\"in util funct rdv\")\r\n                        console.dir(res);\r\n                        return data;\r\n                    }else{\r\n                        data={\r\n                            nbj:res,\r\n                            alerte:\"RAS\"\r\n                        }\r\n                        return data;\r\n                    }\r\n                }\r\n            \r\n            break;\r\n            default:\r\n            return {\r\n                nbj:-1,\r\n                alerte:\"ERROR\"\r\n            };\r\n            break;\r\n        }\r\n    }else{\r\n        return {\r\n            nbj:-1,\r\n            alerte:\"ERROR\"\r\n        };\r\n    }\r\n    \r\n}\r\n//pour infosurrgt en multidimension\r\nexport let checkRdvDateMD=(e)=>{\r\n    //console.log(\"in util funct rdv\")\r\n    let dateReceptionY=e.infoSurRgt[0][0]&&e.infoSurRgt[0][0].DATE_RECEPTION?e.infoSurRgt[0][0].DATE_RECEPTION.substring(0,4):null;\r\n    let dateReceptionM=e.infoSurRgt[0][0]&&e.infoSurRgt[0][0].DATE_RECEPTION?e.infoSurRgt[0][0].DATE_RECEPTION.substring(5,7):null;\r\n    let dateReceptionD=e.infoSurRgt[0][0]&&e.infoSurRgt[0][0].DATE_RECEPTION?e.infoSurRgt[0][0].DATE_RECEPTION.substring(8):null;\r\n    let typeSinistre=e.infoSurRgt[0][0]?e.infoSurRgt[0][0].TYPE_SINISTRE:null\r\n    let dateRDV=e.dateRDV;\r\n    let today=moment(Date.now()).format(\"YYYY-MM-DD\");\r\n    let data;\r\n    let res;\r\n    typeSinistre=typeSinistre?typeSinistre.trim():null;\r\n    //console.log(\"dateRDV= \"+moment(dateRDV).format(\"DD-MM-YYYY\")+\" todayIs= \"+moment(today).format(\"DD-MM-YYYY\"));\r\n    if(isValidDate(dateReceptionY,dateReceptionM,dateReceptionD)){\r\n        //on check le type de prestation\r\n        //console.log(\"in the func\");\r\n       // console.log(\"typeSinistre: \"+typeSinistre);\r\n        switch(typeSinistre){\r\n            case \"RACHAT PARTIEL\":\r\n            case \"AVANCE\":\r\n            //delai de traitement de 21 jr et alerte 7jr avant\r\n            if(moment(dateRDV).isBefore(today)){\r\n                data={\r\n                    nbj:-1,\r\n                    alerte:\"TERMINER\"\r\n                }\r\n                return data;\r\n            }else{\r\n                res=momentBusiness(dateRDV).businessDiff(momentBusiness(today));\r\n                if(res<=7){\r\n                    data={\r\n                        nbj:res,\r\n                        alerte:res<=7 && res>=5?\"NORMAL\":\"HAUTE\"\r\n                    }\r\n                    //console.log(\"in util funct rachat partiel\")\r\n                    //console.dir(res);\r\n                    return data;\r\n                }else{\r\n                    data={\r\n                        nbj:res,\r\n                        alerte:\"RAS\"\r\n                    }\r\n                    return data;\r\n                }\r\n            }\r\n                \r\n            break;\r\n            case \"TERME\":\r\n            case \"IFC\":\r\n                if(moment(dateRDV).isBefore(today)){\r\n                    data={\r\n                        nbj:-1,\r\n                        alerte:\"TERMINER\"\r\n                    }\r\n                    return data;\r\n                }else{\r\n                    //delai de traitement de 15 jr et alerte 7jr avant\r\n                    res=momentBusiness(dateRDV).businessDiff(momentBusiness(today));\r\n                    if(res<=7){\r\n                        data={\r\n                            nbj:res,\r\n                            alerte:res<=7 && res>=5?\"NORMAL\":\"HAUTE\"\r\n                        }\r\n                        //console.log(\"in util funct ifc\")\r\n                        console.log(res);\r\n                        return data;\r\n                    }else{\r\n                        data={\r\n                            nbj:res,\r\n                            alerte:\"RAS\"\r\n                        }\r\n                        return data;\r\n                    }\r\n                }\r\n            \r\n            break;\r\n            case \"RACHAT TOTAL\":\r\n                let codeProduit=e.wnupo.toString().substring(0,3);\r\n                //console.log(\"codeproduit: \"+codeProduit+\" et type= \"+typeof codeProduit)\r\n                switch(codeProduit){\r\n                   case \"110\":\r\n                   case \"112\":\r\n                   case \"116\":\r\n                   case \"120\":\r\n                   case \"122\":\r\n                   case \"130\":\r\n                   case \"140\":\r\n                   case \"162\":\r\n                   case \"166\":\r\n                   case \"168\":\r\n                   case \"210\":\r\n                   case \"212\":\r\n                   case \"216\":\r\n                   case \"218\":\r\n                   case \"220\":\r\n                   case \"224\":\r\n                   case \"230\":\r\n                   case \"234\":\r\n                   case \"241\":\r\n                   case \"242\":\r\n                   case \"243\":\r\n                   case \"246\":\r\n                   case \"247\":\r\n                   case \"248\":\r\n                   case \"260\":\r\n                   case \"310\":\r\n                   case \"312\":\r\n                   case \"330\":\r\n                   case \"331\":\r\n                   case \"332\":\r\n                   case \"333\":\r\n                   case \"334\":\r\n                   case \"360\":\r\n                   case \"791\":\r\n                   case \"793\":\r\n                    if(moment(dateRDV).isBefore(today)){\r\n                        data={\r\n                            nbj:-1,\r\n                            alerte:\"TERMINER\"\r\n                        }\r\n                        return data;\r\n                    }else{\r\n                        //cas individuelle\r\n                        //delai de traitement de 60 jr et alerte 15jr avant\r\n                        res=momentBusiness(dateRDV).businessDiff(momentBusiness(today));\r\n                        //console.log(\"resultat de res: \"+res);\r\n                        if(res<=15){\r\n                            data={\r\n                                nbj:res,\r\n                                alerte:res<=15 && res>=13?\"NORMAL\":\"HAUTE\"\r\n                            }\r\n                            //console.log(\"in util funct rachat total i\")\r\n                            //console.dir(res);\r\n                            return data;\r\n                        }else{\r\n                            data={\r\n                                nbj:res,\r\n                                alerte:\"RAS\"\r\n                            }\r\n                            return data;\r\n                        }\r\n                    }\r\n                        \r\n                    break;\r\n                    case \"710\":\r\n                    case \"713\":\r\n                    case \"715\":\r\n                    case \"717\":\r\n                    case \"720\":\r\n                    case \"722\":\r\n                    case \"724\":\r\n                    case \"726\":\r\n                    case \"731\":\r\n                    case \"732\":\r\n                    case \"742\":\r\n                    case \"745\":\r\n                    case \"752\":\r\n                    case \"755\":\r\n                    case \"760\":\r\n                    case \"766\":\r\n                    case \"770\":\r\n                    case \"772\":\r\n                    case \"773\":\r\n                    case \"774\":\r\n                    case \"776\":\r\n                    case \"777\":\r\n                    case \"778\":\r\n                    case \"782\":\r\n                    case \"784\":\r\n                    case \"786\":\r\n                        if(moment(dateRDV).isBefore(today)){\r\n                            data={\r\n                                nbj:-1,\r\n                                alerte:\"TERMINER\"\r\n                            }\r\n                            return data;\r\n                        }else{\r\n                            //cas bancassurances\r\n                            //delai de traitement de 45 jr et alerte 10jr avant\r\n                            res=momentBusiness(dateRDV,'YYYY-MM-DD').businessDiff(momentBusiness(today,'YYYY-MM-DD'));\r\n                            console.log(\"resultat de res: \"+res);\r\n                            if(res<=10){\r\n                                data={\r\n                                    nbj:res,\r\n                                    alerte:res<=10 && res>=8?\"NORMAL\":\"HAUTE\"\r\n                                }\r\n                                console.log(\"in util funct rachat total b\")\r\n                                console.dir(res);\r\n                                return data;\r\n                            }else{\r\n                                data={\r\n                                    nbj:res,\r\n                                    alerte:\"RAS\"\r\n                                }\r\n                                return data;\r\n                            }\r\n                        }\r\n                            \r\n                }\r\n            \r\n            \r\n            break;\r\n            case \"CAREC\":\r\n                if(moment(dateRDV).isBefore(today)){\r\n                    data={\r\n                        nbj:-1,\r\n                        alerte:\"TERMINER\"\r\n                    }\r\n                    return data;\r\n                }else{\r\n                    //delai de traitement de 30 jr et alerte 7jr avant\r\n                    res=momentBusiness(dateRDV,'YYYY-MM-DD').businessDiff(momentBusiness(today,'YYYY-MM-DD'));\r\n                    if(res<=7){\r\n                        data={\r\n                            nbj:res,\r\n                            alerte:res<=7 && res>=5?\"NORMAL\":\"HAUTE\"\r\n                        }\r\n                        console.log(\"in util funct rdv\")\r\n                        console.dir(res);\r\n                        return data;\r\n                    }else{\r\n                        data={\r\n                            nbj:res,\r\n                            alerte:\"RAS\"\r\n                        }\r\n                        return data;\r\n                    }\r\n                }\r\n            \r\n            break;\r\n            default:\r\n            return null;\r\n            break;\r\n        }\r\n    }else{\r\n        return null;\r\n    }\r\n    \r\n}","import Sequelize from 'sequelize';\r\nimport {Meteor} from 'meteor/meteor';\r\nimport casual from 'casual';\r\nimport _ from 'lodash';\r\nimport {moment} from 'meteor/momentjs:moment';\r\n\r\n\r\n\r\n/*const DBSQL= new Sequelize('moduleRGT', 'root', 'root', {\r\n    host:'localhost',\r\n    port:'8889',\r\n    dialect: 'mysql',\r\n    //storage: './DB/moduleRGT.db',\r\n});*/\r\n\r\n\r\nconst DBSQLSERVER= new Sequelize(Meteor.settings.DBSQLSERVER_DATABASE,Meteor.settings.DBSQLSERVER_USER, Meteor.settings.DBSQLSERVER_PASSWORD, {\r\n    host:Meteor.settings.DBSQLSERVER_HOST,\r\n    port:Meteor.settings.DBSQLSERVER_PORT,\r\n    dialect: 'mssql',\r\n    dialectOptions:{\r\n      requestTimeout:1625000\r\n    },\r\n    //storage: './DB/moduleRGT.db',\r\n});\r\n\r\n\r\n//----------------------------------MODELS--------------------------------\r\nconst UserModel=DBSQLSERVER.define('reguser',{\r\n    ulogin: {\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'ulogin'\r\n    },\r\n    mdp: {\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'mdp'\r\n    },\r\n    redac: {\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'redac',\r\n     // primaryKey:true\r\n    },\r\n    role: {\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'role',\r\n     // primaryKey:true\r\n    },\r\n    nom: {\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'nom'\r\n    },\r\n    prenom: {\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'prenom'\r\n    },\r\n    email: {\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'email'\r\n    }\r\n        \r\n},{\r\n    schema:'exp',\r\n    timestamps:false,\r\n    freezeTableName:'reguser'\r\n});\r\n\r\nconst regDispoModel=DBSQLSERVER.define('regdispo',{\r\n  wasrg: {\r\n      type: Sequelize.INTEGER,\r\n      allowNull: true,\r\n      field: 'wasrg',\r\n      primaryKey:true\r\n    },\r\n    wnrgt: {\r\n      type: Sequelize.INTEGER,\r\n      allowNull: true,\r\n      field: 'wnrgt'\r\n    },\r\n    wnupo: {\r\n      type: Sequelize.INTEGER,\r\n      allowNull: true,\r\n      field: 'wnupo'\r\n    },\r\n    nom_beneficiaire: {\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'nom_beneficiaire'\r\n    },\r\n    date_naiss: {\r\n      type: Sequelize.DATE,\r\n      allowNull: true,\r\n      field: 'date_naiss'\r\n    },\r\n    date_depot_treso: {\r\n      type: Sequelize.DATE,\r\n      allowNull: true,\r\n      field: 'date_depot_treso'\r\n    },\r\n    date_sort_treso: {\r\n      type: Sequelize.DATE,\r\n      allowNull: true,\r\n      field: 'date_sort_treso'\r\n    },\r\n    date_depot_sign: {\r\n      type: Sequelize.DATE,\r\n      allowNull: true,\r\n      field: 'date_depot_sign'\r\n    },\r\n    date_recep_sign_reg: {\r\n      type: Sequelize.DATE,\r\n      allowNull: true,\r\n      field: 'date_recep_sign_reg'\r\n    },\r\n    date_retrait_reg: {\r\n      type: Sequelize.DATE,\r\n      allowNull: true,\r\n      field: 'date_retrait_reg'\r\n    },\r\n    statut_reg_retirer: {\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'statut_reg_retirer'\r\n    },\r\n    domaine:{\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'domaine'\r\n    },\r\n    redac: {\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'redac'\r\n    },\r\n    MNTGT: {\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'MNTGT'\r\n    },\r\n    MRGGT: {\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'MRGGT'\r\n    },\r\n    dateRDV: {\r\n      type: Sequelize.DATE,\r\n      allowNull: true,\r\n      field: 'dateRDV'\r\n    },\r\n    ValBank: {\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'ValBank'\r\n    },\r\n    Comments: {\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'Comments'\r\n    },\r\n    CommentsBank: {\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'CommentsBank'\r\n    },   \r\n    Num_envoi: {\r\n      type: Sequelize.INTEGER,\r\n      allowNull: true,\r\n      field: 'Num_envoi'\r\n    }, \r\n    banque: {\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'banque'\r\n    }, \r\n    Comments: {\r\n      type: Sequelize.STRING,\r\n      allowNull: true,\r\n      field: 'Comments'\r\n    }, \r\n    cheque: {\r\n      type: Sequelize.INTEGER,\r\n      allowNull: true,\r\n      field: 'cheque'\r\n    },   \r\n      \r\n},{\r\n    schema:'exp',\r\n    timestamps:false,\r\n    freezeTableName:'regdispo'\r\n});\r\n\r\nconst dispoSQL=DBSQLSERVER.models.regdispo;\r\nconst userSQL=DBSQLSERVER.models.reguser;\r\n\r\nexport {userSQL,DBSQL,dispoSQL,DBSQLSERVER};\r\n\r\n","import bodyParser from 'body-parser';\r\nimport {graphqlExpress,graphiqlExpress} from 'graphql-server-express';\r\nimport proxyMiddleware from 'http-proxy-middleware';\r\nimport schema from './schema';\r\nimport resolvers from './resolvers.js';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport { WebApp } from 'meteor/webapp'; // Meteor-specific\r\nimport { createApolloServer } from 'meteor/apollo';\r\nimport { execute, subscribe } from 'graphql';\r\nimport { SubscriptionServer } from 'subscriptions-transport-ws';\r\nimport { makeExecutableSchema } from 'graphql-tools';\r\nimport { createServer } from 'http';\r\nimport {Meteor} from 'meteor/meteor';\r\n\r\n\r\nconst executableSchema=makeExecutableSchema({\r\n  typeDefs:schema,\r\n  resolvers:resolvers,\r\n  allowUndefinedInResolve:false,\r\n  printErrors:true\r\n});\r\nconsole.log( typeof createApolloServer)\r\ncreateApolloServer({\r\n  schema:executableSchema,\r\n}, {\r\n  configServer: expressServer => expressServer.use(cors()),\r\n});\r\nconsole.log(`Apollo Server is now running on http://localhost`);\r\n\r\n/*export const GRAPHQL_PORT=Meteor.settings.public.GRAPHQL_PORT?Meteor.settings.public.GRAPHQL_PORT:5000;\r\n\r\nlet graphQLServer=express();\r\n\r\nconst executableSchema=makeExecutableSchema({\r\n  typeDefs:schema,\r\n  resolvers:resolvers,\r\n  allowUndefinedInResolve:false,\r\n  printErrors:true\r\n});\r\n\r\n\r\n\r\ngraphQLServer.use('*',cors());\r\ngraphQLServer.options('*', cors()) ;\r\ngraphQLServer.use((req,res,next)=>{\r\n    res.header(\"Access-Control-Allow-Origin\",\"*\");\r\n   // res.header(\"Access-Control-Allow-Origin\",\"Origin, X-Requested-With, Accept\");\r\n    next();\r\n});\r\ngraphQLServer.use('/graphql',bodyParser.json(),graphqlExpress({\r\n    schema:executableSchema,\r\n}));\r\ngraphQLServer.use('/graphiql',graphiqlExpress({\r\n  endpointURL:'/graphql',\r\n  subscriptionsEndpoint: `ws://localhost:${GRAPHQL_PORT}/subscriptions`\r\n}));\r\ngraphQLServer.use('/', (req, res) => res.redirect('/graphiql'));\r\n//server websocket for subscriptions\r\n// Wrap the Express server\r\nconst ws = createServer(graphQLServer);\r\nws.listen(GRAPHQL_PORT, () => {\r\n  console.log(`Apollo Server is now running on http://localhost:${GRAPHQL_PORT}`);\r\n  //console.log(Meteor.absoluteUrl())\r\n  // Set up the WebSocket for handling GraphQL subscriptions\r\n  new SubscriptionServer({\r\n    execute,\r\n    subscribe,\r\n    schema:executableSchema\r\n  }, {\r\n    server: ws,\r\n    path: '/subscriptions',\r\n  });\r\n});\r\n//graphQLServer.listen(GRAPHQL_PORT);\r\nWebApp.rawConnectHandlers.use(proxyMiddleware(`http://localhost:${GRAPHQL_PORT}/graphql`));\r\n*/","import {Meteor} from 'meteor/meteor';\r\nimport {DBSQL,DBSQLSERVER,userSQL,dispoSQL} from './connectors.js';\r\nimport {formatNumberInMoney,uniq,checkRdvDate} from '../../imports/utils/utilitaires';\r\nimport {withFilter } from 'graphql-subscriptions';\r\nimport Sequelize from 'sequelize';\r\nconst Promise=require('bluebird');\r\nimport { PubSub } from 'graphql-subscriptions';\r\n/*sqlServconn.run((err)=>{\r\n    if(err)\r\n        throw err;\r\n        console.log(sqlServconn.tables);\r\n});*/\r\n/*DBSQL.sync();\r\nDBSQL.authenticate().then(()=>{\r\n    console.log('Connection MySql etablie');\r\n}).catch(()=>{\r\n    console.log('Impossible de se connecter a Mysql,veuillez reverifier');\r\n});*/\r\n//==============\r\nDBSQLSERVER.sync();\r\nDBSQLSERVER.authenticate().then(()=>{\r\n    console.log('Connection MsSql etablie');\r\n}).catch((e)=>{\r\n    console.dir(e);\r\n    console.log('Impossible de se connecter a MsSql,veuillez reverifier');\r\n});\r\n\r\nexport const pubsub = new PubSub();\r\n const resolvers={\r\n    Query:{\r\n        user(_,args){\r\n            if(args.username){\r\n                return Meteor.users.find({username:args.username}).fetch();\r\n            }else if(args.username===\"allstar\"){\r\n                return Meteor.users.find({}).fetch();\r\n            }else{\r\n                return [];\r\n            }\r\n        },\r\n        userSQL(_,args){\r\n            if(args.nom &&(args.orderDesc||!args.orderDesc)){\r\n                return userSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    nom:{\r\n                            $like:'%'+args.nom+'%'\r\n                         }\r\n                }});\r\n            }else if(args.orderDesc){\r\n                return userSQL.findAll({attributes:{exclude:['id']},order:[['nom','DESC']]});\r\n            }else{\r\n                return userSQL.findAll({attributes:{exclude:['id']},order:[['nom','ASC']]});\r\n            }\r\n        },\r\n        async listeDispo(_,args){\r\n            let query=\"exec info_reg_dispo :numero_reg,:domaine \";\r\n            let chequeQuery=\"select Dbo.check_etat_cheq(:numcheque) as chequeState\";   \r\n           // let chainer=new Sequelize.Utils.QueryChainer();\r\n            //si on a la date,et pas de statut,de domaine,de num_regl et on ne veut pas afficher seulment ceux kon a edite et non ordoner par num_regl\r\n            if(args.typeDate && args.date && !args.statut && !args.domaine && !args.numenv && !args.numregl && !args.numpol && !args.nomtotal && !args.numreglStart && !args.numreglEnd ){\r\n                let l=null;\r\n                switch(args.typeDate){\r\n                    case \"date_naiss\":\r\n                        \r\n                         l=await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],\r\n                            where:{\r\n                                date_naiss:args.date,\r\n                            },offset:args.offset,limit:args.limit\r\n\r\n                        }).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    \r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    e.cheque=e.cheque==null?0:e.cheque;\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                 return nd;\r\n                            });\r\n                            return l;\r\n                \r\n                   \r\n                    case \"date_depot_treso\":\r\n                    \r\n                     l=await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                            date_depot_treso:args.date,\r\n                            \r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    e.cheque=e.cheque==null?0:e.cheque;\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                 return nd;\r\n                            });\r\n                            return l;\r\n                    case \"date_sort_treso\":\r\n                    l= await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                            date_sort_treso:args.date,\r\n                            \r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                 return nd;\r\n                            });\r\n                            return l;\r\n                    case \"date_depot_sign\":\r\n                    l= await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                            date_depot_sign:args.date,\r\n                           \r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                 return nd;\r\n                            });\r\n                            return l;\r\n                    case \"date_recep_sign_reg\":\r\n                     l=await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                            date_recep_sign_reg:args.date,\r\n                            \r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                            return l;\r\n                    case \"date_retrait_reg\":\r\n                    l= await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                            date_retrait_reg:args.date,\r\n                            \r\n                    },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                            return l;\r\n                            case \"dateRDV\":\r\n                            l= await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                                    dateRDV:args.date,\r\n                                    \r\n                            },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                        let promises=[];\r\n                                        let dispo;\r\n                                        res.forEach((r)=>{\r\n                                            promises.push(\r\n                                                Promise.all([\r\n                                                DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((infosurrgt)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                        infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                                    dispo.infoSurRgt=infosurrgt;\r\n                                                    dispo.etat=checkRdvDate(dispo);\r\n                                                    if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                                    return dispo;\r\n                                                })\r\n                                            );\r\n                                            if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                                promises.push(\r\n                                                    Promise.all([\r\n                                                        DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                        ]).spread((chequeState)=>{\r\n                                                            dispo=r.toJSON();\r\n                                                            dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                            return dispo;\r\n                                                        })\r\n                                                   );\r\n                                               }\r\n                                        });\r\n                                        return Promise.all(promises)\r\n                                        \r\n                                    }).then((dispos)=>{\r\n                                        let nd=dispos.map((e,i,arr)=>{\r\n                                            if(e.infoSurRgt.length>1){\r\n                                                let goodelem=e.infoSurRgt[0];\r\n                                                //console.log(\"reglement \"+e.wnrgt);\r\n                                                //console.dir(e);\r\n                                                e.infoSurRgt=[];\r\n                                                e.infoSurRgt.push(goodelem);\r\n                                            }\r\n                                            if(e.chequeState==null ||!e.cheque)\r\n                                                e.chequeState=\"INCONNU\";\r\n                                            return e;\r\n                                        });\r\n                                        //console.dir(nd);\r\n                                        \r\n                                         return nd;\r\n                                    }); \r\n                                    return l; \r\n                }\r\n                \r\n            }else if(args.typeDate && args.date && args.statut && !args.domaine && !args.numenv && !args.numregl && !args.numpol && !args.nomtotal && !args.numreglStart && !args.numreglEnd){\r\n                let l=null;\r\n                switch(args.typeDate){\r\n                    case \"date_naiss\":\r\n                    l= await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                            date_naiss:args.date,\r\n                            statut_reg_retirer:args.statut\r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                            return l;\r\n                    case \"date_depot_treso\":\r\n                     l=await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                            date_depot_treso:args.date,\r\n                            statut_reg_retirer:args.statut\r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                            return l;\r\n                    case \"date_sort_treso\":\r\n                     l=await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                            date_sort_treso:args.date,\r\n                             statut_reg_retirer:args.statut\r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                            return l;\r\n                    case \"date_depot_sign\":\r\n                     l=await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                            date_depot_sign:args.date,\r\n                           statut_reg_retirer:args.statut \r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                            return l;\r\n                    case \"date_recep_sign_reg\":\r\n                    l= await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                            date_recep_sign_reg:args.date,\r\n                            statut_reg_retirer:args.statut \r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                            return l;\r\n                    case \"date_retrait_reg\":\r\n                     l=await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                            date_retrait_reg:args.date,\r\n                             statut_reg_retirer:args.statut\r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                            return l;\r\n                            case \"dateRDV\":\r\n                             l=await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                                     dateRDV:args.date,\r\n                                     statut_reg_retirer:args.statut\r\n                                },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                        let promises=[];\r\n                                        let dispo;\r\n                                        res.forEach((r)=>{\r\n                                            promises.push(\r\n                                                Promise.all([\r\n                                                DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((infosurrgt)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                        infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                                    dispo.infoSurRgt=infosurrgt;\r\n                                                    dispo.etat=checkRdvDate(dispo);\r\n                                                    if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                                    return dispo;\r\n                                                })\r\n                                            );\r\n                                            if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                                promises.push(\r\n                                                    Promise.all([\r\n                                                        DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                        ]).spread((chequeState)=>{\r\n                                                            dispo=r.toJSON();\r\n                                                            dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                            return dispo;\r\n                                                        })\r\n                                                   );\r\n                                               }\r\n                                        });\r\n                                        return Promise.all(promises)\r\n                                        \r\n                                    }).then((dispos)=>{\r\n                                        let nd=dispos.map((e,i,arr)=>{\r\n                                            if(e.infoSurRgt.length>1){\r\n                                                let goodelem=e.infoSurRgt[0];\r\n                                                //console.log(\"reglement \"+e.wnrgt);\r\n                                                //console.dir(e);\r\n                                                e.infoSurRgt=[];\r\n                                                e.infoSurRgt.push(goodelem);\r\n                                            }\r\n                                            if(e.chequeState==null ||!e.cheque)\r\n                                                e.chequeState=\"INCONNU\";\r\n                                            return e;\r\n                                        });\r\n                                        //console.dir(nd);\r\n                                        \r\n                                         return nd;\r\n                                    });\r\n                                    return l;\r\n                }\r\n                \r\n            }else if(args.typeDate && args.date  && args.statut && args.domaine && !args.numenv && !args.numregl && !args.numpol && !args.nomtotal && !args.numreglStart && !args.numreglEnd){\r\n                console.log(args.typeDate);\r\n                let l=null;\r\n                switch(args.typeDate){\r\n                    case \"date_naiss\":\r\n                    l= await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                            date_naiss:args.date,\r\n                            statut_reg_retirer:args.statut,\r\n                            domaine:args.domaine\r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                 return nd;\r\n                            });\r\n                            return l;\r\n                    case \"date_depot_treso\":\r\n                     l=await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                            date_depot_treso:args.date,\r\n                            statut_reg_retirer:args.statut,\r\n                            domaine:args.domaine\r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                 return nd;\r\n                            });\r\n                            return l; \r\n                    case \"date_sort_treso\":\r\n                    l= await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                            date_sort_treso:args.date,\r\n                             statut_reg_retirer:args.statut,\r\n                             domaine:args.domaine\r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                 return nd;\r\n                            });\r\n                            return l;  \r\n                    case \"date_depot_sign\":\r\n                     l=await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                            date_depot_sign:args.date,\r\n                           statut_reg_retirer:args.statut ,\r\n                           domaine:args.domaine\r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                 return nd;\r\n                            });\r\n                            return l; \r\n                    case \"date_recep_sign_reg\":\r\n                     l=await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                            date_recep_sign_reg:args.date,\r\n                            statut_reg_retirer:args.statut ,\r\n                            domaine:args.domaine\r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                 return nd;\r\n                            });\r\n                            return l;   \r\n                    \r\n                    case \"date_retrait_reg\":\r\n                     l=await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                            date_retrait_reg:args.date,\r\n                             statut_reg_retirer:args.statut,\r\n                             domaine:args.domaine\r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                               // console.dir(dispos);\r\n                               let nd=dispos.map((e,i,arr)=>{\r\n                                if(e.infoSurRgt.length>1){\r\n                                    let goodelem=e.infoSurRgt[0];\r\n                                    //console.log(\"reglement \"+e.wnrgt);\r\n                                    //console.dir(e);\r\n                                    e.infoSurRgt=[];\r\n                                    e.infoSurRgt.push(goodelem);\r\n                                }\r\n                                if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                return e;\r\n                            });\r\n                            //console.dir(nd);\r\n                             return nd;\r\n                            });\r\n                            return l;\r\n                            case \"dateRDV\":\r\n                            l= await dispoSQL.findAll({attributes:{exclude:['id']},order:[['wnrgt','DESC']],where:{\r\n                                     dateRDV:args.date,\r\n                                     statut_reg_retirer:args.statut,\r\n                                     domaine:args.domaine\r\n                                },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                        let promises=[];\r\n                                        let dispo;\r\n                                        res.forEach((r)=>{\r\n                                            promises.push(\r\n                                                Promise.all([\r\n                                                DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((infosurrgt)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                        infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                                    dispo.infoSurRgt=infosurrgt;\r\n                                                    dispo.etat=checkRdvDate(dispo);\r\n                                                    if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                                    return dispo;\r\n                                                })\r\n                                            );\r\n                                            if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                                promises.push(\r\n                                                    Promise.all([\r\n                                                        DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                        ]).spread((chequeState)=>{\r\n                                                            dispo=r.toJSON();\r\n                                                            dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                            return dispo;\r\n                                                        })\r\n                                                   );\r\n                                               }\r\n                                            \r\n                                        });\r\n                                        return Promise.all(promises)\r\n                                        \r\n                                    }).then((dispos)=>{\r\n                                       // console.dir(dispos);\r\n                                       let nd=dispos.map((e,i,arr)=>{\r\n                                        if(e.infoSurRgt.length>1){\r\n                                            let goodelem=e.infoSurRgt[0];\r\n                                            //console.log(\"reglement \"+e.wnrgt);\r\n                                            //console.dir(e);\r\n                                            e.infoSurRgt=[];\r\n                                            e.infoSurRgt.push(goodelem);\r\n                                        }\r\n                                        if(e.chequeState==null ||!e.cheque)\r\n                                            e.chequeState=\"INCONNU\";\r\n                                        return e;\r\n                                    });\r\n                                    //console.dir(nd);\r\n                                     return nd;\r\n                                    });\r\n                                    return l;\r\n                    \r\n                }\r\n                \r\n            }else if(!args.typeDate && !args.date && !args.statut && !args.domaine && args.numenv && !args.numregl && !args.numpol && !args.nomtotal && !args.numreglStart && !args.numreglEnd){\r\n                console.log(\"son type est \"+typeof args.numenv+\"dans la requete du numero denvoi \"+args.numenv);\r\n               let l= await dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                             Num_envoi:parseInt(args.numenv,10)\r\n                        },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                console.dir(dispos);\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                return nd;\r\n                            });\r\n                            return l;\r\n            }else if(!args.typeDate && !args.date && !args.statut && !args.domaine && !args.numenv && args.numregl && !args.numpol && !args.nomtotal && !args.numreglStart && !args.numreglEnd){\r\n                console.log(\"son type est \"+typeof args.numregl);\r\n               let l= await dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                             wnrgt:parseInt(args.numregl,10)\r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                console.dir(dispos);\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                return nd;\r\n                            });\r\n                            return l;\r\n            }else if(!args.typeDate && !args.date && !args.statut && !args.domaine && !args.numenv && !args.numregl && args.numpol && !args.nomtotal && !args.numreglStart && !args.numreglEnd){\r\n                let l=await dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                             wnupo:args.numpol\r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                              //  console.dir(dispos);\r\n                              let nd=dispos.map((e,i,arr)=>{\r\n                                if(e.infoSurRgt.length>1){\r\n                                    let goodelem=e.infoSurRgt[0];\r\n                                    //console.log(\"reglement \"+e.wnrgt);\r\n                                    //console.dir(e);\r\n                                    e.infoSurRgt=[];\r\n                                    e.infoSurRgt.push(goodelem);\r\n                                }\r\n                                if(e.chequeState==null ||!e.cheque)\r\n                                    e.chequeState=\"INCONNU\";\r\n                                return e;\r\n                            });\r\n                            return nd;\r\n                            });\r\n                            return l;\r\n            }else if(!args.typeDate && !args.date && !args.statut && !args.domaine && !args.numenv && !args.numregl && !args.numpol && args.nomtotal && !args.numreglStart && !args.numreglEnd){\r\n               let l= await dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                             nom_beneficiaire:{\r\n                                    $like:'%'+args.nomtotal+'%'\r\n                                 }\r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                    \r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                               // console.dir(dispos);\r\n                               let nd=dispos.map((e,i,arr)=>{\r\n                                if(e.infoSurRgt.length>1){\r\n                                    let goodelem=e.infoSurRgt[0];\r\n                                    //console.log(\"reglement \"+e.wnrgt);\r\n                                    //console.dir(e);\r\n                                    e.infoSurRgt=[];\r\n                                    e.infoSurRgt.push(goodelem);\r\n                                }\r\n                                if(e.chequeState==null ||!e.cheque)\r\n                                    e.chequeState=\"INCONNU\";\r\n                                return e;\r\n                            });\r\n                            return nd;\r\n                            });\r\n                            return l;\r\n            }\r\n            else if(!args.typeDate && !args.date && args.statut && !args.domaine && !args.numenv && !args.numregl && !args.numpol && !args.nomtotal && !args.numreglStart && !args.numreglEnd){\r\n               let l= await dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                             statut_reg_retirer:args.statut\r\n                        },offset:args.offset,limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                            infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises).catch(reason=>{console.log(reason)})\r\n                                \r\n                            }).then((dispos)=>{\r\n                                console.dir(dispos);\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    if(e.chequeState==null ||!e.cheque)\r\n                                        e.chequeState=\"INCONNU\";\r\n                                    return e;\r\n                                });\r\n                                return nd;\r\n                            });\r\n                            return l;\r\n            }\r\n            else if(!args.typeDate && !args.date && !args.statut && args.domaine && !args.numenv && !args.numregl && !args.numpol && !args.nomtotal && !args.numreglStart && !args.numreglEnd){\r\n               let l= await dispoSQL.findAll({\r\n                    attributes:{exclude:['id']},\r\n                    where:{domaine:args.domaine},\r\n                    order:[['wnrgt','DESC']],\r\n                    offset:args.offset,\r\n                    limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                            promises.push(\r\n                                Promise.all([\r\n                                    DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                    ]).spread((chequeState)=>{\r\n                                        dispo=r.toJSON();\r\n                                        dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                        return dispo;\r\n                                    })\r\n                               );\r\n                           }\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                // console.dir(dispos);\r\n                //on enleve les doublons dans l'array de inforeg dispo\r\n                let nd=dispos.map((e,i,arr)=>{\r\n                    if(e.infoSurRgt.length>1){\r\n                        let goodelem=e.infoSurRgt[0];\r\n                        //console.log(\"reglement \"+e.wnrgt);\r\n                        //console.dir(e);\r\n                        e.infoSurRgt=[];\r\n                        e.infoSurRgt.push(goodelem);\r\n                    }\r\n                    if(e.chequeState==null ||!e.cheque)\r\n                        e.chequeState=\"INCONNU\";\r\n                    return e;\r\n                });\r\n                return nd;\r\n                });\r\n                return l;\r\n            }\r\n            else if(!args.typeDate && !args.date && !args.statut && !args.domaine  && !args.numenv && !args.numregl && !args.numpol && !args.nomtotal && args.numreglStart && args.numreglEnd){\r\n               let l= await  dispoSQL.findAll({\r\n                    attributes:{exclude:['id']},\r\n                    where:{\r\n                        wnrgt:{\r\n                            $between:[args.numreglStart,args.numreglEnd]\r\n                        }\r\n                    },\r\n                    order:[['wnrgt','DESC']],\r\n                    offset:args.offset,\r\n                    limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                            promises.push(\r\n                                Promise.all([\r\n                                    DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                    ]).spread((chequeState)=>{\r\n                                        dispo=r.toJSON();\r\n                                        dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                        return dispo;\r\n                                    })\r\n                               );\r\n                           }\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                // console.dir(dispos);\r\n                //on enleve les doublons dans l'array de inforeg dispo\r\n                let nd=dispos.map((e,i,arr)=>{\r\n                    if(e.infoSurRgt.length>1){\r\n                        let goodelem=e.infoSurRgt[0];\r\n                        //console.log(\"reglement \"+e.wnrgt);\r\n                        //console.dir(e);\r\n                        e.infoSurRgt=[];\r\n                        e.infoSurRgt.push(goodelem);\r\n                    }\r\n                    if(e.chequeState==null ||!e.cheque)\r\n                        e.chequeState=\"INCONNU\";\r\n                    return e;\r\n                });\r\n                return nd;\r\n                });\r\n                return l;\r\n            }\r\n            else{\r\n                //on affiche tout et on ordonne par date de la demande\r\n               let l= await dispoSQL.findAll({\r\n                                        attributes:{exclude:['id']},\r\n                                        order:[['wnrgt','DESC']],\r\n                                        offset:args.offset,\r\n                                        limit:args.limit}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    \r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                            infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                                        promises.push(\r\n                                            Promise.all([\r\n                                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                                ]).spread((chequeState)=>{\r\n                                                    dispo=r.toJSON();\r\n                                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                                    return dispo;\r\n                                                })\r\n                                           );\r\n                                       }\r\n                                    /*promises.push(                                        Promise.all([                                            DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})                                            ]).spread((chequeState)=>{                                                dispo=r.toJSON();                                                dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;                                                return dispo;                                            })                                       );*/\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                               // console.dir(dispos);\r\n                               //on enleve les doublons dans l'array de inforeg dispo\r\n                               let nd=dispos.map((e,i,arr)=>{\r\n                                if(e.infoSurRgt.length>1){\r\n                                    let goodelem=e.infoSurRgt[0];\r\n                                    //console.log(\"reglement \"+e.wnrgt);\r\n                                    //console.dir(e);\r\n                                    e.infoSurRgt=[];\r\n                                    e.infoSurRgt.push(goodelem);\r\n                                }\r\n                                if(e.chequeState==null ||!e.cheque)\r\n                                    e.chequeState=\"INCONNU\";\r\n                                return e;\r\n                            });\r\n                            return nd;\r\n                            });\r\n               return l;\r\n            }\r\n            \r\n        },\r\n        consultDispo(_,args){\r\n            let query=\"exec info_reg_dispo :numero_reg,:domaine \";\r\n            let uquery=\"select * from exp.reguser where redac like :red\"; \r\n            let chequeQuery=\"select Dbo.check_etat_cheq(:numcheque) as chequeState\";   \r\n            //Avec une restriction sur lq date de rgt\r\n            if(args.startDate && args.endDate && !args.numpolice && !args.numrgt && !args.numenv && !args.numcheque && !args.nomtotal && !args.birthdate){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    date_depot_treso:{\r\n                           $between:[args.startDate,args.endDate]\r\n                        }\r\n               },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                       let promises=[];\r\n                       let dispo;\r\n                       res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                            promises.push(\r\n                                Promise.all([\r\n                                    DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                    ]).spread((chequeState)=>{\r\n                                        dispo=r.toJSON();\r\n                                        dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                        return dispo;\r\n                                    })\r\n                               );\r\n                           }\r\n                           promises.push(\r\n                               Promise.all([\r\n                               DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                               ]).spread((infosurrgt)=>{\r\n                                   dispo=r.toJSON();\r\n                                   infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                   dispo.infoSurRgt=infosurrgt;\r\n                                   dispo.etat=checkRdvDate(dispo);\r\n                                   if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                   return dispo;\r\n                               })\r\n                           );\r\n                       });\r\n                       return Promise.all(promises)\r\n                       \r\n                   }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        if(e.chequeState==null ||!e.cheque)\r\n                            e.chequeState=\"INCONNU\";\r\n                        return e;\r\n                    });\r\n                    return nd;\r\n                   });\r\n            }\r\n            else if(args.startDate && args.endDate && args.numpolice && !args.numrgt && !args.numenv && !args.numcheque && !args.birthdate && !args.nomtotal){\r\n                \r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    wnupo:parseInt(args.numpolice),\r\n                    date_depot_treso:{\r\n                           $between:[args.startDate,args.endDate]\r\n                        }\r\n               },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                       let promises=[];\r\n                       let dispo;\r\n                       res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        \r\n                        if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                            promises.push(\r\n                                Promise.all([\r\n                                    DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                    ]).spread((chequeState)=>{\r\n                                        dispo=r.toJSON();\r\n                                        dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                        return dispo;\r\n                                    })\r\n                               );\r\n                           }\r\n                           promises.push(\r\n                               Promise.all([\r\n                               DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                               ]).spread((infosurrgt)=>{\r\n                                   dispo=r.toJSON();\r\n                                   infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                   dispo.infoSurRgt=infosurrgt;\r\n                                   dispo.etat=checkRdvDate(dispo);\r\n                                   if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                   return dispo;\r\n                               })\r\n                           );\r\n                       });\r\n                       return Promise.all(promises)\r\n                       \r\n                   }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        if(e.chequeState==null ||!e.cheque)\r\n                            e.chequeState=\"INCONNU\";\r\n                        return e;\r\n                    });\r\n                    return nd;\r\n                   });\r\n \r\n            }\r\n            else if(args.startDate && args.endDate && args.numpolice && !args.numrgt && !args.numenv && !args.numcheque && args.birthdate && !args.nomtotal){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    wnupo:parseInt(args.numpolice),\r\n                    date_naiss:args.birthdate,\r\n                    date_depot_treso:{\r\n                           $between:[args.startDate,args.endDate]\r\n                        }\r\n               },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                       let promises=[];\r\n                       let dispo;\r\n                       res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                            promises.push(\r\n                                Promise.all([\r\n                                    DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                    ]).spread((chequeState)=>{\r\n                                        dispo=r.toJSON();\r\n                                        dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                        return dispo;\r\n                                    })\r\n                               );\r\n                           }\r\n                           promises.push(\r\n                               Promise.all([\r\n                               DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                               ]).spread((infosurrgt)=>{\r\n                                   dispo=r.toJSON();\r\n                                   infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                   dispo.infoSurRgt=infosurrgt;\r\n                                   dispo.etat=checkRdvDate(dispo);\r\n                                   if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                   return dispo;\r\n                               })\r\n                           );\r\n                       });\r\n                       return Promise.all(promises)\r\n                       \r\n                   }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        if(e.chequeState==null ||!e.cheque)\r\n                            e.chequeState=\"INCONNU\";\r\n                        return e;\r\n                    });\r\n                    return nd;\r\n                   });\r\n \r\n            }\r\n            else if(args.startDate && args.endDate && args.numpolice && args.birthdate && args.nomtotal && !args.numrgt && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    wnupo:parseInt(args.numpolice),\r\n                    nom_beneficiaire:{\r\n                        $like:'%'+args.nomtotal+'%'\r\n                    },\r\n                    date_naiss:args.birthdate,\r\n                    date_depot_treso:{\r\n                           $between:[args.startDate,args.endDate]\r\n                        }\r\n               },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                       let promises=[];\r\n                       let dispo;\r\n                       res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                            promises.push(\r\n                                Promise.all([\r\n                                    DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                    ]).spread((chequeState)=>{\r\n                                        dispo=r.toJSON();\r\n                                        dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                        return dispo;\r\n                                    })\r\n                               );\r\n                           }\r\n                           promises.push(\r\n                               Promise.all([\r\n                               DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                               ]).spread((infosurrgt)=>{\r\n                                   dispo=r.toJSON();\r\n                                   infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                   dispo.infoSurRgt=infosurrgt;\r\n                                   dispo.etat=checkRdvDate(dispo);\r\n                                   if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                   return dispo;\r\n                               })\r\n                           );\r\n                       });\r\n                       return Promise.all(promises)\r\n                       \r\n                   }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        if(e.chequeState==null ||!e.cheque)\r\n                            e.chequeState=\"INCONNU\";\r\n                        return e;\r\n                    });\r\n                    return nd;\r\n                   });\r\n \r\n            }\r\n            else if(!args.startDate && !args.endDate && args.numpolice && args.birthdate && !args.numrgt && !args.numenv && !args.nomtotal && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    wnupo:parseInt(args.numpolice),\r\n                    date_naiss:args.birthdate,\r\n                    // statut_reg_retirer:'PRET'\r\n                },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                            promises.push(\r\n                                Promise.all([\r\n                                    DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                    ]).spread((chequeState)=>{\r\n                                        dispo=r.toJSON();\r\n                                        dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                        return dispo;\r\n                                    })\r\n                               );\r\n                           }\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        if(e.chequeState==null ||!e.cheque)\r\n                            e.chequeState=\"INCONNU\";\r\n                        return e;\r\n                    });\r\n                    return nd;\r\n                });\r\n \r\n            }else if(!args.startDate && !args.endDate && args.numpolice && !args.birthdate && !args.numrgt && !args.numenv && args.nomtotal && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    wnupo:parseInt(args.numpolice),\r\n                    nom_beneficiaire:{\r\n                                    $like:'%'+args.nomtotal+'%'\r\n                                 },\r\n                     //statut_reg_retirer:'PRET'\r\n                },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                            promises.push(\r\n                                Promise.all([\r\n                                    DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                    ]).spread((chequeState)=>{\r\n                                        dispo=r.toJSON();\r\n                                        dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                        return dispo;\r\n                                    })\r\n                               );\r\n                           }\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        if(e.chequeState==null ||!e.cheque)\r\n                            e.chequeState=\"INCONNU\";\r\n                        return e;\r\n                    });\r\n                    return nd;\r\n                });\r\n \r\n            }else if(!args.startDate && !args.endDate && !args.numpolice && args.birthdate && !args.nomtotal && !args.numrgt && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    date_naiss:args.birthdate,\r\n                    // statut_reg_retirer:'PRET'\r\n            },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                let promises=[];\r\n                let dispo;\r\n                res.forEach((r)=>{\r\n                    promises.push(\r\n                        Promise.all([\r\n                        DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                        ]).spread((redac)=>{\r\n                            dispo=r.toJSON();\r\n                            dispo.infosRedac=redac;\r\n                            return dispo;\r\n                        })\r\n                    );\r\n                    if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                        promises.push(\r\n                            Promise.all([\r\n                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                ]).spread((chequeState)=>{\r\n                                    dispo=r.toJSON();\r\n                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                    return dispo;\r\n                                })\r\n                           );\r\n                       }\r\n                    promises.push(\r\n                        Promise.all([\r\n                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                        ]).spread((infosurrgt)=>{\r\n                            dispo=r.toJSON();\r\n                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                            infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                            dispo.infoSurRgt=infosurrgt;\r\n                            dispo.etat=checkRdvDate(dispo);\r\n                            if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                            return dispo;\r\n                        })\r\n                    );\r\n                });\r\n                return Promise.all(promises)\r\n                \r\n            }).then((dispos)=>{\r\n                let nd=dispos.map((e,i,arr)=>{\r\n                    if(e.infoSurRgt.length>1){\r\n                        let goodelem=e.infoSurRgt[0];\r\n                        //console.log(\"reglement \"+e.wnrgt);\r\n                        //console.dir(e);\r\n                        e.infoSurRgt=[];\r\n                        e.infoSurRgt.push(goodelem);\r\n                    }\r\n                    if(e.chequeState==null ||!e.cheque)\r\n                        e.chequeState=\"INCONNU\";\r\n                    return e;\r\n                });\r\n                return nd;\r\n            });\r\n \r\n            }else if(!args.startDate && !args.endDate && !args.numpolice && args.birthdate && args.nomtotal && !args.numrgt && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    date_naiss:args.birthdate,\r\n                    nom_beneficiaire:{\r\n                                    $like:'%'+args.nomtotal+'%'\r\n                                 },\r\n                     //statut_reg_retirer:'PRET'\r\n                },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                            promises.push(\r\n                                Promise.all([\r\n                                    DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                    ]).spread((chequeState)=>{\r\n                                        dispo=r.toJSON();\r\n                                        dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                        return dispo;\r\n                                    })\r\n                               );\r\n                           }\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        if(e.chequeState==null ||!e.cheque)\r\n                            e.chequeState=\"INCONNU\";\r\n                        return e;\r\n                    });\r\n                    return nd;\r\n                });\r\n \r\n            }else if(!args.startDate && !args.endDate && !args.numpolice && !args.birthdate && args.nomtotal && !args.numrgt && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    nom_beneficiaire:{\r\n                                    $like:'%'+args.nomtotal+'%'\r\n                                 },\r\n                    // statut_reg_retirer:'PRET'\r\n                },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                            promises.push(\r\n                                Promise.all([\r\n                                    DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                    ]).spread((chequeState)=>{\r\n                                        dispo=r.toJSON();\r\n                                        dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                        return dispo;\r\n                                    })\r\n                               );\r\n                           }\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        if(e.chequeState==null ||!e.cheque)\r\n                            e.chequeState=\"INCONNU\";\r\n                        return e;\r\n                    });\r\n                    return nd;\r\n                });\r\n \r\n            }else if(!args.startDate && !args.endDate && args.numpolice && args.birthdate && args.nomtotal && !args.numrgt && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    wnupo:parseInt(args.numpolice),\r\n                    date_naiss:args.birthdate,\r\n                    nom_beneficiaire:{\r\n                                    $like:'%'+args.nomtotal+'%'\r\n                                 },\r\n                     //statut_reg_retirer:'PRET'\r\n                },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                            promises.push(\r\n                                Promise.all([\r\n                                    DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                    ]).spread((chequeState)=>{\r\n                                        dispo=r.toJSON();\r\n                                        dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                        return dispo;\r\n                                    })\r\n                               );\r\n                           }\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        if(e.chequeState==null ||!e.cheque)\r\n                            e.chequeState=\"INCONNU\";\r\n                        return e;\r\n                    });\r\n                    return nd;\r\n                });\r\n \r\n            }else if(!args.startDate && !args.endDate && args.numpolice && !args.birthdate && !args.nomtotal && !args.numrgt && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    wnupo:parseInt(args.numpolice),\r\n                     //statut_reg_retirer:'PRET'\r\n                },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                            promises.push(\r\n                                Promise.all([\r\n                                    DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                    ]).spread((chequeState)=>{\r\n                                        dispo=r.toJSON();\r\n                                        dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                        return dispo;\r\n                                    })\r\n                               );\r\n                           }\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        if(e.chequeState==null ||!e.cheque)\r\n                            e.chequeState=\"INCONNU\";\r\n                        return e;\r\n                    });\r\n                    return nd;\r\n                });\r\n \r\n            }else if(!args.startDate && !args.endDate && !args.numpolice && !args.birthdate && !args.nomtotal && args.numrgt && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    wnrgt:parseInt(args.numrgt),\r\n                     //statut_reg_retirer:'PRET'\r\n                },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                            promises.push(\r\n                                Promise.all([\r\n                                    DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                    ]).spread((chequeState)=>{\r\n                                        dispo=r.toJSON();\r\n                                        dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                        return dispo;\r\n                                    })\r\n                               );\r\n                           }\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        if(e.chequeState==null ||!e.cheque)\r\n                            e.chequeState=\"INCONNU\";\r\n                        return e;\r\n                    });\r\n                    return nd;\r\n                });\r\n \r\n            }else if(!args.startDate && !args.endDate && !args.numpolice && !args.birthdate && !args.nomtotal && !args.numrgt && args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    Num_envoi:parseInt(args.numenv),\r\n                     //statut_reg_retirer:'PRET'\r\n                },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                            promises.push(\r\n                                Promise.all([\r\n                                    DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                    ]).spread((chequeState)=>{\r\n                                        dispo=r.toJSON();\r\n                                        dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                        return dispo;\r\n                                    })\r\n                               );\r\n                           }\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        if(e.chequeState==null ||!e.cheque)\r\n                            e.chequeState=\"INCONNU\";\r\n                        return e;\r\n                    });\r\n                    return nd;\r\n                });\r\n \r\n            }else if(!args.startDate && !args.endDate && !args.numpolice && !args.birthdate && !args.nomtotal && !args.numrgt && !args.numenv && args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    cheque:parseInt(args.numcheque),\r\n                     //statut_reg_retirer:'PRET'\r\n                },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                            promises.push(\r\n                                Promise.all([\r\n                                    DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                    ]).spread((chequeState)=>{\r\n                                        dispo=r.toJSON();\r\n                                        dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                        return dispo;\r\n                                    })\r\n                               );\r\n                           }\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        if(e.chequeState==null ||!e.cheque)\r\n                            e.chequeState=\"INCONNU\";\r\n                        return e;\r\n                    });\r\n                    return nd;\r\n                });\r\n \r\n            }else{\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                   //statut_reg_retirer:'PRET'\r\n                   redac:{\r\n                       $not:\"ADM\"\r\n                   }\r\n               },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                   let promises=[];\r\n                   let dispo;\r\n                   res.forEach((r)=>{\r\n                       \r\n                       promises.push(\r\n                           Promise.all([\r\n                           DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                           ]).spread((redac)=>{\r\n                               dispo=r.toJSON();\r\n                               dispo.infosRedac=redac;\r\n                               return dispo;\r\n                           })\r\n                       );\r\n                       if(r.cheque && !r.Comments.includes(\"%MAN%\")){\r\n                        promises.push(\r\n                            Promise.all([\r\n                                DBSQLSERVER.query(chequeQuery,{ replacements:{numcheque:r.cheque},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                ]).spread((chequeState)=>{\r\n                                    dispo=r.toJSON();\r\n                                    dispo.chequeState=chequeState[0].chequeState==null?\"INCONNU\":chequeState[0].chequeState;\r\n                                    return dispo;\r\n                                })\r\n                           );\r\n                       }\r\n                       \r\n                       promises.push(\r\n                           Promise.all([\r\n                           DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                           ]).spread((infosurrgt)=>{\r\n                               dispo=r.toJSON();\r\n                               infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                               infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                               dispo.infoSurRgt=infosurrgt;\r\n                               dispo.etat=checkRdvDate(dispo);\r\n                               if(typeof dispo.etat == \"undefined\")\r\n                                   dispo.etat={\r\n                                       nbj:-1,\r\n                                       alerte:\"ERROR\"\r\n                                       };\r\n                               return dispo;\r\n                           })\r\n                       );\r\n                   });\r\n                   return Promise.all(promises)\r\n                   \r\n               }).then((dispos)=>{\r\n                let nd=dispos.map((e,i,arr)=>{\r\n                    if(e.infoSurRgt.length>1){\r\n                        let goodelem=e.infoSurRgt[0];\r\n                        //console.log(\"reglement \"+e.wnrgt);\r\n                        //console.dir(e);\r\n                        e.infoSurRgt=[];\r\n                        e.infoSurRgt.push(goodelem);\r\n                    }\r\n                    if(e.chequeState==null ||!e.cheque)\r\n                        e.chequeState=\"INCONNU\";\r\n                    return e;\r\n                });\r\n                return nd;\r\n               });\r\n           }\r\n        },\r\n\r\n        \r\n        consultDispoBank(_,args){\r\n            let query=\"exec info_reg_dispo :numero_reg,:domaine \";\r\n            let uquery=\"select * from exp.reguser where redac like :red\"; \r\n            //Avec une restriction sur lq date de rgt\r\n            if(args.startDate && args.endDate && !args.numrgt && !args.nomtotal && !args.birthdate && !args.numpolice && args.banque && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    date_retrait_reg:{\r\n                           $between:[args.startDate,args.endDate]\r\n                        },\r\n                        statut_reg_retirer:'SORTIE',\r\n                        banque:args.banque,\r\n                        /*$or:[\r\n                            {\r\n                                statut_reg_retirer:'SORTIE'\r\n                            },\r\n                            {\r\n                                statut_reg_retirer:'REFUSER'\r\n                            }\r\n                        ]*/\r\n                        \r\n               },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                       let promises=[];\r\n                       let dispo;\r\n                       res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                           promises.push(\r\n                               Promise.all([\r\n                               DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                               ]).spread((infosurrgt)=>{\r\n                                   dispo=r.toJSON();\r\n                                   infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                   infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                   dispo.infoSurRgt=infosurrgt;\r\n                                   dispo.etat=checkRdvDate(dispo);\r\n                                   if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                   return dispo;\r\n                               })\r\n                           );\r\n                       });\r\n                       return Promise.all(promises)\r\n                       \r\n                   }).then((dispos)=>{\r\n                       let nd=dispos.map((e,i,arr)=>{\r\n                           if(e.infoSurRgt.length>1){\r\n                               let goodelem=e.infoSurRgt[0];\r\n                               //console.log(\"reglement \"+e.wnrgt);\r\n                               //console.dir(e);\r\n                               e.infoSurRgt=[];\r\n                               e.infoSurRgt.push(goodelem);\r\n                           }\r\n                           return e;\r\n                       });\r\n                       //console.dir(nd);\r\n                       \r\n                        return nd;\r\n                   });\r\n            }\r\n            else if(args.startDate && args.endDate && args.numrgt && !args.birthdate && args.banque && !args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque){\r\n\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    wnupo:parseInt(args.numrgt),\r\n                    date_retrait_reg:{\r\n                           $between:[args.startDate,args.endDate]\r\n                        },\r\n                        statut_reg_retirer:'SORTIE',\r\n                        banque:args.banque,\r\n                        /*$or:[\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'731%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'732%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'724%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'7245%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'784%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'7845%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'760%'\r\n                                }\r\n                            },\r\n                        ]*/\r\n                       /* $or:[\r\n                            {\r\n                                statut_reg_retirer:'SORTIE'\r\n                            },\r\n                            {\r\n                                statut_reg_retirer:'REFUSER'\r\n                            }\r\n                        ]*/\r\n               },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                       let promises=[];\r\n                       let dispo;\r\n                       res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                           promises.push(\r\n                               Promise.all([\r\n                               DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                               ]).spread((infosurrgt)=>{\r\n                                   dispo=r.toJSON();\r\n                                   infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                   dispo.infoSurRgt=infosurrgt;\r\n                                   dispo.etat=checkRdvDate(dispo);\r\n                                   if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                   return dispo;\r\n                               })\r\n                           );\r\n                       });\r\n                       return Promise.all(promises)\r\n                       \r\n                   }).then((dispos)=>{\r\n                       let nd=dispos.map((e,i,arr)=>{\r\n                           if(e.infoSurRgt.length>1){\r\n                               let goodelem=e.infoSurRgt[0];\r\n                               //console.log(\"reglement \"+e.wnrgt);\r\n                               //console.dir(e);\r\n                               e.infoSurRgt=[];\r\n                               e.infoSurRgt.push(goodelem);\r\n                           }\r\n                           return e;\r\n                       });\r\n                       //console.dir(nd);\r\n                       \r\n                        return nd;\r\n                   });\r\n \r\n            }\r\n            else if(args.startDate && args.endDate && args.numrgt && args.banque && args.birthdate && !args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    wnrgt:parseInt(args.numrgt),\r\n                    date_naiss:args.birthdate,\r\n                    statut_reg_retirer:'SORTIE',\r\n                    banque:args.banque,\r\n                   /* $or:[\r\n                        {\r\n                            statut_reg_retirer:'SORTIE'\r\n                        },\r\n                        {\r\n                            statut_reg_retirer:'REFUSER'\r\n                        }\r\n                    ],*/\r\n                    date_retrait_reg:{\r\n                           $between:[args.startDate,args.endDate]\r\n                        },\r\n                        /*$or:[\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'731%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'732%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'724%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'7245%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'784%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'7845%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'760%'\r\n                                }\r\n                            },\r\n                        ]*/\r\n               },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                       let promises=[];\r\n                       let dispo;\r\n                       res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                           promises.push(\r\n                               Promise.all([\r\n                               DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                               ]).spread((infosurrgt)=>{\r\n                                   dispo=r.toJSON();\r\n                                   infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                   dispo.infoSurRgt=infosurrgt;\r\n                                   dispo.etat=checkRdvDate(dispo);\r\n                                   if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                   return dispo;\r\n                               })\r\n                           );\r\n                       });\r\n                       return Promise.all(promises)\r\n                       \r\n                   }).then((dispos)=>{\r\n                       let nd=dispos.map((e,i,arr)=>{\r\n                           if(e.infoSurRgt.length>1){\r\n                               let goodelem=e.infoSurRgt[0];\r\n                               //console.log(\"reglement \"+e.wnrgt);\r\n                               //console.dir(e);\r\n                               e.infoSurRgt=[];\r\n                               e.infoSurRgt.push(goodelem);\r\n                           }\r\n                           return e;\r\n                       });\r\n                       //console.dir(nd);\r\n                       \r\n                        return nd;\r\n                   });\r\n \r\n            }\r\n            else if(args.startDate && args.endDate && args.banque && args.numrgt && args.birthdate && args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    wnrgt:parseInt(args.numrgt),\r\n                    nom_beneficiaire:{\r\n                        $like:'%'+args.nomtotal+'%'\r\n                    },\r\n                    date_naiss:args.birthdate,\r\n                    date_retrait_reg:{\r\n                           $between:[args.startDate,args.endDate]\r\n                        },\r\n                        statut_reg_retirer:'SORTIE',\r\n                        banque:args.banque,\r\n                        /*$or:[\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'731%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'732%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'724%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'7245%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'784%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'7845%'\r\n                                }\r\n                            },\r\n                            {\r\n                                wnupo:{\r\n                                    $like:'760%'\r\n                                }\r\n                            },\r\n                        ]*/\r\n                        /*$or:[\r\n                            {\r\n                                statut_reg_retirer:'SORTIE'\r\n                            },\r\n                            {\r\n                                statut_reg_retirer:'REFUSER'\r\n                            }\r\n                        ]*/\r\n               },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                       let promises=[];\r\n                       let dispo;\r\n                       res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                           promises.push(\r\n                               Promise.all([\r\n                               DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                               ]).spread((infosurrgt)=>{\r\n                                   dispo=r.toJSON();\r\n                                   infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                    infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                   dispo.infoSurRgt=infosurrgt;\r\n                                   dispo.etat=checkRdvDate(dispo);\r\n                                   if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                   return dispo;\r\n                               })\r\n                           );\r\n                       });\r\n                       return Promise.all(promises)\r\n                       \r\n                   }).then((dispos)=>{\r\n                       let nd=dispos.map((e,i,arr)=>{\r\n                           if(e.infoSurRgt.length>1){\r\n                               let goodelem=e.infoSurRgt[0];\r\n                               //console.log(\"reglement \"+e.wnrgt);\r\n                               //console.dir(e);\r\n                               e.infoSurRgt=[];\r\n                               e.infoSurRgt.push(goodelem);\r\n                           }\r\n                           return e;\r\n                       });\r\n                       //console.dir(nd);\r\n                       \r\n                        return nd;\r\n                   });\r\n \r\n            }\r\n            else if(!args.startDate && !args.endDate && args.numrgt && args.banque && args.birthdate && !args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    wnrgt:parseInt(args.numrgt),\r\n                    date_naiss:args.birthdate,\r\n                    statut_reg_retirer:'SORTIE',\r\n                    banque:args.banque,\r\n                    /*$or:[\r\n                        {\r\n                            wnupo:{\r\n                                $like:'731%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'732%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'724%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'7245%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'784%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'7845%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'760%'\r\n                            }\r\n                        },\r\n                    ]*/\r\n                    /*$or:[\r\n                        {\r\n                            statut_reg_retirer:'SORTIE'\r\n                        },\r\n                        {\r\n                            statut_reg_retirer:'REFUSER'\r\n                        }\r\n                    ]*/\r\n                    // statut_reg_retirer:'PRET'\r\n                },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        return e;\r\n                    });\r\n                    //console.dir(nd);\r\n                    \r\n                     return nd;\r\n                });\r\n \r\n            }else if(!args.startDate && !args.endDate && args.numrgt && args.banque && !args.birthdate && args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    wnrgt:parseInt(args.numrgt),\r\n                    statut_reg_retirer:'SORTIE',\r\n                    banque:args.banque,\r\n                    nom_beneficiaire:{\r\n                                    $like:'%'+args.nomtotal+'%'\r\n                                 },\r\n                                 /*$or:[\r\n                                    {\r\n                                        wnupo:{\r\n                                            $like:'731%'\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        wnupo:{\r\n                                            $like:'732%'\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        wnupo:{\r\n                                            $like:'724%'\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        wnupo:{\r\n                                            $like:'7245%'\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        wnupo:{\r\n                                            $like:'784%'\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        wnupo:{\r\n                                            $like:'7845%'\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        wnupo:{\r\n                                            $like:'760%'\r\n                                        }\r\n                                    },\r\n                                 ]*/\r\n                   /* $or:[\r\n                            {\r\n                                statut_reg_retirer:'SORTIE'\r\n                            },\r\n                            {\r\n                                statut_reg_retirer:'REFUSER'\r\n                            }\r\n                    ]*/\r\n                     //statut_reg_retirer:'PRET'\r\n                },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        return e;\r\n                    });\r\n                    //console.dir(nd);\r\n                    \r\n                     return nd;\r\n                });\r\n \r\n            }else if(!args.startDate && !args.endDate && args.numrgt && args.banque && !args.birthdate && !args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    wnrgt:parseInt(args.numrgt),\r\n                    statut_reg_retirer:'SORTIE',\r\n                    banque:args.banque,\r\n                    /*$or:[\r\n                        {\r\n                            wnupo:{\r\n                                $like:'731%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'732%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'724%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'7245%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'784%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'7845%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'760%'\r\n                            }\r\n                        },\r\n                    ]*/\r\n                   /* $or:[\r\n                            {\r\n                                statut_reg_retirer:'SORTIE'\r\n                            },\r\n                            {\r\n                                statut_reg_retirer:'REFUSER'\r\n                            }\r\n                    ]*/\r\n                     //statut_reg_retirer:'PRET'\r\n                },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        return e;\r\n                    });\r\n                    //console.dir(nd);\r\n                    \r\n                     return nd;\r\n                });\r\n \r\n            }else if(!args.startDate && !args.endDate && !args.numrgt && args.birthdate && args.banque && !args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    date_naiss:args.birthdate,\r\n                    statut_reg_retirer:'SORTIE',\r\n                    banque:args.banque,\r\n                    /*$or:[\r\n                        {\r\n                            wnupo:{\r\n                                $like:'731%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'732%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'724%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'7245%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'784%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'7845%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'760%'\r\n                            }\r\n                        },\r\n                    ]*/\r\n                    /*$or:[\r\n                        {\r\n                            statut_reg_retirer:'SORTIE'\r\n                        },\r\n                        {\r\n                            statut_reg_retirer:'REFUSER'\r\n                        }\r\n                    ]*/\r\n                    // statut_reg_retirer:'PRET'\r\n            },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                let promises=[];\r\n                let dispo;\r\n                res.forEach((r)=>{\r\n                    promises.push(\r\n                        Promise.all([\r\n                        DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                        ]).spread((redac)=>{\r\n                            dispo=r.toJSON();\r\n                            dispo.infosRedac=redac;\r\n                            return dispo;\r\n                        })\r\n                    );\r\n                    promises.push(\r\n                        Promise.all([\r\n                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                        ]).spread((infosurrgt)=>{\r\n                            dispo=r.toJSON();\r\n                            infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                            infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                            dispo.infoSurRgt=infosurrgt;\r\n                            dispo.etat=checkRdvDate(dispo);\r\n                            if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                            return dispo;\r\n                        })\r\n                    );\r\n                });\r\n                return Promise.all(promises)\r\n                \r\n            }).then((dispos)=>{\r\n                let nd=dispos.map((e,i,arr)=>{\r\n                    if(e.infoSurRgt.length>1){\r\n                        let goodelem=e.infoSurRgt[0];\r\n                        //console.log(\"reglement \"+e.wnrgt);\r\n                        //console.dir(e);\r\n                        e.infoSurRgt=[];\r\n                        e.infoSurRgt.push(goodelem);\r\n                    }\r\n                    return e;\r\n                });\r\n                //console.dir(nd);\r\n                \r\n                 return nd;\r\n            });\r\n \r\n            }else if(!args.startDate && !args.endDate && !args.numrgt && args.birthdate && args.banque && args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    date_naiss:args.birthdate,\r\n                    statut_reg_retirer:'SORTIE',\r\n                    banque:args.banque,\r\n                    nom_beneficiaire:{\r\n                                    $like:'%'+args.nomtotal+'%'\r\n                                 },\r\n                                 /*$or:[\r\n                                    {\r\n                                        wnupo:{\r\n                                            $like:'731%'\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        wnupo:{\r\n                                            $like:'732%'\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        wnupo:{\r\n                                            $like:'724%'\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        wnupo:{\r\n                                            $like:'7245%'\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        wnupo:{\r\n                                            $like:'784%'\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        wnupo:{\r\n                                            $like:'7845%'\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        wnupo:{\r\n                                            $like:'760%'\r\n                                        }\r\n                                    },\r\n                                ]*/\r\n                                 /*$or:[\r\n                                    {\r\n                                        statut_reg_retirer:'SORTIE'\r\n                                    },\r\n                                    {\r\n                                        statut_reg_retirer:'REFUSER'\r\n                                    }\r\n                                 ]*/\r\n                     //statut_reg_retirer:'PRET'\r\n                },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        return e;\r\n                    });\r\n                    //console.dir(nd);\r\n                    \r\n                     return nd;\r\n                });\r\n \r\n            }else if(!args.startDate && !args.endDate && !args.numrgt && !args.birthdate && args.nomtotal && args.banque && !args.numpolice && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    nom_beneficiaire:{\r\n                                    $like:'%'+args.nomtotal+'%'\r\n                                 },\r\n                                 statut_reg_retirer:'SORTIE',\r\n                                 banque:args.banque,\r\n                       /* $or:[\r\n                        {\r\n                            wnupo:{\r\n                                $like:'731%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'732%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'724%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'7245%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'784%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'7845%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'760%'\r\n                            }\r\n                        },\r\n                    ]*/\r\n                                 /*$or:[\r\n                                    {\r\n                                        statut_reg_retirer:'SORTIE'\r\n                                    },\r\n                                    {\r\n                                        statut_reg_retirer:'REFUSER'\r\n                                    }\r\n                                 ]*/\r\n                    // statut_reg_retirer:'PRET'\r\n                },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        return e;\r\n                    });\r\n                    //console.dir(nd);\r\n                    \r\n                     return nd;\r\n                });\r\n \r\n            }else if(!args.startDate && !args.endDate && args.numrgt && args.banque && args.birthdate && args.nomtotal && !args.numpolice && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    wnrgt:parseInt(args.numrgt),\r\n                    date_naiss:args.birthdate,\r\n                    statut_reg_retirer:'SORTIE',\r\n                    nom_beneficiaire:{\r\n                                    $like:'%'+args.nomtotal+'%'\r\n                                 },\r\n                    banque:args.banque,\r\n                    /*$or:[\r\n                    {\r\n                        wnupo:{\r\n                            $like:'731%'\r\n                        }\r\n                    },\r\n                    {\r\n                        wnupo:{\r\n                            $like:'732%'\r\n                        }\r\n                    },\r\n                    {\r\n                        wnupo:{\r\n                            $like:'724%'\r\n                        }\r\n                    },\r\n                    {\r\n                        wnupo:{\r\n                            $like:'7245%'\r\n                        }\r\n                    },\r\n                    {\r\n                        wnupo:{\r\n                            $like:'784%'\r\n                        }\r\n                    },\r\n                    {\r\n                        wnupo:{\r\n                            $like:'7845%'\r\n                        }\r\n                    },\r\n                    {\r\n                        wnupo:{\r\n                            $like:'760%'\r\n                        }\r\n                    },\r\n                ]*/\r\n                                /* $or:[\r\n                                    {\r\n                                        statut_reg_retirer:'SORTIE'\r\n                                    },\r\n                                    {\r\n                                        statut_reg_retirer:'REFUSER'\r\n                                    }\r\n                                 ]*/\r\n                     //statut_reg_retirer:'PRET'\r\n                },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        return e;\r\n                    });\r\n                    //console.dir(nd);\r\n                    \r\n                     return nd;\r\n                });\r\n \r\n            }else if(!args.startDate && !args.endDate && !args.numrgt && !args.birthdate && !args.nomtotal && args.numpolice && args.banque && !args.numenv && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    wnupo:parseInt(args.numpolice),\r\n                    statut_reg_retirer:'SORTIE',\r\n                    banque:args.banque,\r\n                    /*$or:[\r\n                        {\r\n                            wnupo:{\r\n                                $like:'731%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'732%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'724%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'7245%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'784%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'7845%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'760%'\r\n                            }\r\n                        },\r\n                    ]*/\r\n                                /* $or:[\r\n                                    {\r\n                                        statut_reg_retirer:'SORTIE'\r\n                                    },\r\n                                    {\r\n                                        statut_reg_retirer:'REFUSER'\r\n                                    }\r\n                                 ]*/\r\n                     //statut_reg_retirer:'PRET'\r\n                },order:[['wnupo','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        return e;\r\n                    });\r\n                    //console.dir(nd);\r\n                    \r\n                     return nd;\r\n                });\r\n \r\n            }else if(!args.startDate && !args.endDate && !args.numrgt && !args.birthdate && !args.nomtotal && !args.numpolice && args.numenv && args.banque && !args.numcheque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    Num_envoi:parseInt(args.numenv),\r\n                    statut_reg_retirer:'SORTIE',\r\n                    banque:args.banque,\r\n                    /*$or:[\r\n                        {\r\n                            wnupo:{\r\n                                $like:'731%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'732%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'724%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'7245%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'784%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'7845%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'760%'\r\n                            }\r\n                        },\r\n                    ]*/\r\n                                /* $or:[\r\n                                    {\r\n                                        statut_reg_retirer:'SORTIE'\r\n                                    },\r\n                                    {\r\n                                        statut_reg_retirer:'REFUSER'\r\n                                    }\r\n                                 ]*/\r\n                     //statut_reg_retirer:'PRET'\r\n                },order:[['wnupo','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        return e;\r\n                    });\r\n                    //console.dir(nd);\r\n                    \r\n                     return nd;\r\n                });\r\n \r\n            }else if(!args.startDate && !args.endDate && !args.numrgt && !args.birthdate && !args.nomtotal && !args.numpolice && !args.numenv && args.numcheque && args.banque){\r\n                return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    cheque:parseInt(args.numcheque),\r\n                    statut_reg_retirer:'SORTIE',\r\n                    banque:args.banque,\r\n                    /*$or:[\r\n                        {\r\n                            wnupo:{\r\n                                $like:'731%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'732%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'724%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'7245%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'784%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'7845%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'760%'\r\n                            }\r\n                        },\r\n                    ]*/\r\n                                /* $or:[\r\n                                    {\r\n                                        statut_reg_retirer:'SORTIE'\r\n                                    },\r\n                                    {\r\n                                        statut_reg_retirer:'REFUSER'\r\n                                    }\r\n                                 ]*/\r\n                     //statut_reg_retirer:'PRET'\r\n                },order:[['wnupo','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        return e;\r\n                    });\r\n                    //console.dir(nd);\r\n                    \r\n                     return nd;\r\n                });\r\n \r\n            }else if(args.banque!=\"\"){\r\n                 return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    //statut_reg_retirer:'PRET'\r\n                    //MRGGT:'C',\r\n                    statut_reg_retirer:'SORTIE',\r\n                    banque:args.banque,\r\n                    /*$or:[\r\n                        {\r\n                            wnupo:{\r\n                                $like:'731%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'732%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'724%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'7245%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'784%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'7845%'\r\n                            }\r\n                        },\r\n                        {\r\n                            wnupo:{\r\n                                $like:'760%'\r\n                            }\r\n                        },\r\n                    ]*/\r\n                    /*$or:[\r\n                        {\r\n                            statut_reg_retirer:'SORTIE'\r\n                        },\r\n                        {\r\n                            statut_reg_retirer:'REFUSER'\r\n                        }\r\n                    ]*/\r\n                },order:[['wnrgt','DESC']],offset:args.offset,limit:args.limit}).then((res)=>{\r\n                    let promises=[];\r\n                    let dispo;\r\n                    res.forEach((r)=>{\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((redac)=>{\r\n                                dispo=r.toJSON();\r\n                                dispo.infosRedac=redac;\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                        promises.push(\r\n                            Promise.all([\r\n                            DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                            ]).spread((infosurrgt)=>{\r\n                                dispo=r.toJSON();\r\n                                infosurrgt.MONTANT_BRUT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_BRUT,10));\r\n                                infosurrgt.MONTANT_NET_REGLEMENT=formatNumberInMoney(parseInt(infosurrgt.MONTANT_NET_REGLEMENT,10));\r\n                                dispo.infoSurRgt=infosurrgt;\r\n                                dispo.etat=checkRdvDate(dispo);\r\n                                if(typeof dispo.etat == \"undefined\")\r\n                                    dispo.etat={\r\n                                        nbj:-1,\r\n                                        alerte:\"ERROR\"\r\n                                        };\r\n                                return dispo;\r\n                            })\r\n                        );\r\n                    });\r\n                    return Promise.all(promises)\r\n                    \r\n                }).then((dispos)=>{\r\n                    let nd=dispos.map((e,i,arr)=>{\r\n                        if(e.infoSurRgt.length>1){\r\n                            let goodelem=e.infoSurRgt[0];\r\n                            //console.log(\"reglement \"+e.wnrgt);\r\n                            //console.dir(e);\r\n                            e.infoSurRgt=[];\r\n                            e.infoSurRgt.push(goodelem);\r\n                        }\r\n                        return e;\r\n                    });\r\n                    //console.dir(nd);\r\n                    \r\n                     return nd;\r\n                });\r\n            }\r\n        },\r\n        dataToExport(_,args){\r\n            let query=\"exec info_reg_dispo :numero_reg,:domaine \";\r\n            let uquery=\"select * from exp.reguser where redac like :red\"; \r\n            if(args.typeDate && args.startDate && args.endDate && (!args.domaine||args.domaine===\"TOUS\") ){\r\n                switch(args.typeDate){\r\n                    case \"date_depot_treso\":\r\n                    return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                             date_depot_treso:{\r\n                                    $between:[args.startDate,args.endDate]\r\n                                 }\r\n                        },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((redac)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infosRedac=redac;\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                    case \"date_sort_treso\":\r\n                    return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                             date_sort_treso:{\r\n                                    $between:[args.startDate,args.endDate]\r\n                                 }\r\n                        },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((redac)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infosRedac=redac;\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                    case \"date_depot_sign\":\r\n                    return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                             date_depot_sign:{\r\n                                    $between:[args.startDate,args.endDate]\r\n                                 }\r\n                        },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((redac)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infosRedac=redac;\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                    case \"date_sort_sign\":\r\n                    return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                             date_sort_sign:{\r\n                                    $between:[args.startDate,args.endDate]\r\n                                 }\r\n                        },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((redac)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infosRedac=redac;\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                    case \"date_recep_sign_reg\":\r\n                    return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                             date_recep_sign_reg:{\r\n                                    $between:[args.startDate,args.endDate]\r\n                                 }\r\n                        },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((redac)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infosRedac=redac;\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                    case \"date_retrait_reg\":\r\n                    return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                             date_retrait_reg:{\r\n                                    $between:[args.startDate,args.endDate]\r\n                                 }\r\n                        },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((redac)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infosRedac=redac;\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                        case \"date_naiss\":\r\n                    return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                             date_naiss:{\r\n                                    $between:[args.startDate,args.endDate]\r\n                                 }\r\n                        },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((redac)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infosRedac=redac;\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                }\r\n            }else if(args.typeDate && args.startDate && args.endDate && args.domaine && args.domaine!==\"TOUS\" ){\r\n                switch(args.typeDate){\r\n                    case \"date_depot_treso\":\r\n                    return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                            domaine:args.domaine,\r\n                             date_depot_treso:{\r\n                                    $between:[args.startDate,args.endDate]\r\n                                 }\r\n                        },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((redac)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infosRedac=redac;\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                    case \"date_sort_treso\":\r\n                    return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                        domaine:args.domaine,\r\n                             date_sort_treso:{\r\n                                    $between:[args.startDate,args.endDate]\r\n                                 }\r\n                        },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((redac)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infosRedac=redac;\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                    case \"date_depot_sign\":\r\n                    return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                        domaine:args.domaine,\r\n                             date_depot_sign:{\r\n                                    $between:[args.startDate,args.endDate]\r\n                                 }\r\n                        },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((redac)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infosRedac=redac;\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                    case \"date_sort_sign\":\r\n                    return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                        domaine:args.domaine,\r\n                             date_sort_sign:{\r\n                                    $between:[args.startDate,args.endDate]\r\n                                 }\r\n                        },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((redac)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infosRedac=redac;\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                    case \"date_recep_sign_reg\":\r\n                    return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                        domaine:args.domaine,\r\n                             date_recep_sign_reg:{\r\n                                    $between:[args.startDate,args.endDate]\r\n                                 }\r\n                        },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((redac)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infosRedac=redac;\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                    case \"date_retrait_reg\":\r\n                    return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                        domaine:args.domaine,\r\n                             date_retrait_reg:{\r\n                                    $between:[args.startDate,args.endDate]\r\n                                 }\r\n                        },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((redac)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infosRedac=redac;\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                            \r\n                        case \"date_naiss\":\r\n                         return dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                             date_naiss:{\r\n                                    $between:[args.startDate,args.endDate]\r\n                                 }\r\n                        },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                                let promises=[];\r\n                                let dispo;\r\n                                res.forEach((r)=>{\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(uquery,{ replacements:{red:r.redac},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((redac)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infosRedac=redac;\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                    promises.push(\r\n                                        Promise.all([\r\n                                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                                        ]).spread((infosurrgt)=>{\r\n                                            dispo=r.toJSON();\r\n                                            dispo.infoSurRgt=infosurrgt;\r\n                                            dispo.etat=checkRdvDate(dispo);\r\n                                            if(typeof dispo.etat == \"undefined\")\r\n                                                dispo.etat={\r\n                                                    nbj:-1,\r\n                                                    alerte:\"ERROR\"\r\n                                                    };\r\n                                            return dispo;\r\n                                        })\r\n                                    );\r\n                                });\r\n                                return Promise.all(promises)\r\n                                \r\n                            }).then((dispos)=>{\r\n                                let nd=dispos.map((e,i,arr)=>{\r\n                                    if(e.infoSurRgt.length>1){\r\n                                        let goodelem=e.infoSurRgt[0];\r\n                                        //console.log(\"reglement \"+e.wnrgt);\r\n                                        //console.dir(e);\r\n                                        e.infoSurRgt=[];\r\n                                        e.infoSurRgt.push(goodelem);\r\n                                    }\r\n                                    return e;\r\n                                });\r\n                                //console.dir(nd);\r\n                                \r\n                                 return nd;\r\n                            });\r\n                }\r\n            }else{\r\n                return [];\r\n            }\r\n\r\n        },\r\n         voirInfoReg(_,args){\r\n             if(!args.wnrgt && !args.domaine)\r\n                return [];\r\n             else{\r\n                 let query=\"exec info_reg_dispo :numero_reg,:domaine \";\r\n                return DBSQLSERVER.query(query,{\r\n                                replacements:{\r\n                                    numero_reg:args.wnrgt,\r\n                                    domaine:args.domaine\r\n                                },\r\n                                type:DBSQLSERVER.QueryTypes.SELECT\r\n                            });\r\n             }\r\n                 \r\n        },\r\n        \r\n           \r\n           \r\n\r\n       \r\n    },\r\n    Mutation:{\r\n        deleteUsers(_,args){\r\n             const codeArr=args.usercodes;\r\n            Meteor.users.remove({codeRedac:{\r\n                $in:codeArr\r\n            }});\r\n            userSQL.destroy({where:{\r\n                    Redac:codeArr\r\n                }});\r\n             return userSQL.findAll({attributes:{exclude:['id']},order:[['Nom','DESC']]});\r\n        }\r\n    },\r\n    Subscription: {\r\n        rgtUpdated: {\r\n          subscribe: pubsub.asyncIterator('rgtUpdated'),\r\n          resolve: (payload) => payload,\r\n          \r\n        }\r\n      }\r\n};\r\n\r\n \r\n\r\nexport default resolvers;","const schema=`\r\n        \r\n        type User{\r\n            username:String\r\n            uncrypted:String\r\n            nom:String\r\n            prenoms:String\r\n            fullname: String\r\n            codeRedac:String\r\n            role:String\r\n            createdAt:String\r\n        }\r\n        type UserSQL{\r\n            ulogin:String\r\n            mdp:String\r\n            nom:String\r\n            prenom:String\r\n            role:String\r\n            redac:String\r\n        }\r\n        type InfosREG{\r\n            DATE_SURVENANCE_SINISTRE:String\r\n            NOM_BENEFICIAIRE:String\r\n            NUMERO_BENEFICIAIRE:String\r\n            LIBELLE_SINISTRE:String\r\n            NUMERO_SINISTRE:String\r\n            NUMERO_REGLEMENT:String\r\n            NUMERO_CHEQUE:String\r\n            DECOMPTE:String\r\n            POLICE:String\r\n            DATE_REGLEMENT:String\r\n            DATE_RECEPTION:String\r\n            CAUSE_SINISTRE:String\r\n            TYPE_SINISTRE:String\r\n            MONTANT_BRUT:String\r\n            MONTANT_NET_REGLEMENT:String\r\n        }\r\n        type Alert{\r\n            nbj:Int\r\n            alerte:String\r\n        }\r\n        type DisporegSQL{\r\n            wasrg:String\r\n            wnrgt:Int\r\n            wnupo:Int\r\n            Num_envoi:Int\r\n            cheque:Int\r\n            nom_beneficiaire:String\r\n            date_naiss:String\r\n            date_depot_treso:String\r\n            date_sort_treso:String\r\n            date_depot_sign:String\r\n            date_recep_sign_reg:String\r\n            date_retrait_reg:String\r\n            statut_reg_retirer:String\r\n            domaine:String\r\n            redac:String\r\n            MNTGT:String\r\n            MRGGT:String\r\n            dateRDV:String\r\n            ValBank:String\r\n            Comments:String\r\n            CommentsBank:String\r\n            banque:String\r\n            chequeState:String\r\n            etat:Alert\r\n            infosRedac:[UserSQL]\r\n            infoSurRgt:[InfosREG]\r\n        }\r\n        type Query{\r\n            user(username:String):[User]\r\n            userSQL(nom:String,orderDesc:Boolean!):[UserSQL] \r\n            dataToExport(typeDate:String,startDate:String,endDate:String,domaine:String):[DisporegSQL]\r\n            consultDispo(startDate:String,endDate:String,numpolice:Int,numrgt:Int,numenv:Int,numcheque:Int,nomtotal:String,birthdate:String,offset:Int,limit:Int):[DisporegSQL]\r\n            listeDispo(typeDate:String,date:String,statut:String,domaine:String,numenv:Int,numregl:Int,numcheque:Int,numpol:Int,nomtotal:String,numreglStart:Int,numreglEnd:Int,offset:Int,limit:Int):[DisporegSQL]\r\n            consultDispoBank(startDate:String,endDate:String,numpolice:Int,banque:String,numrgt:Int,numenv:Int,numcheque:Int,nomtotal:String,birthdate:String,offset:Int,limit:Int):[DisporegSQL]\r\n            voirInfoReg(wnrgt:Int,domaine:String):[InfosREG]\r\n        }\r\n        type Subscription{\r\n            rgtUpdated(wnrgt:Int):DisporegSQL\r\n        }\r\n        type Mutation{\r\n            deleteUsers(usercodes:[String]!):[UserSQL]\r\n        }\r\n        schema{\r\n            query:Query\r\n            mutation:Mutation\r\n            subscription:Subscription\r\n        }\r\n\r\n`;\r\n\r\nexport default schema;","\r\nimport {Meteor} from 'meteor/meteor';\r\n\r\nexport default()=>{\r\n    Meteor.publish('CurrentUser',function(){\r\n        if(this.userId)\r\n        return Meteor.users.find({_id:this.userId},{fields:{role:1}});\r\n        else\r\n        this.ready();\r\n    });\r\n}","\r\nimport {Meteor} from 'meteor/meteor';\r\nimport {WhatsNew} from '../../imports/api/collections.js';\r\n\r\nexport default WhatsNewPub=()=>{\r\n    Meteor.publish('latestNews',function(){\r\n        return WhatsNew.find();\r\n       \r\n    });\r\n}","import {Meteor} from 'meteor/meteor';\r\nimport{Promise} from 'meteor/promise';\r\nconst PromiseB=require('bluebird');\r\nimport {Accounts} from 'meteor/accounts-base';\r\nimport Sequelize from 'sequelize';\r\nimport {userSQL,dispoSQL,DBSQL,DBSQLSERVER} from './graphql/connectors.js';\r\nimport {WhatsNew,RegUpdated,Historique} from '../imports/api/collections.js';\r\nimport {pubsub} from './graphql/resolvers';\r\nimport {moment} from 'meteor/momentjs:moment';\r\nimport {Email} from 'meteor/email';\r\nimport {checkRdvDateMD, frenchDateToEn} from '../imports/utils/utilitaires';\r\nimport {Excel} from 'meteor/netanelgilad:excel';\r\nconst fs = require('fs');\r\n\r\nconst json2xls=require('json2xls');\r\n\r\n\r\n\r\nexport default ()=>{\r\n    Meteor.methods({\r\n        sendEmail(to,from,subject,text){\r\n            check([to],[Array]);\r\n            check([from,subject,text],[String]);\r\n            this.unblock();\r\n            Email.send({to,from,subject,html:text});\r\n        },\r\n        updateNewsScreenTime(){\r\n            let currentUser=Meteor.users.findOne({_id:this.userId});\r\n            if(currentUser && currentUser.seenUpdateXtime<3){\r\n                console.log()\r\n                Meteor.users.update({_id:this.userId},{\r\n                    $set:{\r\n                        seenUpdateXtime:currentUser.seenUpdateXtime++,\r\n                        }\r\n                });\r\n                console.log(\"in update screentime\")\r\n                console.dir(currentUser); \r\n            }else if(currentUser && currentUser.seenUpdateXtime==3){\r\n                Meteor.users.update({_id:this.userId},{\r\n                    $set:{\r\n                        hasSeenUpdate:true,\r\n                        isNewsThere:false,      \r\n                            }\r\n                });\r\n            }\r\n        },\r\n        quoiDeneuf(){ \r\n            const guidGenerator=()=>{\r\n                var S4 = function() {\r\n                   return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\r\n                };\r\n                return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\r\n            };\r\n                const updates=[\r\n                    \"GESDREG (Gestion des disponibilitÃ©s de rÃ¨glements) version 2.0.0\",\r\n                    \"Dans cette version les mises Ã  jour suivantes ont Ã©tÃ© effectuÃ©es:\",\r\n                    \"---PossibilitÃ© d'exclusion des rÃ¨glements par numÃ©ro de rÃ¨glement\",\r\n                    \"---Insertion des codes rejets des envois\",\r\n                    \"---IntÃ©gration des rÃ¨glements manuels par fichier Excel\",\r\n                    \"---Affichage des chÃ¨ques annulÃ©s ou non valides\",\r\n                    \"---Interface banquaire mise Ã  jour\",\r\n                    \r\n                ];\r\n                let newsId=guidGenerator();\r\n                let existInCol=WhatsNew.find().fetch();\r\n                if(existInCol.length>0){\r\n                    WhatsNew.remove({});    \r\n                }\r\n                    WhatsNew.insert({\r\n                        updates:updates,\r\n                        newsId:newsId\r\n                    });\r\n                    let met=Meteor.users.find().fetch();\r\n                    if(met.length){\r\n                        met.map((e,i,arr)=>{\r\n                            Meteor.users.update({username:e.username,NewsID:null},{\r\n                                $set:{\r\n                                    isNewsThere:true,\r\n                                    NewsID:newsId\r\n                                }\r\n                             });\r\n                        })\r\n                        \r\n                    }\r\n                \r\n        },\r\n        checkAdminUser(username,mdp){\r\n            if(username===Meteor.settings.ADMINLOGMDP && mdp===Meteor.settings.ADMINLOGMDP)\r\n            return true;\r\n            else\r\n            return false;\r\n        },\r\n        async checkDelai(){\r\n            //check tous les reglement dont la date de depot treso est renseignee et pas la date de sortie\r\n            let d={\r\n                regTreso:[],\r\n                horsDelaiT:[],\r\n                regSign:[],\r\n                horsDelaiS:[],\r\n            };\r\n                await dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    statut_reg_retirer:'A LA TRESO',\r\n            },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                res.map((e,i,arr)=>{\r\n                   // console.dir(e.dataValues);\r\n                    let delai=moment(e.dataValues.date_depot_treso).add(3,'d');\r\n                    if(moment(e.dataValues.date_depot_treso).isBefore(moment(delai))){\r\n                        d.regTreso.push(e.dataValues);\r\n                    }else if(moment(e.dataValuesdate_depot_treso).isAfter(moment(delai))){\r\n                        d.horsDelaiT.push(e.dataValues);\r\n                    }\r\n                })\r\n            });\r\n            await dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                statut_reg_retirer:'A LA SIGNATURE',\r\n                },order:[['wnrgt','DESC']]}).then((res)=>{\r\n                    res.map((e,i,arr)=>{\r\n                        //console.dir(e.dataValues);\r\n                        let delai=moment(e.dataValues.date_depot_sign).add(1,'d');\r\n                        if(moment(e.dataValues.date_depot_sign).isBefore(moment(delai))){\r\n                            d.regSign.push(e.dataValues);\r\n                        }else if(moment(e.dataValues.date_depot_sign).isAfter(moment(delai))){\r\n                            d.horsDelaiS.push(e.dataValues);\r\n                        }\r\n                    })\r\n                });\r\n                //console.dir(d);\r\n            return d;\r\n        },\r\n        async checkDelaiParRapportAuClient(){\r\n            //check tous les reglement dont la date de depot treso est renseignee et pas la date de sortie\r\n            let d={\r\n                rachatTotbancass:0,\r\n                rachatTotIndiv:0,\r\n                avanceRachatP:0,\r\n                terme:0,\r\n                carec:0,\r\n                ifc:0\r\n\r\n            };\r\n            let query=\"exec info_reg_dispo :numero_reg,:domaine \";\r\n            let req=\"select * from exp.regdispo where dateRDV between 2018-07-01 and 2018-07-31\";\r\n                await dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                    dateRDV:{\r\n                        $between:[moment('2018-07-16').format(\"YYYY-MM-DD\"),moment('2018-07-20').format(\"YYYY-MM-DD\")]\r\n                    },\r\n        \r\n            },order:[['wnrgt','DESC']]})\r\n                        .then((res)=>{\r\n                let promises=[];\r\n                let dispo;\r\n                res.forEach((r)=>{\r\n                    promises.push(\r\n                        Promise.all([\r\n                        DBSQLSERVER.query(query,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                        ]).then((infosurrgt)=>{\r\n                            //ici on a un tableau multidimensionnel i dont know why and i dont want to bother looking for an answer to that\r\n                            dispo=r.toJSON();\r\n                            dispo.infoSurRgt=infosurrgt;\r\n                            //console.log(dispo.infoSurRgt[0][0])\r\n                            let data=checkRdvDateMD(dispo);\r\n                            let sinistre=typeof dispo.infoSurRgt!=\"undefined\" || typeof dispo.infoSurRgt[0][0].TYPE_SINISTRE!=\"undefined\" ||dispo.infoSurRgt[0][0].TYPE_SINISTRE!=\"\"?dispo.infoSurRgt[0][0].TYPE_SINISTRE:'' \r\n                            //console.log(\"le sinistre est :\"+dispo.infoSurRgt[0][0].TYPE_SINISTRE);\r\n                            //console.log(\"le type de data est \"+typeof data);\r\n                            //console.log(data);\r\n                            if(sinistre!='' && data){\r\n                                console.log(\"le sinistre est :\"+sinistre);\r\n                                if(sinistre==\"AVANCE\" ||sinistre==\"RACHAT PARTIEL\"){\r\n                                    if(data.alerte===\"HAUTE\")\r\n                                    d.avanceRachatP++;\r\n                                }else if(sinistre==\"RACHAT TOTAL\"){\r\n                                    let codeProduit=dispo.wnupo.toString().substring(0,3);\r\n                                    switch(codeProduit){\r\n                                    case \"110\":\r\n                                    case \"112\":\r\n                                    case \"116\":\r\n                                    case \"120\":\r\n                                    case \"122\":\r\n                                    case \"130\":\r\n                                    case \"140\":\r\n                                    case \"162\":\r\n                                    case \"166\":\r\n                                    case \"168\":\r\n                                    case \"210\":\r\n                                    case \"212\":\r\n                                    case \"216\":\r\n                                    case \"218\":\r\n                                    case \"220\":\r\n                                    case \"224\":\r\n                                    case \"230\":\r\n                                    case \"234\":\r\n                                    case \"241\":\r\n                                    case \"242\":\r\n                                    case \"243\":\r\n                                    case \"246\":\r\n                                    case \"247\":\r\n                                    case \"248\":\r\n                                    case \"260\":\r\n                                    case \"310\":\r\n                                    case \"312\":\r\n                                    case \"330\":\r\n                                    case \"331\":\r\n                                    case \"332\":\r\n                                    case \"333\":\r\n                                    case \"334\":\r\n                                    case \"360\":\r\n                                    case \"791\":\r\n                                    case \"793\":\r\n                                        if(data.alerte===\"HAUTE\")\r\n                                        d.rachatTotIndiv++;\r\n                                    break;\r\n                                    case \"710\":\r\n                                    case \"713\":\r\n                                    case \"715\":\r\n                                    case \"717\":\r\n                                    case \"720\":\r\n                                    case \"722\":\r\n                                    case \"724\":\r\n                                    case \"726\":\r\n                                    case \"731\":\r\n                                    case \"732\":\r\n                                    case \"742\":\r\n                                    case \"745\":\r\n                                    case \"752\":\r\n                                    case \"755\":\r\n                                    case \"760\":\r\n                                    case \"766\":\r\n                                    case \"770\":\r\n                                    case \"772\":\r\n                                    case \"773\":\r\n                                    case \"774\":\r\n                                    case \"776\":\r\n                                    case \"777\":\r\n                                    case \"778\":\r\n                                    case \"782\":\r\n                                    case \"784\":\r\n                                    case \"786\":\r\n                                        if(data.alerte===\"HAUTE\")\r\n                                        d.rachatTotbancass++;\r\n                                    break;\r\n                                    }\r\n                                }else if(sinistre==\"TERME\"){\r\n                                    if(data.alerte===\"HAUTE\")\r\n                                    d.terme++;\r\n                                }else if(sinistre==\"CAREC\"){\r\n                                    if(data.alerte===\"HAUTE\")\r\n                                    d.carec++;\r\n                                }else if(sinistre==\"IFC\"){\r\n                                    if(data.alerte===\"HAUTE\")\r\n                                    d.ifc++;\r\n                                }  \r\n                            }\r\n                            \r\n                            return dispo;\r\n                        })\r\n                    );\r\n                })\r\n                return Promise.all(promises);\r\n               \r\n            });\r\n            \r\n            console.dir(d);\r\n            return d;\r\n        },\r\n        exportToExcel(EXL){\r\n\r\n           let jsonArray=[];\r\n\r\n           EXL.forEach((instance,index,record)=>{\r\n\r\n                if(record[index].domaine===\"I\")domaine=\"INDIVIDUEL\";\r\n                if(record[index].domaine===\"G\")domaine=\"GROUPE\";\r\n                if(record[index].domaine===\"R\")domaine=\"RENTE\";\r\n\r\n               let tempArr={\r\n                    'DOMAINE':domaine,\r\n                    'NUMERO_DU_BENEFICIAIRE':record[index].wasrg,\r\n                    'NUMERO_POLICE':record[index].wnupo,\r\n                    'NUMERO_REGLEMENT':record[index].wnrgt,\r\n                    'NUMERO_CHEQUE':record[index].infoSurRgt[0]?record[index].infoSurRgt[0].NUMERO_CHEQUE!=''?record[index].infoSurRgt[0].NUMERO_CHEQUE:'Aucun numero':'Aucun numero',\r\n                    'MONTANT':record[index].MNTGT,\r\n                    'MODE_REGLEMENT':record[index].MRGGT,\r\n                    'NOM_DU_BENEFICIAIRE':record[index].nom_beneficiaire,\r\n                    'LIBELLE_SINISTRE':record[index].infoSurRgt[0]?record[index].infoSurRgt[0].LIBELLE_SINISTRE:null,\r\n                    'CAUSE_SINISTRE':record[index].infoSurRgt[0]?record[index].infoSurRgt[0].CAUSE_SINISTRE:null,\r\n                    'TYPE_SINISTRE':record[index].infoSurRgt[0]?record[index].infoSurRgt[0].TYPE_SINISTRE:null,\r\n                    'DATE_RECEPTION':record[index].infoSurRgt[0]?record[index].infoSurRgt[0].DATE_RECEPTION:null,\r\n                    'DATE_RDV':record[index].dateRDV,\r\n                    'DATE_NAISSANCE_BENEFICIAIRE':record[index].date_naiss?moment(record[index].date_naiss).format(\"DD-MM-YYYY\"):\"NON DEFINIE\",\r\n                    'DATE_DEPOT_TRESO':record[index].date_depot_treso?moment(record[index].date_depot_treso).format(\"DD-MM-YYYY\"):\"NON DEFINIE\",\r\n                    'DATE_SORT_TRESO':record[index].date_sort_treso?moment(record[index].date_sort_treso).format(\"DD-MM-YYYY\"):\"NON DEFINIE\",\r\n                    'DATE_DEPOT_SIGNATURE':record[index].date_depot_sign?moment(record[index].date_depot_sign).format(\"DD-MM-YYYY\"):\"NON DEFINIE\",\r\n                    'DATE_RECEPTION_SIGNATURE':record[index].date_recep_sign_reg?moment(record[index].date_recep_sign_reg).format(\"DD-MM-YYYY\"):\"NON DEFINIE\",\r\n                    'DATE_RETRAIT_REGLEMENT':record[index].date_retrait_reg?moment(record[index].date_retrait_reg).format(\"DD-MM-YYYY\"):\"NON DEFINIE\",\r\n                    'STATUT_DU_REGLEMENT':record[index].statut_reg_retirer,\r\n                    'REDACTEUR':record[index].redac===\"ADM\"?\"Administrateur\":record[index].redac\r\n               }\r\n               jsonArray.push(tempArr);\r\n           });\r\n           \r\n           let xls=json2xls(jsonArray);\r\n           return xls;\r\n        },\r\n        createNewUser(values){\r\n            let codeFound=Meteor.users.findOne({codeRedac:values.codeRedac.toUpperCase()});\r\n            if(codeFound){\r\n                 throw new Meteor.Error(\"Veuillez re vÃ©rifier, il se pourrait que le code rÃ©dacteur existe dÃ©ja\");\r\n                 //return false;\r\n            }\r\n            //-----------------------------\r\n            if( Accounts.createUser({\r\n                        username:values.username,\r\n                        password:values.password\r\n                    })){\r\n                        let nuser=Meteor.users.findOne({username:values.username});\r\n                        if(Meteor.users.update(nuser._id,{\r\n                            $set:{\r\n                                uncrypted:values.passwordconf,\r\n                                nom:values.nom,\r\n                                prenoms:values.prenom,\r\n                                fullname: values.nom+' '+values.prenom,\r\n                                email:values.email,\r\n                                hasSeenUpdate:false,\r\n                                seenUpdateXtime:0,\r\n                                isNewsThere:false,\r\n                                NewsID:null,\r\n                                codeRedac:values.codeRedac.toUpperCase(),\r\n                                role:values.role\r\n                            }\r\n                        })){\r\n                            //DBSQL.sync();\r\n                            let message=\"<em>Ceci est un message automatique, veuillez ne pas y rÃ©pondre.</em><br/><br/>Bonjour Monsieur/Madame,<br/><br/>Veuillez trouver ci dessous vos accÃ¨s au module GESDREG en charge de la gestion des disponibilitÃ©s de rÃ¨glements. <br/><br/>Identifiant: <b>\"+values.username+\"</b><br/> Mot de passe: <b>\"+values.passwordconf+\"</b>. <br/><br/>Votre application est accÃ¨ssible via le lien suivant: <a href='http://10.11.100.48:8082'>http://10.11.100.48:8082</a>. <br/>Pour un fonctionnement optimal veuillez ouvrir l'application avec les navigateurs <b>Google Chrome</b> ou <b>Mozilla Firefox.</b><br/><br/> Cordialement, <br/><br/><b>DSI NSIA VIE ASSURANCES</b>\";\r\n                            console.log(\"Valeur de la variable environment mail \"+process.env.MAIL_URL);\r\n                            Meteor.call(\"sendEmail\",[values.email,Meteor.settings.ADMINMAIL],\"info@nsiavieapplications.com\",\"Vos identifiants sur le module GESDREG(Gestion des disponibilitÃ©s de rÃ¨glement)\",message);\r\n                              return userSQL.create({\r\n                                    ulogin:values.username,\r\n                                    mdp:nuser.services.password.bcrypt.substring(0,8)+values.passwordconf,//values.passwordconf,\r\n                                    nom:values.nom,\r\n                                    prenom:values.prenom,\r\n                                    email:values.email,\r\n                                    redac:values.codeRedac.toUpperCase(),\r\n                                    role:values.role\r\n                                }).then((err,res)=>{\r\n                                    if(err){\r\n                                        \r\n                                       // throw new Meteor.Error(\"Veuillez re vÃ©rifier, il se pourrait que le code rÃ©dacteur existe dÃ©ja\");\r\n                                        return false;\r\n                                    }\r\n                                    else\r\n                                    return true;\r\n                                    //DBSQL.close();\r\n                                \r\n                             }).catch((err)=>{\r\n                                throw new Meteor.Error(\"Veuillez re vÃ©rifier, il se pourrait que le code rÃ©dacteur existe dÃ©ja\");\r\n                             });\r\n                            //return true;\r\n                        }\r\n                        else{\r\n                            Meteor.users.remove({username:values.username});\r\n                            throw new Meteor.Error(\"Veuillez re vÃ©rifier vos champs\");\r\n                            \r\n                        }\r\n                    }else{\r\n                       throw new Meteor.Error(\"Veuillez re vÃ©rifier vos champs, cet utilisateur existe deja\");\r\n                    }\r\n             \r\n            \r\n        },\r\n        createDispo(values){\r\n            const redac=Meteor.users.findOne({_id:Meteor.userId})\r\n            console.log(Meteor.userid);\r\n            console.dir(values);\r\n            return dispoSQL.create({\r\n                wasrg:values.wasrg,\r\n                wnrgt:values.wnrgt,\r\n                date_depot_treso:values.date_depot_treso,\r\n                date_sort_treso:values.date_sort_treso,\r\n                date_depot_sign:values.date_depot_sign,\r\n                date_recep_sign_reg:values.date_recep_sign_reg,\r\n                redac:redac.codeRedac,\r\n                statut_reg_retirer:\"EN COURS\",\r\n                domaine:values.domaine,\r\n            }).then(()=>{\r\n                return true;\r\n            });\r\n        },\r\n        updateDisposManuel(){\r\n            var excel = new Excel('xlsx');\r\n            const pathToFile=process.env.PWD+'/FICHIERS/rgtmanuel/rgtmanuel.xlsx';\r\n            var workbook = excel.readFile(pathToFile,{cellDates: true,dateNF:\"dd/MM/yyyy\"}); \r\n            //console.dir(workbook);\r\n            var sheet = workbook.Sheets.Feuil1;\r\n            var options = {};\r\n            const redac=Meteor.users.findOne({_id:Meteor.user()._id});\r\n\r\n            // Generate the JSON like so:\r\n            var workbookJson = excel.utils.sheet_to_json( sheet, options );\r\n            //console.dir(workbookJson);\r\n            let query=\"insert into exp.regdispo (date_depot_treso,date_sort_treso,date_depot_sign,date_recep_sign_reg,date_retrait_reg,redac,statut_reg_retirer,wnupo,wnrgt,MNTGT,nom_beneficiaire,domaine,Num_envoi,cheque,MRGGT,banque,Comments) values (:ddt,:dst,:dds,:drsr,:drr,:r,:srr,:p,:rgt,:mnt,:nb,:dom,:nenv,:c,:mrggt,:ban,:com)\";\r\n            workbookJson.map((e,i)=>{\r\n                console.log(\"in the loop\");\r\n                if(!e.DOMAINE){\r\n                    throw new Meteor.Error(\"bad-coderej\",\"Veuillez vÃ©rifier la ligne \"+(i+2)+\" du fichier des rÃ¨glements manuels.le domaine n'est pas renseignÃ©.\");\r\n                    return;\r\n                }\r\n                if(e.MODE_REGLEMENT=='C' && (e.CHEQUE==\"\"||isNaN(e.CHEQUE))){\r\n                    throw new Meteor.Error(\"bad-coderej\",\"Veuillez vÃ©rifier la ligne \"+(i+2)+\" du fichier des rÃ¨glements manuels.le numÃ©ro de chÃ¨que est mal renseignÃ©.\");\r\n                    return;\r\n                }\r\n                if(e.MODE_REGLEMENT=='B' && (e.ENVOI==\"\"||isNaN(e.ENVOI))){\r\n                    throw new Meteor.Error(\"bad-coderej\",\"Veuillez vÃ©rifier la ligne \"+(i+2)+\" du fichier des rÃ¨glements manuels.le numÃ©ro d'envoi est mal renseignÃ©.\");\r\n                    return;\r\n                }\r\n                if(e.PRESTATION==\"\"||!e.PRESTATION){\r\n                    throw new Meteor.Error(\"bad-coderej\",\"Veuillez vÃ©rifier la ligne \"+(i+2)+\" du fichier des rÃ¨glements manuels.le champs PRESTATION n'est pas renseignÃ©.\");\r\n                    return;\r\n                }\r\n                /*if(e.REGLEMENT!='88888' ||parseInt(e.REGLEMENT)!=88888 ){\r\n                    throw new Meteor.Error(\"bad-coderej\",\"Veuillez vÃ©rifier la ligne \"+(i+2)+\" du fichier des rÃ¨glements manuels.le numÃ©ro de reglement doit Ãªtre 88888.\");\r\n                    return;\r\n                }*/\r\n                if(isNaN(e.POLICE) ){\r\n                    throw new Meteor.Error(\"bad-coderej\",\"Veuillez vÃ©rifier la ligne \"+(i+2)+\" du fichier des rÃ¨glements manuels.le numÃ©ro de police est mal renseignÃ©.\");\r\n                    return;\r\n                }\r\n                if(isNaN(e.MONTANT) ){\r\n                    throw new Meteor.Error(\"bad-coderej\",\"Veuillez vÃ©rifier la ligne \"+(i+2)+\" du fichier des rÃ¨glements manuels.le numÃ©ro de police est mal renseignÃ©.\");\r\n                    return;\r\n                }\r\n                let statut=\"EN COURS\";\r\n                    if(e.DATE_ENTREE_TRESO){\r\n                        statut=\"A LA TRESO\";\r\n                    }\r\n                   if(e.DATE_SORTIE_TRESO){\r\n                    statut=\"SORTIE DE TRESO\";\r\n                   }\r\n                   if(e.DATE_ENTREE_SIGNATURE){\r\n                    statut=\"A LA SIGNATURE\";\r\n                   }\r\n                   if(e.DATE_SORTIE_SIGNATURE){\r\n                    statut=\"PRET\";\r\n                   }\r\n                   if(e.DATE_RETRAIT){\r\n                       statut=\"SORTIE\"\r\n                   }\r\n                Historique.insert({\r\n                    dateConnexion:new Date(),\r\n                    heure:moment(Date.now()).format(\"HH:mm:ss\"),\r\n                    actions:\"Insertion des reglements manuel\",\r\n                    par:redac.codeRedac\r\n                });\r\n                DBSQLSERVER.query(query,{\r\n                    replacements:{\r\n                       \r\n                        ddt:e.DATE_ENTREE_TRESO?moment(frenchDateToEn(e.DATE_ENTREE_TRESO)).format(\"YYYY-MM-DD\"):null,\r\n                        dst:e.DATE_SORTIE_TRESO?moment(frenchDateToEn(e.DATE_SORTIE_TRESO)).format(\"YYYY-MM-DD\"):null,\r\n                        dds:e.DATE_ENTREE_SIGNATURE?moment(frenchDateToEn(e.DATE_ENTREE_SIGNATURE)).format(\"YYYY-MM-DD\"):null,\r\n                        drsr:e.DATE_SORTIE_SIGNATURE?moment(frenchDateToEn(e.DATE_SORTIE_SIGNATURE)).format(\"YYYY-MM-DD\"):null,\r\n                        drr:e.DATE_RETRAIT?moment(frenchDateToEn(e.DATE_RETRAIT)).format(\"YYYY-MM-DD\"):null,\r\n                        r:redac.codeRedac,\r\n                        srr:statut,\r\n                        p:e.POLICE,\r\n                        rgt:e.REGLEMENT,\r\n                        mnt:e.MONTANT,\r\n                        nb:e.BENEFICIAIRE,\r\n                        dom:e.DOMAINE,\r\n                        nenv:e.ENVOI?parseInt(e.ENVOI):null,\r\n                        c:e.CHEQUE?parseInt(e.CHEQUE):null,\r\n                        mrggt:e.MODE_REGLEMENT,\r\n                        ban:e.BANQUE?e.BANQUE:null,\r\n                        com:e.COMMENTAIRE+'%MAN%$'+e.PRESTATION+'!',\r\n                    },\r\n                    type:DBSQLSERVER.QueryTypes.INSERT\r\n                }).catch((err)=>{\r\n                    console.log(err);\r\n                    throw new Meteor.Error(\"bad-coderej\",\"Une erreur est survenue lors de la mise Ã  jour veuillez vÃ©rifier votre fichier\");\r\n                    return err.reason;\r\n                });\r\n            });\r\n\r\n\r\n           \r\n\r\n        },\r\n        updateDispos(values,rgtArray,numenv){\r\n            //mise a jour groupee des reglement\r\n            console.log(\"numenv est \"+numenv);\r\n            let prom;\r\n            let query;\r\n            let comment;\r\n            const redac=Meteor.users.findOne({_id:Meteor.user()._id});\r\n            //console.log(typeof values.date_sort_treso);\r\n            switch(values.choixForm){\r\n                case \"MODIFIER\":\r\n                    let statut=\"EN COURS\";\r\n                    if(values.date_depot_treso){\r\n                        statut=\"A LA TRESO\";\r\n                    }\r\n                   if(values.date_sort_treso){\r\n                    statut=\"SORTIE DE TRESO\";\r\n                   }\r\n                   if(values.date_depot_sign){\r\n                    statut=\"A LA SIGNATURE\";\r\n                   }\r\n                   if(values.date_recep_sign_reg){\r\n                    statut=\"PRET\";\r\n                   }\r\n                   if(values.date_retrait_reg){\r\n                       statut=\"SORTIE\"\r\n                   }\r\n                   /*if(values.delreg){\r\n                       console.log(\"contents of delreg\");\r\n                       console.dir(values.delreg);\r\n                       var rgtEx = values.delreg.match(/\\d+/g).map(Number);\r\n                       console.log(\"les rgt a exclure sont:\");\r\n                       console.dir(rgtEx);\r\n                       query=\"and wnrgt not in (\";\r\n                       rgtEx.map((e,i)=>{\r\n                        if(i==rgtEx.length-1){\r\n                            query+=e+')';\r\n                        }else{\r\n                            query+=e+',';\r\n                        }\r\n                       });\r\n                       console.log(query);\r\n                       //return;\r\n                   }*/\r\n                    if(numenv){\r\n                        query=\"update exp.regdispo set date_depot_treso=:ddt, date_sort_treso=:dst, date_depot_sign=:dds,date_recep_sign_reg=:drsr,date_retrait_reg=:drr,redac=:r,statut_reg_retirer=:srr\"; \r\n                        let cdr=\"\";\r\n                        if(values.coderej && values.coderej!=\"\"){\r\n                            if(typeof parseInt(values.coderej,10) !=\"number\"){\r\n                                throw new Meteor.Error(\"bad-coderej\",\"Veuillez re verifier le code rejet renseignÃ©.Seulement les nombres sont acceptÃ©s.\");\r\n\r\n                            }\r\n                            query+=`,Comments=:cdr`;\r\n                        }\r\n                        query+=\" where Num_envoi=:n\";\r\n                        if(values.delreg){\r\n                            var rgtEx = values.delreg.match(/\\d+/g).map(Number);\r\n                            query+=\"and wnrgt not in (\";\r\n                            rgtEx.map((e,i)=>{\r\n                                if(i==rgtEx.length-1){\r\n                                    query+=e+')';\r\n                                }else{\r\n                                    query+=e+',';\r\n                                }\r\n                            });\r\n                            console.log(query);\r\n                           // query+=\"and wnrgt not in ()\";\r\n                        }\r\n                        Historique.insert({\r\n                            dateConnexion:new Date(),\r\n                            heure:moment(Date.now()).format(\"HH:mm:ss\"),\r\n                            actions:\"Mise a jour de date sur les reglements de l'envoi \"+numenv,\r\n                            par:redac.codeRedac\r\n                        });\r\n                        DBSQLSERVER.query(query,{\r\n                            replacements:{\r\n                               \r\n                                ddt:values.date_depot_treso?moment(values.date_depot_treso).format(\"YYYY-MM-DD\"):null,\r\n                                dst:values.date_sort_treso?moment(values.date_sort_treso).format(\"YYYY-MM-DD\"):null,\r\n                                dds:values.date_depot_sign?moment(values.date_depot_sign).format(\"YYYY-MM-DD\"):null,\r\n                                drsr:values.date_recep_sign_reg?moment(values.date_recep_sign_reg).format(\"YYYY-MM-DD\"):null,\r\n                                drr:values.date_retrait_reg?moment(values.date_retrait_reg).format(\"YYYY-MM-DD\"):null,\r\n                                r:redac.codeRedac,\r\n                                srr:statut,\r\n                                cdr:values.coderej?values.coderej:'',\r\n                                n:numenv\r\n                            },\r\n                            type:DBSQLSERVER.QueryTypes.UPDATE\r\n                        }).catch((err)=>{\r\n                            console.log(err);\r\n                            return err.reason;\r\n                        });\r\n                    }else{\r\n                        query=\"update exp.regdispo set date_depot_treso=:ddt, date_sort_treso=:dst, date_depot_sign=:dds,date_recep_sign_reg=:drsr,date_retrait_reg=:drr,redac=:r,statut_reg_retirer=:srr where wnupo=:wnupo and wnrgt=:wnrgt and domaine=:d \";  \r\n                        if(values.delreg){\r\n                            var rgtEx = values.delreg.match(/\\d+/g).map(Number);\r\n                            query+=\"and wnrgt not in (\";\r\n                            rgtEx.map((e,i)=>{\r\n                                if(i==rgtEx.length-1){\r\n                                    query+=e+')';\r\n                                }else{\r\n                                    query+=e+',';\r\n                                }\r\n                            });\r\n                            console.log(query);\r\n                           // query+=\"and wnrgt not in ()\";\r\n                        }\r\n                        rgtArray.forEach((e,i,arr)=>{\r\n                            console.log(\"ligne de rgt: \"+i);\r\n                            Historique.insert({\r\n                                 dateConnexion:new Date(),\r\n                                 heure:moment(Date.now()).format(\"HH:mm:ss\"),\r\n                                 actions:\"Mise a jour de date sur le reglement \"+e.wnrgt,\r\n                                 par:redac.codeRedac\r\n                             });\r\n                             prom= Promise.await(dispoSQL.findOne({\r\n                                 where:{\r\n                                     wnrgt:e.wnrgt,\r\n                                     wnupo:e.wnupo,\r\n                                     domaine:e.domaine\r\n                                  }}).then(p=>{\r\n                                      //console.dir(e);\r\n                                       //Verifications sur les dates\r\n                                       if(e && e.infoSurRgt.length){\r\n                                           if(!values.date_depot_treso && e.date_depot_treso)\r\n                                           values.date_depot_treso=e.date_depot_treso;\r\n                                           if(!values.date_depot_sign && e.date_depot_sign)\r\n                                           values.date_depot_sign=e.date_depot_sign;\r\n                                           if(!values.date_sort_treso && e.date_sort_treso)\r\n                                           values.date_sort_treso=e.date_sort_treso;\r\n                                           if(!values.date_recep_sign_reg && e.date_recep_sign_reg)\r\n                                           values.date_recep_sign_reg=e.date_recep_sign_reg;\r\n                                           if(!values.date_retrait_reg && e.date_retrait_reg)\r\n                                           values.date_retrait_reg=e.date_retrait_reg;\r\n                                         if(values.date_depot_treso \r\n                                             && moment(values.date_depot_treso).isBefore(e.infoSurRgt[0].DATE_SURVENANCE_SINISTRE)\r\n                                             && moment(values.date_depot_treso).isBefore(e.infoSurRgt[0].DATE_RECEPTION)\r\n                                             ){\r\n                                                 throw new Meteor.Error(\"bad-date\",\"Veuillez re verifier la date de dÃ©pot Ã  la trÃ©sorerie du rÃ¨glement \"+e.wnrgt+\" . Elle ne peut Ãªtre avant la date de survenance du sinistre ou la date de rÃ©ception du rÃ¨glement\");\r\n                                             }\r\n                                             else if(values.date_depot_treso \r\n                                                 &&(values.date_sort_treso||values.date_depot_sign||values.date_recep_sign_reg||values.date_retrait_reg)\r\n                                                 &&( values.date_sort_treso?moment(values.date_depot_treso).diff(moment(values.date_sort_treso))>0:false\r\n                                                 || values.date_depot_sign? moment(values.date_depot_treso).diff(moment(values.date_depot_sign))>0:false\r\n                                                 || values.date_recep_sign_reg? moment(values.date_depot_treso).diff(moment(values.date_recep_sign_reg))>0:false\r\n                                                 || values.date_retrait_reg? moment(values.date_depot_treso).diff(moment(values.date_retrait_reg))>0:false\r\n                                                 \r\n                                                     )\r\n                                                 \r\n                                                 ){\r\n                                                     throw new Meteor.Error(\"bad-date\",\"Veuillez re verifier la date de dÃ©pot Ã  la trÃ©sorerie du rÃ¨glement \"+e.wnrgt+\" . Elle ne peut Ãªtre aprÃ¨s la date de sortie de trÃ©sorerie ou les dates de depot et retour de signature ou encore la date du retrait du rÃ¨glement 1\");\r\n                                                 }\r\n                                             else if(values.date_sort_treso \r\n                                                // && moment(e.date_sort_treso).isBefore(e.infoSurRgt[0].DATE_REGLEMENT.replace(/\\//g,\"-\"))\r\n                                                 && moment(values.date_sort_treso).isBefore(e.infoSurRgt[0].DATE_SURVENANCE_SINISTRE)\r\n                                                 && moment(values.date_sort_treso).isBefore(e.infoSurRgt[0].DATE_RECEPTION)\r\n                                             ){\r\n                                                     throw new Meteor.Error(\"bad-date\",\"Veuillez re verifier la date de sortie de trÃ©sorerie du rÃ¨glement \"+e.wnrgt+\" .Elle ne peut Ãªtre avant la date de survenance du sinistre ou la date de rÃ©ception du rÃ¨glement\");\r\n                                                 }\r\n                                           /*  else if(p.date_depot_treso && moment(values.date_sort_treso).isBefore(moment(p.date_depot_treso).format(\"YYYY-MM-DD\"))){\r\n                                                 throw new Meteor.Error(\"bad-date\",\"Veuillez re verifier la date de sortie de trÃ©sorerie du rÃ¨glement \"+e.wnrgt+\" .Elle ne peut Ãªtre avant la date de dÃ©pot Ã  la trÃ©sorerie que vous avez prÃ©cÃ©demment saisie.\");\r\n                                             }*/\r\n                                             else if(values.date_sort_treso \r\n                                                &&(values.date_depot_treso||values.date_depot_sign||values.date_recep_sign_reg||values.date_retrait_reg)\r\n                                                &&(values.date_depot_treso? moment(values.date_sort_treso).diff(moment(values.date_depot_treso))<0:false\r\n                                                 ||values.date_depot_sign?  moment(values.date_sort_treso).diff(moment(values.date_depot_sign))>0:false\r\n                                                 || values.date_recep_sign_reg? moment(values.date_sort_treso).diff(moment(values.date_recep_sign_reg))>0:false\r\n                                                 ||values.date_retrait_reg?  moment(values.date_sort_treso).diff(moment(values.date_retrait_reg))>0:false\r\n                                                     )\r\n                                               \r\n                                                ){\r\n                                                    throw new Meteor.Error(\"bad-date\",\"Veuillez re verifier la date de sortie de trÃ©sorerie du rÃ¨glement \"+e.wnrgt+\" .Elle ne peut Ãªtre avant la date de dÃ©pot Ã  la trÃ©sorerie ou aprÃ¨s les dates de depot et retour de signature ou encore la date du retrait du rÃ¨glement 2\");\r\n                                                    \r\n                                                }\r\n                                            else if(values.date_depot_sign \r\n                                                && moment(values.date_depot_sign).isBefore(e.infoSurRgt[0].DATE_RECEPTION)\r\n                                                && moment(values.date_depot_sign).isBefore(e.infoSurRgt[0].DATE_SURVENANCE_SINISTRE)\r\n                                                ){\r\n                                                    throw new Meteor.Error(\"bad-date\",\"Veuillez re verifier la date de dÃ©pot pour signature du rÃ¨glement \"+e.wnrgt+\" .Elle ne peut Ãªtre avant la date de survenance du sinistre ou la date de rÃ©ception du rÃ¨glement \");\r\n                                                }\r\n                                            /*else if(moment(values.date_depot_sign).isBefore(moment(p.date_depot_treso).format(\"YYYY-MM-DD\"))\r\n                                                ||moment(values.date_depot_sign).isBefore(moment(p.date_sort_treso).format(\"YYYY-MM-DD\"))){\r\n                                                    throw new Meteor.Error(\"bad-date\",\"Veuillez re verifier la date de dÃ©pot pour signature du rÃ¨glement \"+e.wnrgt+\" . Elle ne peut Ãªtre avant la date de dÃ©pot Ã  la trÃ©sorerie ou avant la date de sortie de trÃ©sorerie qui ont Ã©tÃ© saisies prÃ©cÃ©demment.\");\r\n                                                }*/\r\n                                            else if(values.date_depot_sign \r\n                                                &&(values.date_depot_treso||values.date_sort_treso||values.date_recep_sign_reg||values.date_retrait_reg)\r\n                                                &&( values.date_depot_treso?moment(values.date_depot_sign).diff(moment(values.date_depot_treso))<0:false\r\n                                                 ||  values.date_sort_treso?moment(values.date_depot_sign).diff(moment(values.date_sort_treso))<0:false\r\n                                                 ||  values.date_recep_sign_reg? moment(values.date_depot_sign).diff(moment(values.date_recep_sign_reg))>0:false\r\n                                                 || values.date_retrait_reg? moment(values.date_depot_sign).diff(moment(values.date_retrait_reg))>0:false\r\n                                                     )\r\n                                               \r\n                                                ){\r\n                                                    throw new Meteor.Error(\"bad-date\",\"Veuillez re verifier la date de dÃ©pot pour signature du rÃ¨glement \"+e.wnrgt+\" .Elle ne peut Ãªtre avant la date de dÃ©pot Ã  la trÃ©sorerie ou la date de sortie de la trÃ©sorerie ,ni aprÃ¨s la date de retour de signature ou encore la date du retrait du rÃ¨glement\");\r\n                                                    \r\n                                                }\r\n                                            else if(values.date_recep_sign_reg \r\n                                                && moment(values.date_recep_sign_reg).isBefore(e.infoSurRgt[0].DATE_RECEPTION)\r\n                                                && moment(values.date_recep_sign_reg).isBefore(e.infoSurRgt[0].DATE_SURVENANCE_SINISTRE)\r\n                                                ){\r\n                                                    throw new Meteor.Error(\"bad-date\",\"Veuillez re verifier la date de retour de signature du rÃ¨glement \"+e.wnrgt+\" .Elle ne peut Ãªtre avant la date de survenance du sinistre ou la date de rÃ©ception du rÃ¨glement \");\r\n                                                }\r\n                                            /*else if(moment(values.date_recep_sign_reg).isBefore(moment(p.date_depot_treso).format(\"YYYY-MM-DD\"))\r\n                                                ||moment(values.date_recep_sign_reg).isBefore(moment(p.date_sort_treso).format(\"YYYY-MM-DD\"))\r\n                                                ||moment(values.date_recep_sign_reg).isBefore(moment(p.date_depot_sign).format(\"YYYY-MM-DD\"))){\r\n                                                    throw new Meteor.Error(\"bad-date\",\"Veuillez re verifier la date de retour de signature du rÃ¨glement \"+e.wnrgt+\" . Elle ne peut Ãªtre avant la date de dÃ©pot Ã  la trÃ©sorerie, la date de sortie de trÃ©sorerie, la date de dÃ©pot pour signature.\");    \r\n                                                }*/\r\n                                            else if(values.date_recep_sign_reg \r\n                                                &&(values.date_depot_treso||values.date_sort_treso||values.date_depot_sign||values.date_retrait_reg)\r\n                                                &&( values.date_depot_treso?moment(values.date_recep_sign_reg).diff(moment(values.date_depot_treso))<0:false\r\n                                                 || values.date_sort_treso? moment(values.date_recep_sign_reg).diff(moment(values.date_sort_treso))<0:false\r\n                                                 ||  values.date_depot_sign?moment(values.date_recep_sign_reg).diff(moment(values.date_depot_sign))<0:false\r\n                                                 ||  values.date_retrait_reg?moment(values.date_recep_sign_reg).diff(moment(values.date_retrait_reg))>0:false\r\n                                                     )\r\n                                                \r\n                                                ){\r\n                                                    throw new Meteor.Error(\"bad-date\",\"Veuillez re verifier la date de retour de signature du rÃ¨glement \"+e.wnrgt+\" . Elle ne peut Ãªtre avant la date de dÃ©pot Ã  la trÃ©sorerie,la date de sortie de la trÃ©sorerie et la date de dÃ©pot Ã  la signature ,ni aprÃ¨s la date du retrait du rÃ¨glement 4\");\r\n                                                }\r\n                                            else if(values.date_retrait_reg \r\n                                                && moment(values.date_retrait_reg).isBefore(e.infoSurRgt[0].DATE_RECEPTION)\r\n                                                && moment(values.date_retrait_reg).isBefore(e.infoSurRgt[0].DATE_SURVENANCE_SINISTRE)\r\n                                                ){\r\n                                                    throw new Meteor.Error(\"bad-date\",\"Veuillez re verifier la date de retrait du rÃ¨glement du rÃ¨glement \"+e.wnrgt+\" . Elle ne peut Ãªtre avant la date de survenance du sinistre ou la date de rÃ©ception du rÃ¨glement.\");\r\n                                                }\r\n                                            /*else if(moment(values.date_retrait_reg).isBefore(moment(p.date_depot_treso).format(\"YYYY-MM-DD\"))\r\n                                                ||moment(values.date_retrait_reg).isBefore(moment(p.date_sort_treso).format(\"YYYY-MM-DD\"))\r\n                                                ||moment(values.date_retrait_reg).isBefore(moment(p.date_depot_sign).format(\"YYYY-MM-DD\"))\r\n                                                ||moment(values.date_retrait_reg).isBefore(moment(p.date_recep_sign_reg).format(\"YYYY-MM-DD\"))){\r\n                                                    throw new Meteor.Error(\"bad-date\",\"Veuillez re verifier la date de retrait du rÃ¨glement \"+e.wnrgt+\" . Elle ne peut Ãªtre avant la date de dÃ©pot Ã  la trÃ©sorerie, la date de sortie de trÃ©sorerie, la date de dÃ©pot pour signature et la date de retour de signature.\");\r\n                                                  \r\n                                                }*/\r\n                                            else if(values.date_retrait_reg \r\n                                                &&(values.date_depot_treso||values.date_sort_treso||values.date_depot_sign||values.date_recep_sign_reg)\r\n                                                &&( values.date_depot_treso?moment(values.date_retrait_reg).diff(moment(values.date_depot_treso))<0:false\r\n                                                 || values.date_depot_treso?moment(values.date_retrait_reg).diff(moment(values.date_sort_treso))<0:false\r\n                                                 || values.date_depot_treso? moment(values.date_retrait_reg).diff(moment(values.date_depot_sign))<0:false\r\n                                                 ||  values.date_depot_treso?moment(values.date_retrait_reg).diff(moment(values.date_recep_sign_reg))<0:false\r\n                                                     )\r\n                                                \r\n                                                ){\r\n                                                    throw new Meteor.Error(\"bad-date\",\"Veuillez re verifier la date de retrait du rÃ¨glement \"+e.wnrgt+\" . Elle ne peut Ãªtre avant la date de dÃ©pot Ã  la trÃ©sorerie,la date de sortie de la trÃ©sorerie,la date de dÃ©pot Ã  la signature et la date de retour de signature 5\");\r\n                                                    \r\n                                                }\r\n                                             else{\r\n                                                 \r\n                                                 DBSQLSERVER.query(query,{\r\n                                                     replacements:{\r\n                                                         wnrgt:e.wnrgt,\r\n                                                         wnupo:e.wnupo,\r\n                                                         d:e.domaine,\r\n                                                         ddt:values.date_depot_treso?moment(values.date_depot_treso).format(\"YYYY-MM-DD\"):e.date_depot_treso?moment(e.date_depot_treso).format(\"YYYY-MM-DD\"):null,\r\n                                                         dst:values.date_sort_treso?moment(values.date_sort_treso).format(\"YYYY-MM-DD\"):e.date_sort_treso?moment(e.date_sort_treso).format(\"YYYY-MM-DD\"):null,\r\n                                                         dds:values.date_depot_sign?moment(values.date_depot_sign).format(\"YYYY-MM-DD\"):e.date_depot_sign?moment(e.date_depot_sign).format(\"YYYY-MM-DD\"):null,\r\n                                                         drsr:values.date_recep_sign_reg?moment(values.date_recep_sign_reg).format(\"YYYY-MM-DD\"):e.date_recep_sign_reg?moment(e.date_recep_sign_reg).format(\"YYYY-MM-DD\"):null,\r\n                                                         drr:values.date_retrait_reg?moment(values.date_retrait_reg).format(\"YYYY-MM-DD\"):e.date_retrait_reg?moment(e.date_retrait_reg).format(\"YYYY-MM-DD\"):null,\r\n                                                         r:redac.codeRedac,\r\n                                                         srr:statut\r\n                                                     },\r\n                                                     type:DBSQLSERVER.QueryTypes.UPDATE\r\n                                                 }).catch((err)=>{\r\n                                                     console.log(err);\r\n                                                     return err.reason;\r\n                                                 });\r\n     \r\n                                             }\r\n                                       }else{\r\n                                         throw new Meteor.Error(\"bad-date\",\"Veuillez re verifier les dates de survenance du sinistre et date de rÃ©ception de la demande du rÃ¨glement \"+e.wnrgt+\"; il se pourrait que l'une d'entre elles soit mal renseignÃ©e.\");\r\n     \r\n                                       }\r\n                                      \r\n                                  }));\r\n                           \r\n                            \r\n                        });\r\n                        return prom;\r\n                    }\r\n                   \r\n                   \r\n                  \r\n                break;\r\n                case \"MODIFIERDV\":\r\n                \r\n                 query=\"update exp.regdispo set dateRDV=:rdv where wnupo=:wnupo and wnrgt=:wnrgt and domaine=:d \"; \r\n                if(!moment(values.dateRDV).isValid()){\r\n                    throw new Meteor.Error(\"bad-date\",\"Veuillez re verifier la date de rendez-vous du rÃ¨glement \"+e.wnrgt+\" . Elle n'est pas valide\");\r\n\r\n                }         \r\n                \r\n                rgtArray.forEach((e,i,arr)=>{\r\n                    Historique.insert({\r\n                        dateConnexion:new Date(),\r\n                        heure:moment(Date.now()).format(\"HH:mm:ss\"),\r\n                        actions:\"Mise a jour de date RDV sur le reglement \"+e.wnrgt,\r\n                        par:redac.codeRedac\r\n                    });\r\n                    console.log(\"ligne de rgt: \"+i);\r\n                     prom= Promise.await(dispoSQL.findOne({\r\n                         where:{\r\n                             wnrgt:e.wnrgt,\r\n                             wnupo:e.wnupo,\r\n                             domaine:e.domaine\r\n                          }}).then(p=>{\r\n                            DBSQLSERVER.query(query,{\r\n                                replacements:{\r\n                                    wnrgt:e.wnrgt,\r\n                                    wnupo:e.wnupo,\r\n                                    d:e.domaine,\r\n                                    rdv:values.dateRDV\r\n                                },\r\n                                type:DBSQLSERVER.QueryTypes.UPDATE\r\n                            }).catch((err)=>{\r\n                                console.log(err);\r\n                                return err.reason;\r\n                            });\r\n                          }));\r\n                        });\r\n                    return prom;\r\n                break;\r\n                case \"REFUSER\":\r\n                     query=\"update exp.regdispo set statut_reg_retirer=:stat, Comments=:com where wnupo=:wnupo and wnrgt=:wnrgt and domaine=:d \"; \r\n                    comment=values.comments===\"\"||!values.comments?\"Refuser par le gestionnaire \"+redac.codeRedac:values.comments;\r\n                    rgtArray.forEach((e,i,arr)=>{\r\n                        console.log(\"ligne de rgt: \"+i);\r\n                        Historique.insert({\r\n                            dateConnexion:new Date(),\r\n                            heure:moment(Date.now()).format(\"HH:mm:ss\"),\r\n                            actions:\"Refus du reglement \"+e.wnrgt,\r\n                            par:redac.codeRedac\r\n                        });\r\n                         prom= Promise.await(dispoSQL.findOne({\r\n                             where:{\r\n                                 wnrgt:e.wnrgt,\r\n                                 wnupo:e.wnupo,\r\n                                 domaine:e.domaine\r\n                              }}).then(p=>{\r\n                                \r\n                                DBSQLSERVER.query(query,{\r\n                                    replacements:{\r\n                                        wnrgt:e.wnrgt,\r\n                                        wnupo:e.wnupo,\r\n                                        d:e.domaine,\r\n                                        stat:\"REFUSER\",\r\n                                        com:comment\r\n                                    },\r\n                                    type:DBSQLSERVER.QueryTypes.UPDATE\r\n                                }).catch((err)=>{\r\n                                    console.log(err);\r\n                                    return err.reason;\r\n                                });\r\n                              }));\r\n                            });\r\n                        return prom;\r\n                break;\r\n                case \"ANNULER\":\r\n                query=\"update exp.regdispo set statut_reg_retirer=:stat,Comments=:com where wnupo=:wnupo and wnrgt=:wnrgt and domaine=:d \"; \r\n                comment=values.comments===\"\"||!values.comments?\"Annuler par le gestionnaire \"+redac.codeRedac:values.comments;\r\n                rgtArray.forEach((e,i,arr)=>{\r\n                    console.log(\"ligne de rgt: \"+i);\r\n                    Historique.insert({\r\n                        dateConnexion:new Date(),\r\n                        heure:moment(Date.now()).format(\"HH:mm:ss\"),\r\n                        actions:\"Annulation du reglement \"+e.wnrgt,\r\n                        par:redac.codeRedac\r\n                    });\r\n                     prom= Promise.await(dispoSQL.findOne({\r\n                         where:{\r\n                             wnrgt:e.wnrgt,\r\n                             wnupo:e.wnupo,\r\n                             domaine:e.domaine\r\n                          }}).then(p=>{\r\n                            \r\n                            DBSQLSERVER.query(query,{\r\n                                replacements:{\r\n                                    wnrgt:e.wnrgt,\r\n                                    wnupo:e.wnupo,\r\n                                    d:e.domaine,\r\n                                    stat:\"ANNULER\",\r\n                                    com:comment\r\n                                },\r\n                                type:DBSQLSERVER.QueryTypes.UPDATE\r\n                            }).catch((err)=>{\r\n                                console.log(err);\r\n                                return err.reason;\r\n                            });\r\n                          }));\r\n                        });\r\n                    return prom;\r\n                break;\r\n                default:\r\n                throw new Meteor.Error(\"bad-date\",\"Veuillez re essayer\" )\r\n                break;\r\n            }\r\n            \r\n        },\r\n        updateDispo(newval,initialValues){\r\n            console.dir(newval);\r\n            let statut=\"EN COURS\";\r\n            newval.date_depot_treso=newval.date_depot_treso?newval.date_depot_treso:initialValues.date_depot_treso?initialValues.date_depot_treso:null;\r\n                    newval.date_sort_treso=newval.date_sort_treso?newval.date_sort_treso:initialValues.date_sort_treso?initialValues.date_sort_treso:null;\r\n                    newval.date_depot_sign=newval.date_depot_sign?newval.date_depot_sign:initialValues.date_depot_sign?initialValues.date_depot_sign:null;\r\n                    newval.date_recep_sign_reg= newval.date_recep_sign_reg? newval.date_recep_sign_reg:initialValues.date_recep_sign_reg?initialValues.date_recep_sign_reg:null;\r\n                    newval.date_retrait_reg=newval.date_retrait_reg?newval.date_retrait_reg:initialValues.date_retrait_reg?initialValues.date_retrait_reg:null;\r\n                    /*let statut=!newval.statut?initialValues.statut_reg_retirer:\"EN COURS\";\r\n                    newval.statut=newval.date_retrait_reg && !newval.date_recep_sign_reg?\"SORTIE\":newval.date_recep_sign_reg && !newval.date_retrait_reg?\"PRET\":\"EN COURS\";*/\r\n           if(newval.date_depot_treso){\r\n            statut=\"A LA TRESO\";\r\n           }\r\n           if(newval.date_sort_treso){\r\n            statut=\"SORTIE DE TRESO\";\r\n           }\r\n           if(newval.date_depot_sign){\r\n            statut=\"A LA SIGNATURE\";\r\n           }\r\n           if(newval.date_recep_sign_reg){\r\n            statut=\"PRET\";\r\n           }\r\n           if(newval.date_retrait_reg){\r\n               statut=\"SORTIE\"\r\n           }\r\n            const redac=Meteor.users.findOne({_id:Meteor.user()._id});\r\n             let query=\"update exp.regdispo set date_depot_treso=:ddt, date_sort_treso=:dst, date_depot_sign=:dds,date_recep_sign_reg=:drsr,date_retrait_reg=:drr,redac=:r,statut_reg_retirer=:srr where wnupo=:wnupo and wnrgt=:wnrgt and domaine=:d \";\r\n                let res=DBSQLSERVER.query(query,{\r\n                                replacements:{\r\n                                    wnrgt:newval.wnrgt,\r\n                                    wnupo:newval.wnupo,\r\n                                    d:newval.domaine,\r\n                                    ddt:newval.date_depot_treso,\r\n                                    dst:newval.date_sort_treso,\r\n                                    dds:newval.date_depot_sign,\r\n                                    drsr:newval.date_recep_sign_reg,\r\n                                    drr:newval.date_retrait_reg,\r\n                                    r:redac.codeRedac,\r\n                                    srr:statut\r\n                                },\r\n                                type:DBSQLSERVER.QueryTypes.UPDATE\r\n                            }).catch((err)=>{\r\n                    console.log(err);\r\n                    return err.reason;\r\n                });\r\n            /*dispoSQL.findOne({where:{wnrgt:newval.wnrgt,domaine:newval.domaine}}).then((e)=>{\r\n                e.update({\r\n                    date_depot_treso:newval.date_depot_treso,\r\n                    date_sort_treso:newval.date_sort_treso,\r\n                    date_depot_sign:newval.date_depot_sign,\r\n                    date_recep_sign_reg:newval.date_recep_sign_reg,\r\n                    date_retrait_reg:newval.date_retrait_reg,\r\n                    redac:redac.codeRedac,\r\n                    statut_reg_retirer:statut\r\n                    \r\n                }).catch((err)=>{\r\n                    console.log(err);\r\n                    return err.reason;\r\n                });\r\n            });*/\r\n            ///////////////////////////            \r\n        },\r\n        updateDisposBank(values,initialValues){\r\n            if(initialValues.statut_reg_retirer==\"SORTIE\"){\r\n                const redac=Meteor.users.findOne({_id:Meteor.user()._id});\r\n                let query=\"update exp.regdispo set ValBank=:v, CommentsBank=:c where wnupo=:wnupo and wnrgt=:wnrgt and domaine=:d \";\r\n                Historique.insert({\r\n                    dateConnexion:new date(),\r\n                    heure:moment(date.now()).format(\"HH:mm:ss\"),\r\n                    actions:\"Annulation du reglement \"+e.wnrgt,\r\n                    par:redac.codeRedac\r\n                });\r\n                let res=DBSQLSERVER.query(query,{\r\n                                replacements:{\r\n                                    wnrgt:initialValues.wnrgt,\r\n                                    wnupo:initialValues.wnupo,\r\n                                    d:initialValues.domaine,\r\n                                    v:values.choixbank,\r\n                                    c:values.comment\r\n                                },\r\n                                type:DBSQLSERVER.QueryTypes.UPDATE\r\n                            }).catch((err)=>{\r\n                    console.log(err);\r\n                    return err.reason;\r\n                });\r\n                pubsub.publish('rgtUpdated', { reg: initialValues, wnrgt:initialValues.wnrgt })\r\n            }else{\r\n                throw new Meteor.Error(\"access-error\",\"Vous ne pouvez pas modifier ce reglement. Veuillez contacter un administrateur\");\r\n            }\r\n            console.dir(initialValues);\r\n        },\r\n        voirInfoReg(args){\r\n                 let query=\"exec info_reg_dispo :numero_reg,:domaine \";\r\n                let res=DBSQLSERVER.query(query,{\r\n                                replacements:{\r\n                                    numero_reg:args.wnrgt,\r\n                                    domaine:args.domaine\r\n                                },\r\n                                type:DBSQLSERVER.QueryTypes.SELECT\r\n                            });\r\n                            return res;\r\n        },\r\n        maj_database(){\r\n            let query=\"exec chargement_reg_module \";\r\n            \r\n            //ca charge les reglements dans la base\r\n               let r= DBSQLSERVER.query(query,{\r\n                                type:DBSQLSERVER.QueryTypes.INSERT\r\n                            })\r\n                    return r;\r\n           \r\n                           // return res;\r\n        },\r\n       /* maj_dateRDV(toffset){\r\n            let inforegQ=\"exec info_reg_dispo :numero_reg,:domaine \";\r\n            let upQ=\"update exp.regdispo set dateRDV=:drdv where wnupo=:wnupo and wnrgt=:wnrgt and dateRDV IS NULL \";\r\n             //On fait des modifs sur les champs dans la base comme le calcul de la date de RDV\r\n            let r=Promise.await(dispoSQL.findAll({attributes:{exclude:['id']},where:{\r\n                dateRDV:{\r\n                    $eq:null\r\n                },\r\n                $or:[\r\n                    {\r\n                        MRGGT:'C'\r\n                    },\r\n                    {\r\n                        MRGGT:'E'\r\n                    }\r\n                ]\r\n           },order:[['wnrgt','DESC']],offset:toffset,limit:25000}).then((res)=>{\r\n               if(!res.length)return;\r\n                   let promises=[];\r\n                   let dispo;\r\n                   console.log(\"longueur de res \"+res.length);\r\n                   res.forEach((r)=>{\r\n                       promises.push(\r\n                           PromiseB.all([\r\n                           DBSQLSERVER.query(inforegQ,{ replacements:{numero_reg:r.wnrgt,domaine:r.domaine},type:DBSQLSERVER.QueryTypes.SELECT})\r\n                           ]).spread((infosurrgt)=>{\r\n                               dispo=r.toJSON();\r\n                               dispo.infoSurRgt=infosurrgt;\r\n                           \r\n                               return dispo;\r\n                           })\r\n                       );\r\n                   });\r\n                   return PromiseB.all(promises)\r\n                   \r\n               }).then((dispos)=>{\r\n                   console.log(\"Les dispos completes sont: \"+dispos.length)\r\n                   let nd=dispos.map((e,i,arr)=>{\r\n                       if(e.infoSurRgt.length>1){\r\n                           let goodelem=e.infoSurRgt[0];\r\n                           //console.log(\"reglement \"+e.wnrgt);\r\n                           //console.dir(e);\r\n                           e.infoSurRgt=[];\r\n                           e.infoSurRgt.push(goodelem);\r\n                       }\r\n                       return e;\r\n                   });\r\n                   console.log(\"longueur de nd \"+nd.length);\r\n                   //On check et on calcule la date de RDV pour chaque reglement dont la dateRDV n'est pas a jour\r\n                   nd.map((e,i,arr)=>{\r\n                       //console.log(\"type de Type sINISTRE: \"+typeof e.infoSurRgt[0].TYPE_SINISTRE);\r\n                    let rdvDate;\r\n                    if(typeof e.infoSurRgt[0]!=\"undefined\"||typeof e.infoSurRgt[0].TYPE_SINISTRE!=\"undefined\" || e.infoSurRgt[0].TYPE_SINISTRE!= null ){\r\n                        switch(e.infoSurRgt[0].TYPE_SINISTRE){\r\n                            case \"RACHAT TOTAL\":\r\n                            let get4numbers=parseInt(e.wnupo.toString().substring(0,4),10);//juste pour avoir les 4 premier chiffres fuck\r\n                                //la il ya deux cas celui des polices individuelles et des polices bancassurances\r\n                                //INDIVIDUEL\r\n                                if((get4numbers>1000 && get4numbers<4000)||(get4numbers>7900 &&get4numbers<8000)){\r\n                                     rdvDate=moment(e.infoSurRgt[0].DATE_RECEPTION).add(60,'days');\r\n                                     console.log(\"date reception: \"+e.infoSurRgt[0].DATE_RECEPTION+\" date RDV: \"+moment(rdvDate).format(\"YYYY-MM-DD\"));\r\n                                }\r\n                                //BANCASSURANCE\r\n                                else if(get4numbers>7000 && get4numbers<7900){\r\n                                    rdvDate=moment(e.infoSurRgt[0].DATE_RECEPTION).add(45,'days');\r\n                                    console.log(\"date reception: \"+e.infoSurRgt[0].DATE_RECEPTION+\" date RDV: \"+moment(rdvDate).format(\"YYYY-MM-DD\"));\r\n    \r\n                                }\r\n                            break;\r\n                            case \"RACHAT PARTIEL\":\r\n                            case \"AVANCE\":\r\n                            rdvDate=moment(e.infoSurRgt[0].DATE_RECEPTION).add(21,'days');\r\n                            console.log(\"date reception: \"+e.infoSurRgt[0].DATE_RECEPTION+\" date RDV: \"+moment(rdvDate).format(\"YYYY-MM-DD\"));\r\n                            break;\r\n                            default:\r\n                             rdvDate=null;\r\n                            break;\r\n                           }\r\n                          /* RegUpdated.insert({\r\n                               wasrg:e.wasrg,\r\n                               wnrgt:e.wnrgt,\r\n                               wnupo:e.wnupo\r\n                           });\r\n                        let promises=[];\r\n                        let dispo;\r\n                        console.log(\"valeur de la daterdv: \"+rdvDate);\r\n                        let rD=moment(rdvDate,\"YYYY-MM-DD\",true);\r\n                        console.log(rD);\r\n                        if(rD.isValid()){\r\n                            promises.push(\r\n                                PromiseB.all([\r\n                                DBSQLSERVER.query(upQ,{ replacements:{drdv:rD.isValid()?rD.format(\"YYYY-MM-DD\"):null,wnupo:e.wnupo,wnrgt:e.wnrgt},type:DBSQLSERVER.QueryTypes.UPDATE}).catch((err)=>{\r\n                                    console.log(err);\r\n                                    return err.reason;\r\n                                })\r\n                                ])\r\n                            );\r\n                        }else{\r\n                            console.log(\"date rdv not valid erreur\");\r\n                        }\r\n                    }else{\r\n                        console.log(\"erreur d'infomations infoSurRgt n'est pas fourni loop again\");\r\n                    }\r\n                       \r\n                    \r\n                   });\r\n                    //return nd;\r\n               }));\r\n               console.log(\"next round-------\");\r\n                     let o =toffset+25000;\r\n                     console.log(\"valeur de o:\"+o);\r\n               \r\n                     \r\n                    Meteor.call(\"maj_dateRDV\",o);\r\n                 \r\n               \r\n        },*/\r\n        \r\n    });\r\n};\r\n\r\n\r\n\r\n","import { Meteor } from 'meteor/meteor';\r\nimport './graphql/graphqlServer';\r\nimport publications from './publications/User.js';\r\nimport WhatsNewPub from './publications/WhatsNew.js';\r\nimport {userSQL,dispoSQL,DBSQL,DBSQLSERVER} from './graphql/connectors.js';\r\nimport methods from './methods';\r\nvar schedule = require('node-schedule');\r\n\r\nMeteor.startup(()=>{\r\n   // Meteor.users._ensureIndex({codeRedac:1},{unique:true});\r\n    publications();\r\n    WhatsNewPub();\r\n    methods();\r\n    \r\n   turnAround();\r\n});\r\n\r\nvar w = schedule.scheduleJob(Meteor.settings.RUNMAJ,Meteor.bindEnvironment(function(){\r\n    console.log(\"lancement mise a jour\");\r\n    Meteor.call('maj_database');\r\n        console.log(\"done MAJ regdispo \"+Date.now() );\r\n  }));\r\n\r\nfunction turnAround(){\r\n    if(Meteor.isServer){\r\n        \r\n         Meteor.setTimeout(()=>{\r\n                checkSQLandDoMAJ();\r\n            }, 3000);\r\n    }\r\n}\r\nfunction checkSQLandDoMAJ(){\r\n            console.log(\"in cleaning function\");\r\n            let meteorUsers=Meteor.users.find().fetch();\r\n            let i=0;\r\n            if(meteorUsers.length){\r\n                meteorUsers.forEach((muser)=>{\r\n                    userSQL.findAll({attributes:{exclude:['id']},where:{\r\n                        ulogin:muser.username,\r\n                        //mdp:muser.services.password.bcrypt.substring(0,8)+muser.uncrypted,\r\n                        redac:muser.codeRedac\r\n                    }}).then(Meteor.bindEnvironment((err)=>{\r\n                        if(err.length<=0){\r\n                            //on ne la pas retrouver donc on efface l'element meteor\r\n                            Meteor.users.remove({_id:muser._id});\r\n                        console.dir(err);\r\n                            //console.log(\"unused user account \"+muser.username+\" deleted\");\r\n                        }else{\r\n                            //console.dir(err);\r\n                            console.log(\"found no account to delete\");\r\n                        }\r\n                    }));\r\n                });\r\n            }else{\r\n                //on check si il ya des utilisateurs existants dans sql server si oui on les duplique et les cree dans mongo\r\n                userSQL.findAll({attributes:{exclude:['id']}}).then(Meteor.bindEnvironment((res)=>{\r\n                        if(!res.length){\r\n                            //on ne la pas retrouver donc on efface l'element meteor\r\n                            console.log(\"found no account to copy from in sql server\");\r\n                        //console.dir(err);\r\n                            //console.log(\"unused user account \"+muser.username+\" deleted\");\r\n                        }else{\r\n                           res.map((e,arr,i)=>{\r\n                              // Meteor.call(\"createNewUser\",e);\r\n                            Accounts.createUser({\r\n                                username:e.ulogin,\r\n                                password:e.mdp.substring(8)\r\n                            });\r\n\r\n                            let nuser=Meteor.users.findOne({username:e.ulogin});\r\n\r\n                            Meteor.users.update(nuser._id,{\r\n                                    $set:{\r\n                                        uncrypted:e.mdp.substring(8),\r\n                                        nom:e.nom,\r\n                                        prenoms:e.prenom,\r\n                                        email:e.email,\r\n                                        fullname: e.nom+' '+e.prenom,\r\n                                        hasSeenUpdate:false,\r\n                                        seenUpdateXtime:0,\r\n                                        isNewsThere:false,\r\n                                        NewsID:null,\r\n                                        codeRedac:e.redac.toUpperCase(),\r\n                                        role:e.role\r\n                                    }\r\n                                });\r\n                                if(e.nom==\"zehi\"){\r\n                                    let message=\"<p><em>Ceci est un message automatique, veuillez ne pas y rÃ©pondre.</em></p><br/><p>Bonjour Monsieur/Madame,</p><p>Veuillez trouver ci dessous vos accÃ¨s au module <b>GESDREG</b> en charge de la gestion des disponibilitÃ©s de rÃ¨glements. </p><br/><p>Identifiant:<b> \"+values.username+\"</b><br/>Mot de passe:<b> \"+values.passwordconf+\"</b></p><p>Votre application est accÃ¨ssible via le lien suivant:<a href='http://nvmob-srv:8082'>http://nvmob-srv:8082</a></p><p>Pour un fonctionnement optimal veuillez ouvrir l'application avec les navigateur <b>Google Chrome ou Mozilla Firefox</b></p><br/><br/><p>Cordialement, DSI NSIA VIE ASSURANCES</p>\";\r\n                                    Meteor.call(\"sendEmail\",values.email,\"info@nsiavieapplications.com\",\"Vos identifiants sur le module GESDREG(Gestion des disponibilitÃ©s de rÃ¨glement)\",message);\r\n                                }\r\n                                let muser=Meteor.users.findOne({username:e.ulogin});\r\n                                if(muser){\r\n                                    console.log(\"inserted in mongo users \"+(++i));\r\n                                }\r\n                                    \r\n                           });  \r\n                            Meteor.call(\"quoiDeneuf\",()=>{\r\n                                console.log(\"Mises Ã  jour chargÃ©es\");\r\n                            });\r\n                        }\r\n                    }));\r\n            }\r\n           \r\n        }"]}